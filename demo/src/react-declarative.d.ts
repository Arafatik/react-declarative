declare module'react-declarative'{import{TypedField as TypedFieldInternal}from'react-declarative/model/TypedField';import{IField as IFieldInternal}from'react-declarative/model/IField';import{IEntity as IEntityInternal}from'react-declarative/model/IEntity';import{IManaged as IManagedInternal}from'react-declarative/model/IManaged';import{IColumn as IColumnInternal}from'react-declarative/model/IColumn';import{ITab as ITabInternal}from'react-declarative/model/ITab';import{IApiPaginatorParams as IApiPaginatorParamsInternal}from'react-declarative/components/List/api/useApiPaginator';import{IArrayPaginatorParams as IArrayPaginatorParamsInternal}from'react-declarative/components/List/api/useArrayPaginator';import{IApiHandlerParams as IApiHandlerParamsInternal}from'react-declarative/components/One/api/useApiHandler';export type IListApiPaginatorParams=IApiPaginatorParamsInternal;export type ILastArrayPaginatorParams=IArrayPaginatorParamsInternal;export type IOneApiHandlerParams=IApiHandlerParamsInternal;import{FieldType as FieldTypeInternal}from'react-declarative/model/FieldType';import{ColumnType as ColumnTypeInternal}from'react-declarative/model/ColumnType';import{ActionType as ActionTypeInternal}from'react-declarative/model/ActionType';import{SelectionMode as SelectionModeInternal}from'react-declarative/model/SelectionMode';import{IListApi as IListApiInternal}from'react-declarative/model/IListApi';import{IOneApi as IOneApiInternal}from'react-declarative/model/IOneApi';import{IListOperation as IListOperationInternal}from'react-declarative/model/IListOperation';import{IListRowAction as IListRowActionInternal}from'react-declarative/model/IListRowAction';import{IListAction as IListActionInternal}from'react-declarative/model/IListProps';import{IListChip as IListChipInternal}from'react-declarative/model/IListProps';import{IOption as IOptionInternal}from'react-declarative/model/IOption';import{IBreadcrumbsOption as IBreadcrumbsOptionInternal}from'react-declarative/model/IBreadcrumbsOption';export{createServiceManager}from'react-declarative/helpers/serviceManager';export{serviceManager}from'react-declarative/helpers/serviceManager';export{createRouteItemManager}from'react-declarative/helpers/routeManager';export{createRouteParamsManager}from'react-declarative/helpers/routeManager';export{useRouteItem}from'react-declarative/hooks/useRouteItem';export{useRouteParams}from'react-declarative/hooks/useRouteParams';export{RouteManager}from'react-declarative/helpers/routeManager';export{prefetch}from'react-declarative/helpers/serviceManager';export{unload}from'react-declarative/helpers/serviceManager';export{provide}from'react-declarative/helpers/serviceManager';export{inject}from'react-declarative/helpers/serviceManager';import{IMenuGroup as IMenuGroupInternal,IMenuOption as IMenuOptionInternal}from'react-declarative/model/IMenuGroup';import{ListHandlerPagination as ListHandlerPaginationInternal}from'react-declarative/model/IListProps';import{ListHandlerSortModel as ListHandlerSortModelInternal}from'react-declarative/model/IListProps';import{ListHandlerChips as ListHandlerChipsInternal}from'react-declarative/model/IListProps';import{ListHandlerResult as ListHandlerResultInternal}from'react-declarative/model/IListProps';import{ListHandler as ListHandlerInternal}from'react-declarative/model/IListProps';import{OneHandler as OneHandlerInternal}from'react-declarative/model/IOneProps';import{useActualCallback}from'react-declarative/hooks/useActualCallback';import{useActualValue}from'react-declarative/hooks/useActualValue';import{useActualState}from'react-declarative/hooks/useActualState';import{useChangeSubject}from'react-declarative/hooks/useChangeSubject';import{useReloadTrigger}from'react-declarative/hooks/useReloadTrigger';import{useSingleton}from'react-declarative/hooks/useSingleton';import{useChange}from'react-declarative/hooks/useChange';import{useModel}from'react-declarative/hooks/useModel';import{useEntity}from'react-declarative/hooks/useEntity';import{useListEditor}from'react-declarative/hooks/useListEditor';import{useCollection}from'react-declarative/hooks/useCollection';import{useModelBinding}from'react-declarative/hooks/useModelBinding';import{useEntityBinding}from'react-declarative/hooks/useEntityBinding';import{useCollectionBinding}from'react-declarative/hooks/useCollectionBinding';import{useModal}from'react-declarative/components/ModalProvider';import{useSnack}from'react-declarative/components/SnackProvider';import{useSize}from'react-declarative/components/SizeProvider';import{useList}from'react-declarative/hooks/useList';import{useFile}from'react-declarative/hooks/useFile';import{useConfirm}from'react-declarative/hooks/useConfirm';import{usePrompt}from'react-declarative/hooks/usePrompt';import{useDate}from'react-declarative/hooks/useDate';import{useTime}from'react-declarative/hooks/useTime';import{useOne}from'react-declarative/hooks/useOne';import{useOneTyped}from'react-declarative/hooks/useOne';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';export type{IRowData,RowId};import{ISwitchItem as ISwitchItemInternal}from'react-declarative/components';import{IActionFilter as IActionFilterInternal}from'react-declarative/components';import{IActionTrigger as IActionTriggerInternal}from'react-declarative/components';import{IScaffoldOption as IScaffoldOptionInternal}from'react-declarative/components';export type ISwitchItem=ISwitchItemInternal;export type IActionFilter=IActionFilterInternal;export type IActionTrigger<Data extends object=any>=IActionTriggerInternal<Data>;export const FieldType:typeof FieldTypeInternal;export const ColumnType:typeof ColumnTypeInternal;export const ActionType:typeof ActionTypeInternal;export const SelectionMode:typeof SelectionModeInternal;export type TypedField<Data=IAnything>=TypedFieldInternal<Data>;export type IField<Data=IAnything>=IFieldInternal<Data>;export type IFieldEntity<Data=IAnything>=IEntityInternal<Data>;export type IFieldManaged<Data=IAnything,Value=IAnything>=IManagedInternal<Data,Value>;export type ITab<T extends unknown=string>=ITabInternal<T>;export type ListHandler<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>=ListHandlerInternal<FilterData,RowData>;export type ListHandlerResult<RowData extends IRowData=IAnything>=ListHandlerResultInternal<RowData>;export type OneHandler<Data=IAnything>=OneHandlerInternal<Data>;export type ListHandlerPagination=ListHandlerPaginationInternal;export type ListHandlerSortModel<RowData extends IRowData=IAnything>=ListHandlerSortModelInternal<RowData>;export type ListHandlerChips<RowData extends IRowData=IAnything>=ListHandlerChipsInternal<RowData>;export type IListRowAction<RowData extends IRowData=IAnything>=IListRowActionInternal<RowData>;export type IListChip<RowData extends IRowData=IAnything>=IListChipInternal<RowData>;export type IListOperation=IListOperationInternal;export type IListAction=IListActionInternal;export type IListApi<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>=IListApiInternal<FilterData,RowData>;export type IOneApi<Data=IAnything>=IOneApiInternal<Data>;export type IMenuOption=IMenuOptionInternal;export type IMenuGroup=IMenuGroupInternal;export type IOption=IOptionInternal;export type IColumn=IColumnInternal;export type IBreadcrumbsOption=IBreadcrumbsOptionInternal;export type IScaffoldOption=IScaffoldOptionInternal;export type pickOneTypedFn=ReturnType<typeof useOneTyped>;export type pickOneFn=ReturnType<typeof useOne>;export type pickDateFn=ReturnType<typeof useDate>;export type pickTimeFn=ReturnType<typeof useTime>;export type pickListFn=ReturnType<typeof useList>;export type pickConfirmFn=ReturnType<typeof useConfirm>;export type pickPromptFn=ReturnType<typeof usePrompt>;export{default as dayjs}from'dayjs';export{ConstraintView}from'react-declarative/components';export{DragDropView}from'react-declarative/components';export{ScrollView}from'react-declarative/components';export{ScaleView}from'react-declarative/components';export{FetchView}from'react-declarative/components';export{FadeView}from'react-declarative/components';export{TabsView}from'react-declarative/components';export{WaitView}from'react-declarative/components';export{PingView}from'react-declarative/components';export{OfflineView}from'react-declarative/components';export{RevealView}from'react-declarative/components';export{SecretView}from'react-declarative/components';export{PortalView}from'react-declarative/components';export{ErrorBoundary}from'react-declarative/components';export{AutoSizer}from'react-declarative/components';export{ActionStopIcon}from'react-declarative/components';export{ActionTrigger}from'react-declarative/components';export{ActionFilter}from'react-declarative/components';export{ActionButton}from'react-declarative/components';export{ActionToggle}from'react-declarative/components';export{ActionMenu}from'react-declarative/components';export{ActionIcon}from'react-declarative/components';export{Async}from'react-declarative/components';export{If}from'react-declarative/components';export{List,ListTyped}from'react-declarative/components';export{One,OneTyped}from'react-declarative/components';export{Translate}from'react-declarative/components';export{register as registerTr}from'react-declarative/components/Translate';export{ModalProvider}from'react-declarative/components';export{SizeProvider}from'react-declarative/components';export{SnackProvider}from'react-declarative/components';export{Scaffold}from'react-declarative/components';export{OneSlotFactory,OneDefaultSlots}from'react-declarative/components';export{ListSlotFactory,ListDefaultSlots}from'react-declarative/components';export{Breadcrumbs}from'react-declarative/components';export{Switch}from'react-declarative/components';export{NoSsr}from'react-declarative/components';export{OtherComboSlot}from'react-declarative/components';export{OtherItemsSlot}from'react-declarative/components';export{useCachedPaginator}from'react-declarative/components';export{useArrayPaginator}from'react-declarative/components';export{useApiPaginator}from'react-declarative/components';export{useLastPagination}from'react-declarative/components';export{useStaticHandler}from'react-declarative/components';export{usePreventLeave}from'react-declarative/components';export{useLocalHandler}from'react-declarative/components';export{useApiHandler}from'react-declarative/components';export{useTabsHashstate}from'react-declarative/components';export{createField,makeField}from'react-declarative/components';export{useListProps,useListCachedRows}from'react-declarative/components';export{useOneProps,useOneState}from'react-declarative/components';export{useActualCallback};export{useActualValue};export{useActualState};export{useChangeSubject};export{useReloadTrigger};export{useSingleton};export{useChange};export{useModel};export{useEntity};export{useListEditor};export{useCollection};export{useModelBinding};export{useEntityBinding};export{useCollectionBinding};export{useOne,useOneTyped};export{useDate,useTime};export{useConfirm};export{usePrompt};export{useSnack};export{useModal};export{useSize};export{useList};export{useFile};import{IOnePublicProps as IOnePublicPropsInternal}from'react-declarative/model/IOnePublicProps';export type IOnePublicProps<Data=IAnything,Field extends IField<Data>=IField<Data>>=IOnePublicPropsInternal<Data,Field>;import{ICheckBoxSlot as ICheckBoxSlotInternal}from'react-declarative/components';import{IComboSlot as IComboSlotInternal}from'react-declarative/components';import{IItemsSlot as IItemsSlotInternal}from'react-declarative/components';import{ILineSlot as ILineSlotInternal}from'react-declarative/components';import{IProgressSlot as IProgressSlotInternal}from'react-declarative/components';import{IRadioSlot as IRadioSlotInternal}from'react-declarative/components';import{IRatingSlot as IRatingSlotInternal}from'react-declarative/components';import{ISliderSlot as ISliderSlotInternal}from'react-declarative/components';import{ISwitchSlot as ISwitchSlotInternal}from'react-declarative/components';import{ITextSlot as ITextSlotInternal}from'react-declarative/components';import{ITypographySlot as ITypographySlotInternal}from'react-declarative/components';import{IActionAddSlot as IActionAddSlotInternal}from'react-declarative/components';import{IActionFabSlot as IActionFabSlotInternal}from'react-declarative/components';import{IActionMenuSlot as IActionMenuSlotInternal}from'react-declarative/components';import{IBodyRowSlot as IBodyRowSlotInternal}from'react-declarative/components';import{ICheckboxCellSlot as ICheckboxCellSlotInternal}from'react-declarative/components';import{ICommonCellSlot as ICommonCellSlotInternal}from'react-declarative/components';import{IHeadRowSlot as IHeadRowSlotInternal}from'react-declarative/components';import{IActionListSlot as IActionListSlotInternal}from'react-declarative/components';import{IChipListSlot as IChipListSlotInternal}from'react-declarative/components';import{IFilterListSlot as IFilterListSlotInternal}from'react-declarative/components';import{ISearchSlot as ISearchSlotInternal}from'react-declarative/components';import{IOperationListSlot as IOperationListSlotInternal}from'react-declarative/components';export type ICheckBoxSlot=ICheckBoxSlotInternal;export type IComboSlot=IComboSlotInternal;export type IItemsSlot=IItemsSlotInternal;export type ILineSlot=ILineSlotInternal;export type IProgressSlot=IProgressSlotInternal;export type IRadioSlot=IRadioSlotInternal;export type IRatingSlot=IRatingSlotInternal;export type ISliderSlot=ISliderSlotInternal;export type ISwitchSlot=ISwitchSlotInternal;export type ITextSlot=ITextSlotInternal;export type ITypographySlot=ITypographySlotInternal;export type IActionAddSlot=IActionAddSlotInternal;export type IActionFabSlot=IActionFabSlotInternal;export type IActionMenuSlot=IActionMenuSlotInternal;export type IBodyRowSlot=IBodyRowSlotInternal;export type ICheckboxCellSlot=ICheckboxCellSlotInternal;export type ICommonCellSlot=ICommonCellSlotInternal;export type IHeadRowSlot=IHeadRowSlotInternal;export type IActionListSlot=IActionListSlotInternal;export type IChipListSlot=IChipListSlotInternal;export type IFilterListSlot=IFilterListSlotInternal;export type ISearchSlot=ISearchSlotInternal;export type IOperationListSlot=IOperationListSlotInternal;export{getRouteParams}from'react-declarative/utils/getRouteParams';export{getRouteItem}from'react-declarative/utils/getRouteItem';export{getElementFromXPath}from'react-declarative/utils/getElementFromXPath';export{getXPathFromElement}from'react-declarative/utils/getXPathFromElement';export{arrays}from'react-declarative/utils/arrays';export{objects}from'react-declarative/utils/objects';export{FetchError,fetchApi}from'react-declarative/utils/fetchApi';export{createProvider}from'react-declarative/utils/createProvider';export{formatText}from'react-declarative/utils/formatText';export{roundTicks}from'react-declarative/utils/roundTicks';export{wordForm}from'react-declarative/utils/wordForm';export{singleshot}from'react-declarative/utils/hof/singleshot';export{cancelable}from'react-declarative/utils/hof/cancelable';export{debounce}from'react-declarative/utils/hof/debounce';export{queued}from'react-declarative/utils/hof/queued';export{cached}from'react-declarative/utils/hof/cached';export{BehaviorSubject}from'react-declarative/utils/rx/BehaviorSubject';export{EventEmitter}from'react-declarative/utils/rx/EventEmitter';export{Subject}from'react-declarative/utils/rx/Subject';import{IEntityAdapter as IEntityAdapterInternal,IEntity as IMvvmEntity}from'react-declarative/utils/mvvm/Entity';import{ICollectionAdapter as ICollectionAdapterInternal}from'react-declarative/utils/mvvm/Collection';import{IModelAdapter as IModelAdapterInternal}from'react-declarative/utils/mvvm/Model';export type ICollectionAdapter<T extends IMvvmEntity=any>=ICollectionAdapterInternal<T>;export type IEntityAdapter<T extends IMvvmEntity=any>=IEntityAdapterInternal<T>;export type IModelAdapter<T extends{}=any>=IModelAdapterInternal<T>;export{Collection}from'react-declarative/utils/mvvm/Collection';export{Entity}from'react-declarative/utils/mvvm/Entity';export{Model}from'react-declarative/utils/mvvm/Model';export{formatAmount}from'react-declarative/utils/formatAmount';export{createWindowHistory}from'react-declarative/utils/createWindowHistory';export{createLsManager}from'react-declarative/utils/createLsManager';export{createSsManager}from'react-declarative/utils/createSsManager';export{createCustomTag}from'react-declarative/utils/createCustomTag';export{mainColor}from'react-declarative/utils/mainColor';export{cacheSrc}from'react-declarative/utils/cacheSrc';export{parseBase64Json,stringifyBase64Json}from'react-declarative/utils/base64Json';import*as datetimeInternal from'react-declarative/utils/datetime';export const typo:{thinsp:" ";nbsp:" ";emdash:"—";endash:"–";};export const datetime:{DATE_TEMPLATE:"DD.MM.YYYY";TIME_TEMPLATE:"HH:MM";Time:typeof datetimeInternal.Time;parseDate:(str:string)=>import("dayjs").Dayjs|null;serializeDate:(date:import("dayjs").Dayjs|Date)=>string|null;parseTime:(time:string)=>datetimeInternal.Time|null;serializeTime:(time:import("dayjs").Dayjs|Date|datetimeInternal.Time)=>string|null;};export{compose}from'react-declarative/utils/compose';}declare module'react-declarative/model/TypedField'{import IManaged,{IManagedShallow}from'react-declarative/model/IManaged';import IEntity from'react-declarative/model/IEntity';import FieldType from'react-declarative/model/FieldType';import IAnything from'react-declarative/model/IAnything';import{IFragmentLayoutProps}from'react-declarative/components/One/layouts/FragmentLayout';import{IDivLayoutProps}from'react-declarative/components/One/layouts/DivLayout';import{ITabsLayoutProps}from'react-declarative/components/One/layouts/TabsLayout';import{ICenterLayoutProps}from'react-declarative/components/One/layouts/CenterLayout';import{IStretchLayoutProps}from'react-declarative/components/One/layouts/StretchLayout';import{IGroupLayoutProps}from'react-declarative/components/One/layouts/GroupLayout';import{IOutlineLayoutProps}from'react-declarative/components/One/layouts/OutlineLayout';import{IPaperLayoutProps}from'react-declarative/components/One/layouts/PaperLayout';import{IExpansionLayoutProps}from'react-declarative/components/One/layouts/ExpansionLayout';import{IHeroLayoutProps}from'react-declarative/components/One/layouts/HeroLayout';import{IConditionLayoutProps}from'react-declarative/components/One/layouts/ConditionLayout';import{ICheckboxFieldProps}from'react-declarative/components/One/fields/CheckboxField';import{IComboFieldProps}from'react-declarative/components/One/fields/ComboField';import{IComponentFieldProps}from'react-declarative/components/One/fields/ComponentField';import{IItemsFieldProps}from'react-declarative/components/One/fields/ItemsField';import{ILineFieldProps}from'react-declarative/components/One/fields/LineField';import{IProgressFieldProps}from'react-declarative/components/One/fields/ProgressField';import{IRadioFieldProps}from'react-declarative/components/One/fields/RadioField';import{IRatingFieldProps}from'react-declarative/components/One/fields/RatingField';import{ISliderFieldProps}from'react-declarative/components/One/fields/SliderField';import{ISwitchFieldProps}from'react-declarative/components/One/fields/SwitchField';import{ITextFieldProps}from'react-declarative/components/One/fields/TextField';import{ITypographyFieldProps}from'react-declarative/components/One/fields/TypographyField';type Exclude<Data=IAnything>=Omit<IManaged<Data>,keyof IEntity<Data>>;type TypedFieldFactory<Type extends FieldType,Fields extends{},Data=IAnything>={[Prop in keyof Omit<Fields,keyof Exclude<Data>>]?:Fields[Prop];}&{type:Type;};type TypedFieldFactoryShallow<Type extends FieldType,Fields extends{},Data=IAnything>=IManagedShallow<Data>&TypedFieldFactory<Type,Fields,Data>;type Group<Data=IAnything>=TypedFieldFactory<FieldType.Group,IGroupLayoutProps<Data>,Data>;type Paper<Data=IAnything>=TypedFieldFactory<FieldType.Paper,IPaperLayoutProps<Data>,Data>;type Outline<Data=IAnything>=TypedFieldFactory<FieldType.Outline,IOutlineLayoutProps<Data>,Data>;type Expansion<Data=IAnything>=TypedFieldFactory<FieldType.Expansion,IExpansionLayoutProps<Data>,Data>;type Fragment<Data=IAnything>=TypedFieldFactory<FieldType.Fragment,IFragmentLayoutProps<Data>,Data>;type Div<Data=IAnything>=TypedFieldFactory<FieldType.Div,IDivLayoutProps<Data>,Data>;type Tabs<Data=IAnything>=TypedFieldFactory<FieldType.Tabs,ITabsLayoutProps<Data>,Data>;type Hero<Data=IAnything>=TypedFieldFactory<FieldType.Hero,IHeroLayoutProps<Data>,Data>;type Center<Data=IAnything>=TypedFieldFactory<FieldType.Center,ICenterLayoutProps<Data>,Data>;type Stretch<Data=IAnything>=TypedFieldFactory<FieldType.Stretch,IStretchLayoutProps<Data>,Data>;type Condition<Data=IAnything>=TypedFieldFactory<FieldType.Condition,IConditionLayoutProps<Data>,Data>;type Line<Data=IAnything>=TypedFieldFactory<FieldType.Line,ILineFieldProps<Data>,Data>;type Checkbox<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Checkbox,ICheckboxFieldProps<Data>,Data>;type Combo<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Combo,IComboFieldProps<Data>,Data>;type Component<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Component,IComponentFieldProps<Data>,Data>;type Items<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Items,IItemsFieldProps<Data>,Data>;type Progress<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Progress,IProgressFieldProps<Data>,Data>;type Radio<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Radio,IRadioFieldProps<Data>,Data>;type Rating<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Rating,IRatingFieldProps<Data>,Data>;type Slider<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Slider,ISliderFieldProps<Data>,Data>;type Switch<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Switch,ISwitchFieldProps<Data>,Data>;type Text<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Text,ITextFieldProps<Data>,Data>;type Typography<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Typography,ITypographyFieldProps<Data>,Data>;export type TypedFieldRegistry<Data=IAnything,Target=any>=Target extends Expansion<Data>?Expansion<Data>:Target extends Group<Data>?Group<Data>:Target extends Paper<Data>?Paper<Data>:Target extends Outline<Data>?Outline<Data>:Target extends Checkbox<Data>?Checkbox<Data>:Target extends Combo<Data>?Combo<Data>:Target extends Component<Data>?Component<Data>:Target extends Items<Data>?Items<Data>:Target extends Line<Data>?Line<Data>:Target extends Progress<Data>?Progress<Data>:Target extends Radio<Data>?Radio<Data>:Target extends Rating<Data>?Rating<Data>:Target extends Slider<Data>?Slider<Data>:Target extends Switch<Data>?Switch<Data>:Target extends Text<Data>?Text<Data>:Target extends Typography<Data>?Typography<Data>:Target extends Fragment<Data>?Fragment<Data>:Target extends Div<Data>?Div<Data>:Target extends Tabs<Data>?Tabs<Data>:Target extends Center<Data>?Center<Data>:Target extends Stretch<Data>?Stretch<Data>:Target extends Hero<Data>?Hero<Data>:Target extends Condition<Data>?Condition<Data>:never;export type TypedField<Data=IAnything>=TypedFieldRegistry<Data>&{name?:string;fields?:TypedField<Data>[];child?:TypedField<Data>;};export default TypedField;}declare module'react-declarative/model/IField'{import*as React from'react';import{ISizeCallback}from'react-declarative/model/ISize';import FieldType from'react-declarative/model/FieldType';import IAnything from'react-declarative/model/IAnything';import{SxProps}from'@mui/material';export type Value=string|string[]|number|boolean|null;export interface IField<Data=IAnything>{name?:string;roles?:string[];focus?:(name:string)=>void;blur?:(name:string)=>void;readonly?:boolean;outlined?:boolean;groupRef?:(element?:HTMLDivElement|null)=>void;inputRef?:(element?:HTMLInputElement|null)=>void;autoFocus?:boolean;disabled?:boolean;radioValue?:string;inputType?:keyof{'text':never;'color':never;'date':never;'email':never;'month':never;'number':never;'password':never;'search':never;'tel':never;'time':never;'url':never;'week':never;};inputPattern?:string;inputMode?:keyof{'none':never;'text':never;'tel':never;'url':never;'email':never;'numeric':never;'decimal':never;'search':never;};inputFormatter?:(input:string)=>string;inputFormatterTemplate?:string;inputFormatterSymbol?:string;inputFormatterAllowed?:RegExp|((char:string,idx:number)=>boolean);inputFormatterReplace?:(char:string)=>string|null;inputAutocomplete?:keyof{'new-password':never;'on':never;'off':never;'false':never;};tabList?:string[];tabIndex?:number;tabVariant?:"fullWidth"|"standard"|"scrollable";tabColor?:"primary"|"secondary";tabKeepFlow?:boolean;tabChange?:(idx:number)=>void;tabLine?:boolean;tabBackground?:boolean;inputRows?:number;leadingIcon?:string|React.ComponentType;trailingIcon?:string|React.ComponentType;leadingIconClick?:(value:any,onChange:(v:any)=>void)=>void;trailingIconClick?:(value:any,onChange:(v:any)=>void)=>void;maxPercent?:number;showPercentLabel?:boolean;innerPadding?:string;sliderThumbColor?:(v:number)=>string;sliderTrackColor?:(v:number)=>string;sliderRailColor?:(v:number)=>string;progressColor?:(v:number)=>string;progressBarColor?:(v:number)=>string;minSlider?:number;maxSlider?:number;stepSlider?:number;labelFormatSlider?:(v:number)=>string|number;itemList?:string[]|((data:Data)=>string[])|((data:Data)=>Promise<string[]>);shouldUpdateItemList?:(prevData:Data|null,nextData:Data)=>boolean;tr?:((s:string)=>string)|((s:string)=>Promise<string>);keepSync?:boolean;type:FieldType;className?:string;style?:React.CSSProperties;title?:string;description?:string;placeholder?:string;columns?:string;phoneColumns?:string;tabletColumns?:string;desktopColumns?:string;sx?:SxProps<any>;columnsOverride?:string;fields?:IField<Data>[];child?:IField<Data>;isInvalid?:(v:Data)=>null|string;isVisible?:(v:Data)=>boolean;isDisabled?:(v:Data)=>boolean;compute?:(v:Data)=>Promise<Value>|Value;element?:React.ComponentType<Data>;invalidity?:(name:string,e:string)=>void;defaultValue?:Value;fieldRightMargin?:string;fieldBottomMargin?:string;typoVariant?:keyof{h2:'h2';h3:'h3';h4:'h4';h5:'h5';h6:'h6';subtitle1:'subtitle1';subtitle2:'subtitle2';body1:'body1';body2:'body2';};condition?:((payload:Data)=>boolean)|((payload:Data)=>Promise<boolean>);top?:string|ISizeCallback<Data>;phoneTop?:string|ISizeCallback<Data>;tabletTop?:string|ISizeCallback<Data>;desktopTop?:string|ISizeCallback<Data>;left?:string|ISizeCallback<Data>;phoneLeft?:string|ISizeCallback<Data>;tabletLeft?:string|ISizeCallback<Data>;desktopLeft?:string|ISizeCallback<Data>;right?:string|ISizeCallback<Data>;phoneRight?:string|ISizeCallback<Data>;tabletRight?:string|ISizeCallback<Data>;desktopRight?:string|ISizeCallback<Data>;bottom?:string|ISizeCallback<Data>;phoneBottom?:string|ISizeCallback<Data>;tabletBottom?:string|ISizeCallback<Data>;desktopBottom?:string|ISizeCallback<Data>;height?:string|ISizeCallback<Data>;phoneHeight?:string|ISizeCallback<Data>;tabletHeight?:string|ISizeCallback<Data>;desktopHeight?:string|ISizeCallback<Data>;minHeight?:string|ISizeCallback<Data>;phoneMinHeight?:string|ISizeCallback<Data>;tabletMinHeight?:string|ISizeCallback<Data>;desktopMinHeight?:string|ISizeCallback<Data>;maxHeight?:string|ISizeCallback<Data>;phoneMaxHeight?:string|ISizeCallback<Data>;tabletMaxHeight?:string|ISizeCallback<Data>;desktopMaxHeight?:string|ISizeCallback<Data>;width?:string|ISizeCallback<Data>;phoneWidth?:string|ISizeCallback<Data>;tabletWidth?:string|ISizeCallback<Data>;desktopWidth?:string|ISizeCallback<Data>;minWidth?:string|ISizeCallback<Data>;phoneMinWidth?:string|ISizeCallback<Data>;tabletMinWidth?:string|ISizeCallback<Data>;desktopMinWidth?:string|ISizeCallback<Data>;maxWidth?:string|ISizeCallback<Data>;phoneMaxWidth?:string|ISizeCallback<Data>;tabletMaxWidth?:string|ISizeCallback<Data>;desktopMaxWidth?:string|ISizeCallback<Data>;heroOuterStyle?:React.CSSProperties;heroOuterPhoneStyle?:React.CSSProperties;heroOuterTabletStyle?:React.CSSProperties;heroOuterDesktopStyle?:React.CSSProperties;heroInnerStyle?:React.CSSProperties;heroInnerPhoneStyle?:React.CSSProperties;heroInnerTabletStyle?:React.CSSProperties;heroInnerDesktopStyle?:React.CSSProperties;}export default IField;}declare module'react-declarative/model/IEntity'{import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';type exclude='defaultValue';export interface IEntity<Data=IAnything>extends Omit<IField<Data>,exclude>{change?:(object:Data,invalidMap:Record<string,boolean>)=>void;invalidity:(name:string,msg:string)=>void;fallback:(e:Error)=>void;dirty?:boolean;prefix:string;ready:()=>void;object:Data;}export default IEntity;}declare module'react-declarative/model/IManaged'{import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';export type PickProp<T extends{},P extends keyof T>=T[P];export type DeepPartial<T>={[P in keyof T]?:DeepPartial<T[P]>;};export interface IManagedLayout<Data=IAnything>{columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;sx?:PickProp<IField<Data>,'sx'>;columns?:PickProp<IField<Data>,'columns'>;roles?:PickProp<IField<Data>,'roles'>;phoneColumns?:PickProp<IField<Data>,'phoneColumns'>;tabletColumns?:PickProp<IField<Data>,'tabletColumns'>;desktopColumns?:PickProp<IField<Data>,'desktopColumns'>;fieldRightMargin?:PickProp<IField<Data>,'fieldRightMargin'>;fieldBottomMargin?:PickProp<IField<Data>,'fieldBottomMargin'>;}export interface IManagedShallow<Data=IAnything>extends IManagedLayout<Data>{isDisabled?:PickProp<IField<Data>,'isDisabled'>;isVisible?:PickProp<IField<Data>,'isVisible'>;isInvalid?:PickProp<IField<Data>,'isInvalid'>;invalidity?:PickProp<IField<Data>,'invalidity'>;compute?:PickProp<IField<Data>,'compute'>;focus?:PickProp<IField<Data>,'focus'>;blur?:PickProp<IField<Data>,'blur'>;defaultValue?:PickProp<IField<Data>,'defaultValue'>;}type Exclude<Data=IAnything>={object:never;type:never;focus:never;blur:never;ready:never;check:never;change:never;name:never;}&IManagedShallow<Data>;export interface IManaged<Data=IAnything,Value=any>extends Omit<IEntity<Data>,keyof Exclude<Data>>{name:string;value:Value;dirty:boolean;disabled:boolean;loading:boolean;readonly:boolean;fieldReadonly:boolean;invalid:string|null;object:Data;onChange:(v:Value,config?:{skipReadonly?:boolean;})=>void;}export default IManaged;}declare module'react-declarative/model/IColumn'{import ColumnType from"react-declarative/model/ColumnType";import{IListActionOption}from"react-declarative/model/IListProps";import IAnything from'react-declarative/model/IAnything';import IRowData from'react-declarative/model/IRowData';import{Value}from'react-declarative/model/IField';export interface IColumn<RowData extends IRowData=IAnything>{type:ColumnType;field?:string;primary?:boolean;secondary?:boolean;headerName:string;width:string|((width:number)=>string|number);minHeight?:string|number;phoneOrder?:number;phoneHidden?:boolean;tabletOrder?:number;tabletHidden?:boolean;desktopOrder?:number;desktopHidden?:boolean;columnMenu?:IListActionOption[];compute?:(row:RowData)=>Promise<Value>|Value;element?:React.ComponentType<RowData>;sortable?:boolean;}export default IColumn;}declare module'react-declarative/model/ITab'{import IOption from"react-declarative/model/IOption";export interface ITab<T extends any=string>extends Omit<IOption,keyof{action:never;isVisible:never;isDisabled:never;}>{value:string;isVisible?:(payload:T)=>Promise<boolean>|boolean;isDisabled?:(payload:T)=>Promise<boolean>|boolean;}export default ITab;}declare module'react-declarative/components/List/api/useApiPaginator'{import{ListHandler,ListHandlerChips,ListHandlerResult,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IApiPaginatorParams<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{origin?:string;fetch?:typeof window.fetch;requestMap?:(url:URL)=>URL;filterHandler?:(url:URL,filterData:FilterData)=>URL;chipsHandler?:(url:URL,chips:ListHandlerChips<RowData>)=>URL;sortHandler?:(url:URL,sort:ListHandlerSortModel<RowData>)=>URL;searchHandler?:(url:URL,search:string)=>URL;paginationHandler?:(url:URL,pagination:ListHandlerPagination)=>URL;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;withAbortSignal?:boolean;withPagination?:boolean;withFilters?:boolean;withChips?:boolean;withSearch?:boolean;withSort?:boolean;fetchParams?:()=>RequestInit;fallback?:(e:Error)=>void;abortSignal?:AbortSignal;responseMap?:(json:Record<string,any>)=>ListHandlerResult<RowData>;}export const useApiPaginator:<FilterData extends{}=any,RowData extends IRowData=any>(path:string,{fetch,origin,abortSignal:signal,fetchParams,fallback,onLoadBegin,onLoadEnd,requestMap,responseMap,filterHandler,chipsHandler,sortHandler,searchHandler,paginationHandler,withAbortSignal,withPagination,withFilters,withSearch,withChips,withSort,}?:IApiPaginatorParams<FilterData,RowData>)=>ListHandler<FilterData,RowData>;export default useApiPaginator;}declare module'react-declarative/components/List/api/useArrayPaginator'{import{ListHandler,ListHandlerChips,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import{IState as ILastPaginationState}from'react-declarative/components/List/api/useLastPagination';export interface IArrayPaginatorParams<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{filterHandler?:(rows:RowData[],filterData:FilterData)=>RowData[];chipsHandler?:(rows:RowData[],chips:ListHandlerChips<RowData>)=>RowData[];sortHandler?:(rows:RowData[],sort:ListHandlerSortModel<RowData>)=>RowData[];paginationHandler?:(rows:RowData[],pagination:ListHandlerPagination)=>RowData[];searchHandler?:(rows:RowData[],search:string)=>RowData[];compareFn?:(a:RowData[keyof RowData],b:RowData[keyof RowData])=>number;withPagination?:boolean;withFilters?:boolean;withChips?:boolean;withSort?:boolean;withTotal?:boolean;withSearch?:boolean;fallback?:(e:Error)=>void;onData?:(rows:RowData[],state:ILastPaginationState<FilterData,RowData>)=>void;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;}export const useArrayPaginator:<FilterData extends{}=any,RowData extends IRowData=any>(rowsHandler:ListHandler<FilterData,RowData>,{compareFn,filterHandler,chipsHandler,sortHandler,searchHandler,paginationHandler,withPagination,withFilters,withChips,withSort,withTotal,withSearch,fallback,onLoadStart,onLoadEnd,onData,}?:IArrayPaginatorParams<FilterData,RowData>)=>ListHandler<FilterData,RowData>;export default useArrayPaginator;}declare module'react-declarative/components/One/api/useApiHandler'{import{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IApiHandlerParams<Data extends IAnything=IAnything>{origin?:string;requestMap?:(url:URL)=>URL;responseMap?:(json:Record<string,any>)=>Data;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;withAbortSignal?:boolean;fetchParams?:()=>RequestInit;fallback?:(e:Error)=>void;abortSignal?:AbortSignal;fetch?:typeof window.fetch;}export const useApiHandler:<Data extends unknown=any>(path:string,{fetch,origin,abortSignal:signal,requestMap,responseMap,onLoadBegin,onLoadEnd,withAbortSignal,fetchParams,fallback,}?:IApiHandlerParams<Data>)=>OneHandler<Data>;export default useApiHandler;}declare module'react-declarative/model/FieldType'{export enum FieldType{Switch="switch-field",Line="line-field",Group="group-layout",Paper="paper-layout",Outline="outline-layout",Expansion="expansion-layout",Radio="radio-field",Checkbox="checkbox-field",Text="text-field",Progress="progress-field",Component="component-field",Slider="slider-field",Combo="combo-field",Items="items-field",Rating="rating-field",Typography="typography-field",Fragment="fragment-layout",Div="div-layout",Tabs="tabs-layout",Hero="hero-layout",Center="center-layout",Stretch="stretch-layout",Condition="condition-layout"}export default FieldType;}declare module'react-declarative/model/ColumnType'{export enum ColumnType{Text="text-cell",Action="action-cell",CheckBox="checkbox-cell",Compute="compute-cell",Component="component-cell"}export default ColumnType;}declare module'react-declarative/model/ActionType'{export enum ActionType{Add="add-action",Fab="fab-action",Menu="menu-action"}export default ActionType;}declare module'react-declarative/model/SelectionMode'{export enum SelectionMode{Single="single-selection",Multiple="multiple-selection",None="none-selection"}export default SelectionMode;}declare module'react-declarative/model/IListApi'{import{IListState}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IListApi<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{reload:(keepPagination?:boolean)=>Promise<void>;rerender:()=>void;setLimit:(limit:number)=>void;setPage:(page:number)=>void;setRows:(rows:RowData[])=>void;getState:()=>IListState<FilterData,RowData>;}export default IListApi;}declare module'react-declarative/model/IOneApi'{import IAnything from"react-declarative/model/IAnything";export interface IOneApi<Data=IAnything>{reload:()=>Promise<void>;change:(data:Data)=>void;getData:()=>Data;}export default IOneApi;}declare module'react-declarative/model/IListOperation'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IOption from"react-declarative/model/IOption";export interface IListOperation<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isAvailable?:((rowIds:RowData[],isAll:boolean)=>boolean|Promise<boolean>)|boolean;}export default IListOperation;}declare module'react-declarative/model/IListRowAction'{import IOption from"react-declarative/model/IOption";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IListRowAction<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(row:RowData)=>Promise<boolean>|boolean;isDisabled?:(row:RowData)=>Promise<boolean>|boolean;enabled?:boolean;}export default IListRowAction;}declare module'react-declarative/model/IListProps'{import{Ref}from'react';import ActionType from'react-declarative/model/ActionType';import SelectionMode from'react-declarative/model/SelectionMode';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';import IColumn from'react-declarative/model/IColumn';import IListOperation from'react-declarative/model/IListOperation';import IListRowAction from'react-declarative/model/IListRowAction';import IField from'react-declarative/model/IField';import IListApi from'react-declarative/model/IListApi';import IOption from'react-declarative/model/IOption';import{ISlotFactoryContext}from'react-declarative/components/List/components/SlotFactory';interface IUpdateOption<RowData extends IRowData=IAnything>extends Omit<IListActionOption<RowData>,keyof{label:never;icon:never;}>{action:'update-now';label?:IOption['label'];icon?:IOption['icon'];}interface IResortOption<RowData extends IRowData=IAnything>extends Omit<IListActionOption<RowData>,keyof{label:never;icon:never;}>{action:'resort-action';label?:IOption['label'];icon?:IOption['icon'];}export interface IListActionOption<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export interface IListAction<RowData extends IRowData=IAnything>{type:ActionType;action?:string;label?:string;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;icon?:React.ComponentType<any>;options?:(IListActionOption<RowData>|IUpdateOption<RowData>|IResortOption<RowData>)[];}export interface IListChip<RowData extends IRowData=IAnything>{name:keyof RowData;label:string;color?:string;enabled?:boolean;}export type ListHandlerResult<RowData extends IRowData=IAnything>=RowData[]|{rows:RowData[];total:number|null;};export type ListAvatar={src?:string;alt?:string;};export type ListHandlerPagination={limit:number;offset:number;};export type ListHandlerChips<RowData extends IRowData=IAnything>=Partial<Record<keyof RowData,boolean>>;export type ListHandlerSortModel<RowData extends IRowData=IAnything>=IListSortItem<RowData>[];export type ListHandler<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>=RowData[]|((data:FilterData,pagination:ListHandlerPagination,sort:ListHandlerSortModel<RowData>,chips:ListHandlerChips<RowData>,search:string)=>Promise<ListHandlerResult<RowData>>|ListHandlerResult<RowData>);export interface IListState<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{initComplete:boolean;filterData:FilterData;isChooser:boolean;rows:RowData[];limit:number;offset:number;total:number|null;loading:boolean;search:string;filtersCollapsed:boolean;sort:ListHandlerSortModel<RowData>;chips:ListHandlerChips<RowData>;rerender:boolean;}export interface IListCallbacks<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{handleDefault:()=>Promise<void>;handleSortModel:(sort:ListHandlerSortModel<RowData>)=>void;handleFilter:(data:FilterData,keepPagination?:boolean)=>void;handlePageChange:(page:number)=>void;handleLimitChange:(limit:number)=>void;handleRowsChange:(rows:RowData[])=>void;handleFiltersCollapsed:(filtersCollapsed:boolean)=>void;handleChips:(chips:ListHandlerChips)=>void;handleReload:(keepPagination?:boolean)=>Promise<void>;handleSearch:(search:string)=>void;handleRerender:()=>void;ready:()=>void;}export interface IListSortItem<RowData extends IRowData=IAnything>{field:keyof RowData;sort:'asc'|'desc';}export interface IListProps<FilterData extends{}=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<FilterData>>{apiRef?:Ref<IListApi<FilterData,RowData>>;className?:string;style?:React.CSSProperties;title?:string;filterLabel?:string;actions?:IListAction<RowData>[];operations?:IListOperation<RowData>[];limit?:number;page?:number;sizeByParent?:boolean;selectedRows?:RowId[];heightRequest?:(height:number)=>number;widthRequest?:(width:number)=>number;onSelectedRows?:(rowIds:RowId[],initialChange:boolean)=>void;onFilterChange?:(data:FilterData)=>void;onChipsChange?:(data:ListHandlerChips<RowData>)=>void;onSearchChange?:(search:string)=>void;onSortModelChange?:(sort:ListHandlerSortModel<RowData>)=>void;onOperation?:(action:string,selectedRows:RowData[],isAll:boolean,reload:(keepPagination?:boolean)=>Promise<void>)=>void;onRowAction?:(action:string,row:RowData,reload:(keepPagination?:boolean)=>Promise<void>)=>void;onRowClick?:(row:RowData,reload:(keepPagination?:boolean)=>Promise<void>)=>void;onPageChange?:(page:number)=>void;onColumnAction?:(field:string,action:string,selectedRows:RowData[],reload:(keepPagination?:boolean)=>Promise<void>)=>void;onLimitChange?:(limit:number)=>void;onLoadStart?:(source:string)=>void;onLoadEnd?:(isOk:boolean,source:string)=>void;onAction?:(action:string,selectedRows:RowData[],reload:(keepPagination?:boolean)=>Promise<void>)=>void;columns:IColumn<RowData>[];filters?:Field[];handler:ListHandler;rowMark?:((row:RowData)=>string)|((row:RowData)=>Promise<string>)|string;fallback?:(e:Error)=>void;rowActions?:IListRowAction[];withToggledFilters?:boolean;withSearch?:boolean;withLoader?:boolean;withMobile?:boolean;withArrowPagination?:boolean;withRangePagination?:boolean;withInitialLoader?:boolean;selectionLabel?:(size:number)=>string|Promise<string>;rowsPerPage?:Array<number|{value:number;label:string;}>;selectionMode?:SelectionMode;chips?:IListChip<RowData>[];chipData?:ListHandlerChips<RowData>;search?:string;filterData?:Partial<FilterData>;sortModel?:ListHandlerSortModel<RowData>;isChooser?:boolean;slots?:Partial<ISlotFactoryContext>;}export default IListProps;}declare module'react-declarative/model/IOption'{export interface IOption{label:string;action:string;icon?:React.ComponentType<any>;isVisible?:()=>Promise<boolean>|boolean;isDisabled?:()=>Promise<boolean>|boolean;}export default IOption;}declare module'react-declarative/model/IBreadcrumbsOption'{import IOption from"react-declarative/model/IOption";export interface IBreadcrumbsOption<T extends any=string>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(payload:T)=>Promise<boolean>|boolean;isDisabled?:(payload:T)=>Promise<boolean>|boolean;}export default IBreadcrumbsOption;}declare module'react-declarative/helpers/serviceManager'{type Key=string|symbol;class ServiceManager{constructor(_name?:string);registerInstance:<T=unknown>(key:Key,inst:T)=>void;registerCreator:<T=unknown>(key:Key,ctor:()=>T)=>void;inject:<T=unknown>(key:Key,verbose?:boolean)=>T;prefetch:((verbose?:any)=>Promise<void>)&import("../utils/hof/singleshot").IClearable;unload:((verbose?:any)=>Promise<void>)&import("../utils/hof/singleshot").IClearable;clear:()=>void;}export const serviceManager:{_serviceManager:ServiceManager;registerInstance:<T=unknown>(key:Key,inst:T)=>void;registerCreator:<T_1=unknown>(key:Key,ctor:()=>T_1)=>void;inject:<T_2=unknown>(key:Key,verbose?:boolean)=>T_2;prefetch:(verbose?:boolean)=>Promise<void>;unload:(verbose?:boolean)=>Promise<void>;clear:()=>void;};const provide:<T=unknown>(key:Key,ctor:()=>T)=>void,inject:<T=unknown>(key:Key,verbose?:boolean)=>T,prefetch:(verbose?:boolean)=>Promise<void>,unload:(verbose?:boolean)=>Promise<void>;export{provide,inject,prefetch,unload,};export const createServiceManager:(name?:string)=>{serviceManager:ServiceManager;provide:<T=unknown>(key:Key,ctor:()=>T)=>void;inject:<T_1=unknown>(key:Key)=>T_1;prefetch:()=>Promise<void>;unload:()=>Promise<void>;dispose:()=>Promise<void>;};export default createServiceManager;}declare module'react-declarative/helpers/routeManager'{import{BrowserHistory,HashHistory,MemoryHistory}from"history";import{ISwitchItem}from"react-declarative/utils/getRouteParams";import Subject from"react-declarative/utils/rx/Subject";export class RouteManager<T extends Record<string,any>=Record<string,any>,I extends ISwitchItem=ISwitchItem>extends Subject<void>{get params():T|null;get item():I|null;constructor(routes:I[],history:MemoryHistory|BrowserHistory|HashHistory);dispose:()=>void;}export const createRouteParamsManager:<T extends Record<string,any>=Record<string,any>,I extends ISwitchItem=ISwitchItem>(routes:I[],history:MemoryHistory|BrowserHistory|HashHistory)=>{():T|null;clear:void;};export const createRouteItemManager:<T extends Record<string,any>=Record<string,any>,I extends ISwitchItem=ISwitchItem>(routes:I[],history:MemoryHistory|BrowserHistory|HashHistory)=>{():I|null;clear:void;};export{ISwitchItem};export default RouteManager;}declare module'react-declarative/hooks/useRouteItem'{import{BrowserHistory,HashHistory,MemoryHistory}from"history";import{ISwitchItem}from"react-declarative/helpers/routeManager";export const useRouteItem:<T extends Record<string,any>=Record<string,any>,I extends ISwitchItem=ISwitchItem>(routes:I[],history:MemoryHistory|BrowserHistory|HashHistory)=>I|null;export default useRouteItem;}declare module'react-declarative/hooks/useRouteParams'{import{BrowserHistory,HashHistory,MemoryHistory}from"history";import{ISwitchItem}from"react-declarative/helpers/routeManager";export const useRouteParams:<T extends Record<string,any>=Record<string,any>,I extends ISwitchItem=ISwitchItem>(routes:I[],history:MemoryHistory|BrowserHistory|HashHistory)=>T|null;export default useRouteParams;}declare module'react-declarative/model/IMenuGroup'{import*as React from'react';export interface IMenuOption<T extends any=string>{name?:string;label:string;icon?:React.ComponentType<any>;lifted?:boolean;roles?:string[];bold?:boolean;visible?:boolean;disabled?:boolean;getRoles?:((payload:T)=>string[])|((payload:T)=>Promise<string[]>);isBold?:((payload:T)=>boolean)|((payload:T)=>Promise<boolean>);isDisabled?:((payload:T)=>boolean)|((payload:T)=>Promise<boolean>);isVisible?:((payload:T)=>boolean)|((payload:T)=>Promise<boolean>);}export interface IMenuGroup<T extends any=string>extends IMenuOption<T>{options?:IMenuGroup<T>[];}export default IMenuGroup;}declare module'react-declarative/model/IOneProps'{import React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import IOneApi from'react-declarative/model/IOneApi';import{ISlotFactoryContext}from'react-declarative/components/One/components/SlotFactory';type DataOrNull<Data=IAnything>=Data|null;export type OneHandler<Data=IAnything>=Data|(()=>DataOrNull<Data>)|(()=>Promise<DataOrNull<Data>>)|null;export interface IOneProps<Data=IAnything,Field=IField<Data>>{apiRef?:React.Ref<IOneApi>;createField?:(entity:IEntity<Data>,currentPath:string)=>React.ReactElement;className?:string;dirty?:boolean;roles?:string[];style?:React.CSSProperties;handler?:OneHandler<Data>;fallback?:(e:Error)=>void;invalidity?:(name:string,e:string)=>void;focus?:(name:string)=>void;blur?:(name:string)=>void;ready?:()=>void;change?:(Data:Data,initial:boolean)=>void;fields:Field[];prefix?:string;loadStart?:(source:string)=>void;loadEnd?:(isOk:boolean,source:string)=>void;readonly?:boolean;slots?:Partial<ISlotFactoryContext>;}export default IOneProps;}declare module'react-declarative/hooks/useActualCallback'{export const useActualCallback:<T extends(...args:any[])=>any>(run:T,deps?:any[])=>T;export default useActualCallback;}declare module'react-declarative/hooks/useActualValue'{export const useActualValue:<T=undefined>(value:T)=>import("react").MutableRefObject<T>;export default useActualValue;}declare module'react-declarative/hooks/useActualState'{export const useActualState:<S=undefined>(initialState?:S|(()=>S)|undefined)=>readonly[import("react").MutableRefObject<S>,import("react").Dispatch<import("react").SetStateAction<S>>];export default useActualState;}declare module'react-declarative/hooks/useChangeSubject'{import Subject from"react-declarative/utils/rx/Subject";export const useChangeSubject:<T=undefined>(value:T)=>Subject<T>;export default useChangeSubject;}declare module'react-declarative/hooks/useReloadTrigger'{export const useReloadTrigger:()=>{reloadTrigger:string;doReload:()=>void;};export default useReloadTrigger;}declare module'react-declarative/hooks/useSingleton'{export const useSingleton:<T=undefined>(value:T|(()=>T))=>T;export default useSingleton;}declare module'react-declarative/hooks/useChange'{export const useChange:(effect:React.EffectCallback,deps?:import("react").DependencyList|undefined)=>void;export default useChange;}declare module'react-declarative/hooks/useModel'{import Model,{IModelAdapter}from"react-declarative/utils/mvvm/Model";import Subject from'react-declarative/utils/rx/Subject';export interface IParams<T extends{}=any>{initialValue:T|Model<T>|(()=>T);onChange?:(item:ModelAdapter<T>)=>void;debounce?:number;}export class ModelAdapter<T extends{}=any>implements IModelAdapter<T>{constructor(_model$:React.MutableRefObject<Model<T>>,_dispose:Subject<true>);get data():T;setData:(data:Partial<T>|((prevData:T)=>Partial<T>))=>Promise<void>;refresh:()=>Promise<void>;toObject:()=>T;toModel:()=>Model<T>;}export const useModel:<T extends{}=any>({initialValue,onChange,debounce}:IParams<T>)=>ModelAdapter<T>;export default useModel;}declare module'react-declarative/hooks/useEntity'{import Entity,{IEntity,IEntityAdapter}from"react-declarative/utils/mvvm/Entity";import Subject from'react-declarative/utils/rx/Subject';export interface IParams<T extends IEntity=any>{initialValue:T|Entity<T>|(()=>T);onChange?:(item:EntityAdapter<T>)=>void;debounce?:number;}export class EntityAdapter<T extends IEntity=any>implements IEntityAdapter<T>{constructor(_entity$:React.MutableRefObject<Entity<T>>,_dispose:Subject<true>);get data():T;get id():string|number;setData:(data:Partial<T>|((prevData:T)=>Partial<T>))=>Promise<void>;refresh:()=>Promise<void>;toObject:()=>T;toEntity:()=>Entity<T>;}export const useEntity:<T extends IEntity=any>({initialValue,onChange,debounce,}:IParams<T>)=>EntityAdapter<T>;export default useEntity;}declare module'react-declarative/hooks/useListEditor'{import React from"react";type RowId=number;export const useListEditor:<Data extends unknown=undefined>(renderItem:(id:RowId,item:Data)=>React.ReactElement,{initialValue,onChange,}:{initialValue?:Data[]|undefined;onChange?:((items:Data[])=>void)|undefined;})=>{onAddItem:(data:Data)=>number;onUpdateItem:(id:RowId,data:Data)=>void;onRemoveItem:(id:RowId)=>void;items:Data[];render:()=>JSX.Element;};export default useListEditor;}declare module'react-declarative/hooks/useCollection'{import Subject from'react-declarative/utils/rx/Subject';import Collection,{ICollectionAdapter}from"react-declarative/utils/mvvm/Collection";import Entity,{IEntity,IEntityAdapter}from"react-declarative/utils/mvvm/Entity";export interface IParams<T extends IEntity=any>{initialValue?:T[]|(()=>T[])|Entity<T>[]|Collection<T>;onChange?:(item:CollectionAdapter<T>,target:CollectionEntityAdapter<T>|null)=>void;debounce?:number;}export class CollectionEntityAdapter<T extends IEntity=any>implements IEntityAdapter<T>{readonly id:IEntity['id'];constructor(id:IEntity['id'],_collection$:React.MutableRefObject<Collection<T>>,_dispose:Subject<true>);get data():T;setData:(data:Partial<T>|((prevData:T)=>Partial<T>))=>Promise<void>;refresh:()=>Promise<void>;toObject:()=>T;toEntity:()=>Entity<T>;}export class CollectionAdapter<T extends IEntity=any>implements ICollectionAdapter<T>{constructor(_collection$:React.MutableRefObject<Collection<T>>,_dispose:Subject<true>);get ids():(string|number)[];get items():CollectionEntityAdapter<T>[];get isEmpty():boolean;setData:(items:T[])=>Promise<void>;refresh:()=>Promise<void>;clear:()=>Promise<void>;push:(...items:T[])=>Promise<void>;remove:(entity:IEntity)=>Promise<void>;removeById:(id:string|number)=>Promise<void>;findById:(id:string|number)=>CollectionEntityAdapter<T>;some:(fn:(value:CollectionEntityAdapter<T>,idx:number)=>boolean)=>boolean;forEach:(fn:(value:CollectionEntityAdapter<T>,idx:number)=>void)=>void;find:(fn:(value:CollectionEntityAdapter<T>,idx:number)=>boolean)=>CollectionEntityAdapter<T>|undefined;filter:(fn:(value:CollectionEntityAdapter<T>,idx:number)=>boolean)=>CollectionEntityAdapter<T>[];map:<V extends unknown=any>(fn:(value:CollectionEntityAdapter<T>,idx:number)=>V)=>V[];toArray:()=>T[];toCollection:()=>Collection<T>;}export const useCollection:<T extends IEntity=any>({initialValue,onChange,debounce,}?:IParams<T>)=>CollectionAdapter<T>;export default useCollection;}declare module'react-declarative/hooks/useModelBinding'{import Subject from"react-declarative/utils/rx/Subject";import{IParams as IModelParams,ModelAdapter}from"react-declarative/hooks/useModel";interface IParams<T extends{}=any>extends Omit<IModelParams<T>,keyof{initialValue:never;onChange:never;}>{creator:(model:ModelAdapter<T>,change:Subject<ModelAdapter<T>>,begin:()=>void)=>(()=>void)|void;initialValue?:Partial<T>|(()=>Partial<T>);onChange?:(item:ModelAdapter<T>,initial:boolean)=>void;}export const useModelBinding:<T extends{}=any>({creator,onChange,initialValue,debounce,}:IParams<T>)=>ModelAdapter<T>|null;export default useModelBinding;}declare module'react-declarative/hooks/useEntityBinding'{import{IEntity}from"react-declarative/utils/mvvm/Entity";import Subject from"react-declarative/utils/rx/Subject";import{IParams as IEntityParams,EntityAdapter}from"react-declarative/hooks/useEntity";interface IParams<T extends IEntity=any>extends Omit<IEntityParams<T>,keyof{initialValue:never;onChange:never;}>{creator:(entity:EntityAdapter<T>,change:Subject<EntityAdapter<T>>,begin:()=>void)=>(()=>void)|void;initialValue:Partial<T>|(()=>Partial<T>);onChange?:(item:EntityAdapter<T>,initial:boolean)=>void;}export const useEntityBinding:<T extends IEntity=any>({creator,onChange,initialValue,debounce,}:IParams<T>)=>EntityAdapter<T>|null;export default useEntityBinding;}declare module'react-declarative/hooks/useCollectionBinding'{import Subject from"react-declarative/utils/rx/Subject";import{IEntity}from"react-declarative/utils/mvvm/Entity";import{IParams as ICollectionParams,CollectionAdapter,CollectionEntityAdapter}from"react-declarative/hooks/useCollection";interface IParams<T extends IEntity=any>extends Omit<ICollectionParams<T>,keyof{initialValue:never;onChange:never;}>{creator:(collection:CollectionAdapter<T>,change:Subject<CollectionAdapter<T>>,begin:()=>void)=>(()=>void)|void;onChange?:(item:CollectionAdapter<T>,target:CollectionEntityAdapter<T>|null,initial:boolean)=>void;initialValue?:T[]|(()=>T[]);}export const useCollectionBinding:<T extends IEntity=any>({creator,onChange,initialValue,debounce,}:IParams<T>)=>CollectionAdapter<T>|null;export default useCollectionBinding;}declare module'react-declarative/components/ModalProvider'{export*from'react-declarative/components/ModalProvider/ModalProvider';export{default}from'react-declarative/components/ModalProvider/ModalProvider';}declare module'react-declarative/components/SnackProvider'{export*from'react-declarative/components/SnackProvider/SnackProvider';export{default}from'react-declarative/components/SnackProvider/SnackProvider';}declare module'react-declarative/components/SizeProvider'{export*from'react-declarative/components/SizeProvider/SizeProvider';export{default}from'react-declarative/components/SizeProvider/SizeProvider';}declare module'react-declarative/hooks/useList'{import IColumn from'react-declarative/model/IColumn';import IRowData from'react-declarative/model/IRowData';import IAnything from'react-declarative/model/IAnything';import IListProps from'react-declarative/model/IListProps';import SelectionMode from'react-declarative/model/SelectionMode';import{IListPickerProps}from'react-declarative/components/common/ListPicker';type Fn<Data=IAnything>=(d:Data[]|null)=>void;interface IParams<RowData extends IRowData=IAnything>extends Omit<IListPickerProps<RowData>,keyof{onChange:never;selectionMode:never;selectedRows:never;minHeight:never;minWidth:never;title:never;columns:never;open:never;}>{selectionMode?:SelectionMode.Single|SelectionMode.Multiple;selectedRows?:IListProps<RowData>['selectedRows'];columns:Omit<IColumn<RowData>,keyof{headerName:never;width:never;}>[];minHeight?:number;minWidth?:number;title?:string;}export const useList:<RowData extends IRowData=any>({handler,columns,rowActions,selectionMode,title:titleDefault,minWidth:minWidthDefault,minHeight:minHeightDefault,selectedRows:selectedRowsDefault,}:IParams<RowData>)=>({title,minWidth,minHeight,selectedRows,}?:Partial<IParams<RowData>>)=>{then(onData:Fn):void;};export default useList;}declare module'react-declarative/hooks/useFile'{interface IParams{accept?:string;onSelect?:(...files:File[])=>void;}export const useFile:({accept,onSelect,}:IParams)=>{render:()=>JSX.Element;open:()=>void;};export default useFile;}declare module'react-declarative/hooks/useConfirm'{type Fn=(result:boolean)=>void;interface IParams{title?:string;msg?:string;canCancel?:boolean;}export const useConfirm:({title:defaultTitle,msg:defaultMsg,canCancel:defaultCanCancel,}?:IParams)=>({canCancel,title,msg,}?:Partial<IParams>)=>{then(onData:Fn):void;};export default useConfirm;}declare module'react-declarative/hooks/usePrompt'{type Fn=(result:string|null)=>void;interface IParams{title?:string;value?:string;placeholder?:string;canCancel?:boolean;}export const usePrompt:({title:defaultTitle,value:defaultValue,placeholder:defaultPlaceholder,canCancel:defaultCanCancel,}?:IParams)=>({canCancel,title,placeholder,value,}?:Partial<IParams>)=>{then(onData:Fn):void;};export default usePrompt;}declare module'react-declarative/hooks/useDate'{import dayjs from'dayjs';type Fn=(d:dayjs.Dayjs|null)=>void;export const useDate:()=>()=>{then(onData:Fn):void;};export default useDate;}declare module'react-declarative/hooks/useTime'{import dayjs from'dayjs';type Fn=(d:dayjs.Dayjs|null)=>void;export const useTime:()=>()=>{then(onData:Fn):void;};export default useTime;}declare module'react-declarative/hooks/useOne'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import TypedField from'react-declarative/model/TypedField';import{OneHandler}from'react-declarative/model/IOneProps';type Fn<Data=IAnything>=(d:Data|null)=>void;interface IParams<Data extends IAnything=IAnything,Field=IField<Data>>{fields:Field[];title?:string;handler?:OneHandler<Data>;}export const useOne:<Data extends unknown=any,Field=IField<Data>>({fields,title:defaultTitle,handler:defaultHandler,}:IParams<Data,Field>)=>({handler,title,}?:Partial<IParams<Data,Field>>)=>{then(onData:Fn):void;};export const useOneTyped:<Data extends unknown=any>(params:IParams<Data,TypedField<Data>>)=>({handler,title,}?:Partial<IParams<Data,TypedField<Data>>>)=>{then(onData:Fn):void;};export default useOne;}declare module'react-declarative/model/IAnything'{export type IAnything=any;export default IAnything;}declare module'react-declarative/model/IRowData'{export interface IRowData{id:RowId;}export type RowId=string|number;export default IRowData;}declare module'react-declarative/components'{export*from'react-declarative/components/One';export*from'react-declarative/components/List';export*from'react-declarative/components/NoSsr';export*from'react-declarative/components/Switch';export*from'react-declarative/components/Scaffold';export*from'react-declarative/components/Translate';export*from'react-declarative/components/ActionMenu';export*from'react-declarative/components/Breadcrumbs';export*from'react-declarative/components/ActionButton';export*from'react-declarative/components/ActionStopIcon';export*from'react-declarative/components/ErrorBoundary';export*from'react-declarative/components/ActionFilter';export*from'react-declarative/components/ActionTrigger';export*from'react-declarative/components/ActionIcon';export*from'react-declarative/components/ActionToggle';export*from'react-declarative/components/SizeProvider';export*from'react-declarative/components/ModalProvider';export*from'react-declarative/components/SnackProvider';export*from'react-declarative/components/ConstraintView';export*from'react-declarative/components/DragDropView';export*from'react-declarative/components/ScrollView';export*from'react-declarative/components/ScaleView';export*from'react-declarative/components/AutoSizer';export*from'react-declarative/components/FadeView';export*from'react-declarative/components/TabsView';export*from'react-declarative/components/FetchView';export*from'react-declarative/components/WaitView';export*from'react-declarative/components/PingView';export*from'react-declarative/components/OfflineView';export*from'react-declarative/components/RevealView';export*from'react-declarative/components/SecretView';export*from'react-declarative/components/PortalView';export*from'react-declarative/components/Async';export*from'react-declarative/components/If';}declare module'react-declarative/components/Translate'{export*from'react-declarative/components/Translate/Translate';export{default}from'react-declarative/components/Translate/Translate';}declare module'react-declarative/model/IOnePublicProps'{import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";import IOneProps from"react-declarative/model/IOneProps";export interface IOnePublicProps<Data=IAnything,Field=IField<Data>>extends IOneProps<Data,Field>{onFocus?:IOneProps<Data,Field>['focus'];onBlur?:IOneProps<Data,Field>['blur'];onReady?:IOneProps<Data,Field>['ready'];onChange?:IOneProps<Data,Field>['change'];onInvalid?:IOneProps<Data,Field>['invalidity'];onLoadStart?:IOneProps<Data,Field>['loadStart'];onLoadEnd?:IOneProps<Data,Field>['loadEnd'];}export default IOnePublicProps;}declare module'react-declarative/utils/getRouteParams'{export interface ISwitchItem{path:string;}export const getRouteParams:<T=Record<string,any>>(routes:ISwitchItem[],pathname:string)=>T|null;export default getRouteParams;}declare module'react-declarative/utils/getRouteItem'{import{ISwitchItem}from'react-declarative/utils/getRouteParams';export const getRouteItem:<T extends ISwitchItem=ISwitchItem>(routes:T[],pathname:string)=>T|null;export default getRouteItem;}declare module'react-declarative/utils/getElementFromXPath'{export const getElementFromXPath:(xpath:string)=>Node|null;export default getElementFromXPath;}declare module'react-declarative/utils/getXPathFromElement'{export const getXPathFromElement:(element:HTMLElement)=>string|null;export default getXPathFromElement;}declare module'react-declarative/utils/arrays'{export const arrays:(root:any,forceArray?:boolean)=>any;export default arrays;}declare module'react-declarative/utils/objects'{export const objects:(root:any)=>any;export default objects;}declare module'react-declarative/utils/fetchApi'{export class FetchError extends Error{readonly originalError:any;readonly request:RequestInfo;readonly response:Response|undefined;constructor(originalError:any,request:RequestInfo,response:Response|undefined);}export const fetchApi:<T=any>(input:RequestInfo|URL,init?:RequestInit|undefined)=>Promise<T>;export default fetchApi;}declare module'react-declarative/utils/createProvider'{import React from'react';export const createProvider:<P extends unknown=object>()=>readonly[({children,payload,}:{children:React.ReactNode;payload:P;})=>JSX.Element,()=>P];export default createProvider;}declare module'react-declarative/utils/formatText'{interface IParams{symbol?:string;allowed?:RegExp|((char:string,idx:number)=>boolean);replace?:(char:string)=>string|null;}export const formatText:(raw:string,template:string,{symbol,allowed,replace,}?:IParams)=>string;export default formatText;}declare module'react-declarative/utils/roundTicks'{export const roundTicks:(price:number,tickSize?:number)=>string;export default roundTicks;}declare module'react-declarative/utils/wordForm'{interface IWordForm{one:string;two?:string;many:string;}export const wordForm:(value:number,{one,many,two,}:IWordForm)=>string;export default wordForm;}declare module'react-declarative/utils/hof/singleshot'{export interface IClearable{clear:()=>void;}export const singleshot:<T extends(...args:any[])=>any>(run:T)=>T&IClearable;export default singleshot;}declare module'react-declarative/utils/hof/cancelable'{export interface IWrappedFn<T extends any=any,P extends any[]=any>{(...args:P):Promise<T>;cancel():void;}export const cancelable:<T extends unknown=any,P extends any[]=any[]>(promise:(...args:P)=>Promise<T>)=>IWrappedFn<T,P>;export default cancelable;}declare module'react-declarative/utils/hof/debounce'{export interface IClearable{clear:()=>void;}export const debounce:<T extends(...args:any[])=>any>(run:T,delay?:number)=>T&IClearable;export default debounce;}declare module'react-declarative/utils/hof/queued'{export interface IWrappedFn<T extends any=any,P extends any[]=any>{(...args:P):Promise<T>;clear():void;}export const queued:<T extends unknown=any,P extends any[]=any[]>(promise:(...args:P)=>Promise<T>)=>IWrappedFn<T,P>;export default queued;}declare module'react-declarative/utils/hof/cached'{import{IClearable}from'react-declarative/utils/hof/singleshot';export const cached:<T extends(...args:any[])=>any>(run:T)=>T&IClearable;export default cached;}declare module'react-declarative/utils/rx/BehaviorSubject'{import Subject from"react-declarative/utils/rx/Subject";export class BehaviorSubject<Data=any>extends Subject<Data>{get data():Data|null;next:(data:Data)=>void;}export default BehaviorSubject;}declare module'react-declarative/utils/rx/EventEmitter'{type EventKey=string|symbol;type Function=(...args:any[])=>void;export class EventEmitter{get hasListeners():boolean;subscribe:(eventName:EventKey,callback:Function)=>void;unsubscribe:(eventName:EventKey,callback:Function)=>void;unsubscribeAll:()=>void;once:(eventName:EventKey,callback:Function)=>()=>void;emit:(eventName:EventKey,...args:any[])=>void;}export default EventEmitter;}declare module'react-declarative/utils/rx/Subject'{export const SUBJECT_EVENT:unique symbol;type Function=(...args:any[])=>void;export class Subject<Data=any>{constructor();subscribe:(callback:Function)=>()=>void;unsubscribeAll:()=>void;once:(callback:Function)=>()=>void;next(data:Data):void;}export default Subject;}declare module'react-declarative/utils/mvvm/Entity'{import Model from"react-declarative/utils/mvvm/Model";export{CHANGE_DEBOUNCE,CHANGE_SYMBOL,REFRESH_SYMBOL}from'react-declarative/utils/mvvm/Model';export interface IEntity{id:string|number;}export interface IEntityAdapter<T extends IEntity=any>{id:IEntity['id'];setData(data:Partial<T>|((prevData:T)=>Partial<T>)):void;data:T;refresh():void;toObject():T;}export class Entity<T extends IEntity=any>extends Model<T>implements IEntityAdapter<T>{get id():string|number;constructor(_data:T|Entity<T>|(()=>T),_debounce?:number,_prevData?:()=>T);setData:(data:Partial<T>|((prevData:T)=>Partial<T>))=>void;handleChange:(change:(item:Entity<T>)=>void)=>()=>void;}export default Entity;}declare module'react-declarative/utils/mvvm/Collection'{import EventEmitter from'react-declarative/utils/rx/EventEmitter';import Entity,{IEntity,IEntityAdapter}from'react-declarative/utils/mvvm/Entity';export const REORDER_SYMBOL:unique symbol;export interface ICollectionAdapter<T extends IEntity=any>{items:IEntityAdapter<T>[];ids:IEntity['id'][];isEmpty:boolean;setData(items:T[]):void;map<V=any>(callbackfn:(value:IEntityAdapter<T>,idx:number)=>V):V[];filter(predicate:(value:IEntityAdapter<T>,idx:number)=>boolean):IEntityAdapter<T>[];find(predicate:(value:IEntityAdapter<T>,idx:number)=>boolean):IEntityAdapter<T>|undefined;some(predicate:(value:IEntityAdapter<T>,idx:number)=>boolean):boolean;forEach(callbackfn:(value:IEntityAdapter<T>,idx:number)=>void):void;push(...items:T[]):void;remove(item:IEntity):void;removeById(id:IEntity['id']):void;findById(id:IEntity['id']):IEntityAdapter<T>;clear():void;refresh():void;toArray():T[];}export class EntityNotFoundError extends Error{}export class Collection<T extends IEntity=any>extends EventEmitter implements ICollectionAdapter<T>{protected _debounce:number;protected _prevData:()=>Entity<T>[];get items():Entity<T>[];get ids():(string|number)[];constructor(entities?:T[]|(()=>T[])|Entity<T>[]|Collection<T>,_debounce?:number,_prevData?:()=>Entity<T>[]);get isEmpty():boolean;setData:(items:T[])=>void;clear:()=>void;map:<V=any>(callbackfn:(value:Entity<T>,idx:number)=>V)=>V[];filter:(predicate:(value:Entity<T>,idx:number)=>boolean)=>Entity<T>[];find:(predicate:(value:Entity<T>,idx:number)=>boolean)=>Entity<T>|undefined;some:(predicate:(value:Entity<T>,idx:number)=>boolean)=>boolean;forEach:(callbackfn:(value:Entity<T>,idx:number)=>void)=>void;push:(...items:T[])=>void;remove:(item:IEntity)=>void;removeById:(id:IEntity['id'])=>void;findById:(id:IEntity['id'])=>Entity<T>;handleChange:(change:(collection:Collection<T>,target:Entity<T>|null)=>void)=>()=>void;handleDropChanges:()=>void;refresh:()=>void;toArray:()=>T[];}export default Collection;}declare module'react-declarative/utils/mvvm/Model'{import EventEmitter from"react-declarative/utils/rx/EventEmitter";import Subject from"react-declarative/utils/rx/Subject";export const CHANGE_SYMBOL:unique symbol;export const REFRESH_SYMBOL:unique symbol;export const CHANGE_DEBOUNCE=1000;export interface IModelAdapter<T extends{}=any>{data:T;setData(data:Partial<T>|((prevData:T)=>Partial<T>)):void;refresh():void;toObject():T;}export class Model<T extends{}=any>extends EventEmitter implements IModelAdapter<T>{protected _debounce:number;protected _prevData:()=>T;protected _dropChanges:Subject<void>;protected _data:T;get data():T;constructor(_data:T|Model<T>|(()=>T),_debounce?:number,_prevData?:()=>T);setData(data:Partial<T>|((prevData:T)=>Partial<T>)):void;handleChange(change:(item:Model<T>)=>void):()=>void;handleDropChanges:()=>void;refresh:()=>void;toObject:()=>T;}export default Model;}declare module'react-declarative/utils/formatAmount'{export const formatAmount:(value:number|string,scale?:number,separator?:string)=>string;export default formatAmount;}declare module'react-declarative/utils/createWindowHistory'{import{BrowserHistory,MemoryHistory}from"history";export const createWindowHistory:()=>MemoryHistory|BrowserHistory;export default createWindowHistory;}declare module'react-declarative/utils/createLsManager'{export const createLsManager:<T=Record<string,any>>(STORAGE_KEY:string)=>{getValue:()=>T|null;setValue:(value:T)=>void;};export default createLsManager;}declare module'react-declarative/utils/createSsManager'{export const createSsManager:<T=Record<string,any>>(STORAGE_KEY:string)=>{getValue:()=>T|null;setValue:(value:T)=>void;};export default createSsManager;}declare module'react-declarative/utils/createCustomTag'{export const createCustomTag:(name?:string,style?:string)=>void;export default createCustomTag;}declare module'react-declarative/utils/mainColor'{export const mainColor:(color:string)=>void;export default mainColor;}declare module'react-declarative/utils/cacheSrc'{export const cacheSrc:(url:string)=>{ref:(element:HTMLImageElement|null)=>void;};export default cacheSrc;}declare module'react-declarative/utils/base64Json'{export const parseBase64Json:<T=Record<string,any>>(state:string)=>T|null;export const stringifyBase64Json:<T=Record<string,any>>(state:T)=>string;}declare module'react-declarative/utils/datetime'{import dayjs from"dayjs";export const DATE_TEMPLATE="DD.MM.YYYY";export const TIME_TEMPLATE="HH:MM";export class Time{readonly hour:number;readonly minute:number;constructor(hour:number,minute:number);toString:()=>string|null;}export const parseDate:(str:string)=>dayjs.Dayjs|null;export const serializeDate:(date:Date|dayjs.Dayjs)=>string|null;export const parseTime:(time:string)=>Time|null;export const serializeTime:(time:Time|Date|dayjs.Dayjs)=>string|null;}declare module'react-declarative/utils/compose'{type Function=(...args:any[])=>any;export const compose:(...funcs:Function[][]|Function[])=>Function;export default compose;}declare module'react-declarative/components/One/layouts/FragmentLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IFragmentLayoutProps<Data=IAnything>{isVisible?:PickProp<IField<Data>,'isVisible'>;}interface IFragmentLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;ready:PickProp<IEntity<Data>,'ready'>;object:PickProp<IEntity<Data>,'object'>;}export const FragmentLayout:{<Data extends unknown=any>({children,isVisible,object,ready,}:IFragmentLayoutProps<Data>&IFragmentLayoutPrivate<Data>):JSX.Element|null;displayName:string;};export default FragmentLayout;}declare module'react-declarative/components/One/layouts/DivLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IDivLayoutProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IDivLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;}export const DivLayout:{<Data extends unknown=any>({children,className,style,}:IDivLayoutProps<Data>&IDivLayoutPrivate<Data>):JSX.Element;displayName:string;};export default DivLayout;}declare module'react-declarative/components/One/layouts/TabsLayout'{import*as React from'react';import{IGroupProps}from"react-declarative/components/common/Group";import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface ITabsLayoutProps<Data=IAnything>extends IGroupProps<Data>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;tabLine?:PickProp<IField<Data>,'tabLine'>;tabList?:PickProp<IField<Data>,'tabList'>;tabIndex?:PickProp<IField<Data>,'tabIndex'>;tabColor?:PickProp<IField<Data>,'tabColor'>;tabChange?:PickProp<IField<Data>,'tabChange'>;tabVariant?:PickProp<IField<Data>,'tabVariant'>;tabKeepFlow?:PickProp<IField<Data>,'tabKeepFlow'>;tabBackground?:PickProp<IField<Data>,'tabBackground'>;}interface ITabsLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;}export const TabsLayout:{<Data extends unknown=any>({children,className,style,tabChange,tabVariant,tabLine,tabColor,tabList,tabKeepFlow,tabBackground,tabIndex:tabIndexDefault,columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,}:ITabsLayoutProps<Data>&ITabsLayoutPrivate<Data>):JSX.Element;displayName:string;};export default TabsLayout;}declare module'react-declarative/components/One/layouts/CenterLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';import{IGroupProps}from"react-declarative/components/common/Group";export interface ICenterLayoutProps<Data=IAnything>extends IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface ICenterLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;}export const CenterLayout:{<Data extends unknown=any>({children,className,style,innerPadding:padding,columns,phoneColumns,tabletColumns,desktopColumns,columnsOverride,sx,fieldRightMargin,fieldBottomMargin,}:ICenterLayoutProps<Data>&ICenterLayoutPrivate<Data>):JSX.Element;displayName:string;};export default CenterLayout;}declare module'react-declarative/components/One/layouts/StretchLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IStretchLayoutProps<Data=IAnything>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IStretchLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;}export const StretchLayout:{<Data extends unknown=any>({children,className,style,innerPadding:padding,}:IStretchLayoutProps<Data>&IStretchLayoutPrivate<Data>):JSX.Element;displayName:string;};export default StretchLayout;}declare module'react-declarative/components/One/layouts/GroupLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import IAnything from"react-declarative/model/IAnything";export interface IGroupLayoutProps<Data=IAnything>extends IGroupProps<Data>{}interface IGroupLayoutPrivate{children:React.ReactNode;}export const GroupLayout:{<Data extends unknown=any>({columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,style,className,children,}:IGroupLayoutProps<Data>&IGroupLayoutPrivate):JSX.Element;displayName:string;};export default GroupLayout;}declare module'react-declarative/components/One/layouts/OutlineLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import{IOutlineProps}from'react-declarative/components/common/Outline';import{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IOutlineLayoutProps<Data=IAnything>extends IOutlineProps<Data>,IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;}interface IOutlineLayoutPrivate{children:React.ReactNode;}export const OutlineLayout:{<Data extends unknown=any>({columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,style,className,children,fieldRightMargin,fieldBottomMargin,innerPadding:padding,}:IOutlineLayoutProps<Data>&IOutlineLayoutPrivate):JSX.Element;displayName:string;};export default OutlineLayout;}declare module'react-declarative/components/One/layouts/PaperLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import{IPaperProps}from'react-declarative/components/common/Paper';import{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IPaperLayoutProps<Data=IAnything>extends IPaperProps<Data>,IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;}interface IPaperLayoutPrivate{children:React.ReactNode;}export const PaperLayout:{<Data extends unknown=any>({columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,style,className,children,fieldRightMargin,fieldBottomMargin,innerPadding:padding,}:IPaperLayoutProps<Data>&IPaperLayoutPrivate):JSX.Element;displayName:string;};export default PaperLayout;}declare module'react-declarative/components/One/layouts/ExpansionLayout'{import*as React from"react";import{IExpansionProps}from"react-declarative/components/common/Expansion";import{IGroupProps}from"react-declarative/components/common/Group";import IAnything from"react-declarative/model/IAnything";export interface IExpansionLayoutProps<Data=IAnything>extends IExpansionProps<Data>,IGroupProps<Data>{}interface IExpansionLayoutPrivate{children:React.ReactNode;}export const ExpansionLayout:{<Data extends unknown=any>({columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,style,className,children,title,description,}:IExpansionLayoutProps<Data>&IExpansionLayoutPrivate):JSX.Element;displayName:string;};export default ExpansionLayout;}declare module'react-declarative/components/One/layouts/HeroLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';import Group,{IGroupProps}from'react-declarative/components/common/Group';import IEntity from'react-declarative/model/IEntity';interface IHeroTop<Data=IAnything>{top?:PickProp<IField<Data>,'top'>;phoneTop?:PickProp<IField<Data>,'phoneTop'>;tabletTop?:PickProp<IField<Data>,'tabletTop'>;desktopTop?:PickProp<IField<Data>,'desktopTop'>;}interface IHeroLeft<Data=IAnything>{left?:PickProp<IField<Data>,'left'>;phoneLeft?:PickProp<IField<Data>,'phoneLeft'>;tabletLeft?:PickProp<IField<Data>,'tabletLeft'>;desktopLeft?:PickProp<IField<Data>,'desktopLeft'>;}interface IHeroRight<Data=IAnything>{right?:PickProp<IField<Data>,'right'>;phoneRight?:PickProp<IField<Data>,'phoneRight'>;tabletRight?:PickProp<IField<Data>,'tabletRight'>;desktopRight?:PickProp<IField<Data>,'desktopRight'>;}interface IHeroBottom<Data=IAnything>{bottom?:PickProp<IField<Data>,'bottom'>;phoneBottom?:PickProp<IField<Data>,'phoneBottom'>;tabletBottom?:PickProp<IField<Data>,'tabletBottom'>;desktopBottom?:PickProp<IField<Data>,'desktopBottom'>;}interface IHeroHeight<Data=IAnything>{height?:PickProp<IField<Data>,'height'>;phoneHeight?:PickProp<IField<Data>,'phoneHeight'>;tabletHeight?:PickProp<IField<Data>,'tabletHeight'>;desktopHeight?:PickProp<IField<Data>,'desktopHeight'>;}interface IHeroMinHeight<Data=IAnything>{minHeight?:PickProp<IField<Data>,'minHeight'>;phoneMinHeight?:PickProp<IField<Data>,'phoneMinHeight'>;tabletMinHeight?:PickProp<IField<Data>,'tabletMinHeight'>;desktopMinHeight?:PickProp<IField<Data>,'desktopMinHeight'>;}interface IHeroMaxHeight<Data=IAnything>{maxHeight?:PickProp<IField<Data>,'maxHeight'>;phoneMaxHeight?:PickProp<IField<Data>,'phoneMaxHeight'>;tabletMaxHeight?:PickProp<IField<Data>,'tabletMaxHeight'>;desktopMaxHeight?:PickProp<IField<Data>,'desktopMaxHeight'>;}interface IHeroWidth<Data=IAnything>{width?:PickProp<IField<Data>,'width'>;phoneWidth?:PickProp<IField<Data>,'phoneWidth'>;tabletWidth?:PickProp<IField<Data>,'tabletWidth'>;desktopWidth?:PickProp<IField<Data>,'desktopWidth'>;}interface IHeroMinWidth<Data=IAnything>{minWidth?:PickProp<IField<Data>,'minWidth'>;phoneMinWidth?:PickProp<IField<Data>,'phoneMinWidth'>;tabletMinWidth?:PickProp<IField<Data>,'tabletMinWidth'>;desktopMinWidth?:PickProp<IField<Data>,'desktopMinWidth'>;}interface IHeroMaxWidth<Data=IAnything>{maxWidth?:PickProp<IField<Data>,'maxWidth'>;phoneMaxWidth?:PickProp<IField<Data>,'phoneMaxWidth'>;tabletMaxWidth?:PickProp<IField<Data>,'tabletMaxWidth'>;desktopMaxWidth?:PickProp<IField<Data>,'desktopMaxWidth'>;}interface IHeroStyle<Data=IAnything>{heroOuterStyle?:PickProp<IField<Data>,'heroOuterStyle'>;heroOuterPhoneStyle?:PickProp<IField<Data>,'heroOuterPhoneStyle'>;heroOuterTabletStyle?:PickProp<IField<Data>,'heroOuterTabletStyle'>;heroOuterDesktopStyle?:PickProp<IField<Data>,'heroOuterDesktopStyle'>;heroInnerStyle?:PickProp<IField<Data>,'heroInnerStyle'>;heroInnerPhoneStyle?:PickProp<IField<Data>,'heroInnerPhoneStyle'>;heroInnerTabletStyle?:PickProp<IField<Data>,'heroInnerTabletStyle'>;heroInnerDesktopStyle?:PickProp<IField<Data>,'heroInnerDesktopStyle'>;}type IHeroRegistry<D=IAnything>=IHeroTop<D>&IHeroLeft<D>&IHeroRight<D>&IHeroBottom<D>&IHeroWidth<D>&IHeroMinWidth<D>&IHeroMaxWidth<D>&IHeroHeight<D>&IHeroMinHeight<D>&IHeroMaxHeight<D>&IHeroStyle<D>;type Group<Data=IAnything>=Omit<IGroupProps<Data>,keyof{fieldRightMargin:never;fieldBottomMargin:never;}>;export interface IHeroLayoutProps<Data=IAnything>extends IHeroRegistry<Data>,Group<Data>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;object:PickProp<IEntity<Data>,'object'>;}interface IHeroLayoutPrivate{children:React.ReactNode;}export const HeroLayout:{<Data extends unknown=any>({children,className,style,object,columns,columnsOverride,sx,phoneColumns,tabletColumns,desktopColumns,...otherProps}:IHeroLayoutProps<Data>&IHeroLayoutPrivate):JSX.Element;displayName:string;};export default HeroLayout;}declare module'react-declarative/components/One/layouts/ConditionLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IConditionLayoutProps<Data=IAnything>{condition?:PickProp<IField<Data>,'condition'>;}interface IConditionLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactNode;fallback:PickProp<IEntity<Data>,'fallback'>;ready:PickProp<IEntity<Data>,'ready'>;object:PickProp<IEntity<Data>,'object'>;}export const ConditionLayout:{<Data extends unknown=any>({children,condition,fallback,object,ready,}:IConditionLayoutProps<Data>&IConditionLayoutPrivate<Data>):JSX.Element;displayName:string;};export default ConditionLayout;}declare module'react-declarative/components/One/fields/CheckboxField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ICheckboxFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ICheckboxFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;onChange:PickProp<IManaged<Data>,'onChange'>;}export const CheckboxField:{({disabled,value,onChange,title}:ICheckboxFieldProps&ICheckboxFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ComboField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IComboFieldProps<Data=IAnything>{description?:PickProp<IField<Data>,"description">;placeholder?:PickProp<IField<Data>,"placeholder">;outlined?:PickProp<IField<Data>,"outlined">;itemList?:PickProp<IField<Data>,"itemList">;shouldUpdateItemList?:PickProp<IField<Data>,"shouldUpdateItemList">;keepSync?:PickProp<IField<Data>,"keepSync">;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;title?:PickProp<IField<Data>,"title">;tr?:PickProp<IField<Data>,"tr">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IComboFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,"value">;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;onChange:PickProp<IManaged<Data>,"onChange">;dirty:PickProp<IManaged<Data>,"dirty">;invalid:PickProp<IManaged<Data>,"invalid">;}export const ComboField:{({value,disabled,readonly,fieldReadonly,description,placeholder,outlined,itemList,keepSync,title,dirty,invalid,tr,onChange,}:IComboFieldProps&IComboFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ComponentField'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IManaged,{PickProp}from'react-declarative/model/IManaged';export interface IComponentFieldProps<Data=IAnything>{element?:PickProp<IField<Data>,'element'>;groupRef?:PickProp<IField<Data>,'groupRef'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IComponentFieldPrivate<Data=IAnything>{object:PickProp<IManaged<Data>,'object'>;}export const ComponentField:{({element:Element,object,...otherProps}:IComponentFieldProps&IComponentFieldPrivate):JSX.Element|null;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ItemsField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IItemsFieldProps<Data=IAnything>{description?:PickProp<IField<Data>,"description">;placeholder?:PickProp<IField<Data>,"placeholder">;outlined?:PickProp<IField<Data>,"outlined">;itemList?:PickProp<IField<Data>,"itemList">;keepSync?:PickProp<IField<Data>,"keepSync">;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;shouldUpdateItemList?:PickProp<IField<Data>,"shouldUpdateItemList">;title?:PickProp<IField<Data>,"title">;tr?:PickProp<IField<Data>,"tr">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IItemsFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,"onChange">;value:PickProp<IManaged<Data>,'value'>;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;dirty:PickProp<IManaged<Data>,"dirty">;invalid:PickProp<IManaged<Data>,"invalid">;}export const ItemsField:{({value,disabled,readonly,description,placeholder,outlined,itemList,keepSync,fieldReadonly,dirty,invalid,title,tr,onChange,}:IItemsFieldProps&IItemsFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/LineField'{import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ILineFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export const LineField:{({title,}:ILineFieldProps):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ProgressField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IField from"react-declarative/model/IField";import IAnything from"react-declarative/model/IAnything";export interface IProgressFieldProps<Data=IAnything>{maxPercent?:PickProp<IField<Data>,"maxPercent">;showPercentLabel?:PickProp<IField<Data>,"showPercentLabel">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IProgressFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,"value">;}export const ProgressField:{({maxPercent,showPercentLabel,value,}:IProgressFieldProps&IProgressFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/RadioField'{import IField from"react-declarative/model/IField";import IAnything from"react-declarative/model/IAnything";import IManaged,{PickProp}from"react-declarative/model/IManaged";export interface IRadioFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,"title">;radioValue?:PickProp<IField<Data>,"radioValue">;groupRef?:PickProp<IField<Data>,'groupRef'>;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;}export interface IRadioFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,"value">;onChange:PickProp<IManaged<Data>,"onChange">;name?:PickProp<IManaged<Data>,'name'>;}export const RadioField:{({disabled,value,onChange,title,radioValue,name,}:IRadioFieldProps&IRadioFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/RatingField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IRatingFieldProps<Data=IAnything>{readonly?:PickProp<IField<Data>,"readonly">;title?:PickProp<IField<Data>,"title">;groupRef?:PickProp<IField<Data>,'groupRef'>;disabled?:PickProp<IField<Data>,"disabled">;}export interface IRatingFieldPrivate<Data=IAnything>{name?:string;value:PickProp<IManaged<Data>,"value">;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;onChange:PickProp<IManaged<Data>,"onChange">;}export const RatingField:{({value,disabled,fieldReadonly,title,name,onChange,}:IRatingFieldProps&IRatingFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/SliderField'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IManaged,{PickProp}from'react-declarative/model/IManaged';export interface ISliderFieldProps<Data=IAnything>{stepSlider?:PickProp<IField<Data>,'stepSlider'>;maxSlider?:PickProp<IField<Data>,'maxSlider'>;minSlider?:PickProp<IField<Data>,'minSlider'>;labelFormatSlider?:PickProp<IField<Data>,'labelFormatSlider'>;leadingIcon?:PickProp<IField<Data>,'leadingIcon'>;trailingIcon?:PickProp<IField<Data>,'trailingIcon'>;leadingIconClick?:PickProp<IField<Data>,'leadingIconClick'>;trailingIconClick?:PickProp<IField<Data>,'trailingIconClick'>;sliderThumbColor?:PickProp<IField<Data>,'sliderThumbColor'>;sliderTrackColor?:PickProp<IField<Data>,'sliderTrackColor'>;sliderRailColor?:PickProp<IField<Data>,'sliderRailColor'>;groupRef?:PickProp<IField<Data>,'groupRef'>;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;}export interface ISliderFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;onChange:PickProp<IManaged<Data>,'onChange'>;}export const SliderField:{({value,onChange,leadingIcon,trailingIcon,leadingIconClick,trailingIconClick,stepSlider,maxSlider,minSlider,labelFormatSlider,}:ISliderFieldProps&ISliderFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/SwitchField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ISwitchFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;groupRef?:PickProp<IField<Data>,'groupRef'>;readonly?:PickProp<IField<Data>,"readonly">;disabled?:PickProp<IField<Data>,"disabled">;}export interface ISwitchFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,'onChange'>;value:PickProp<IManaged<Data>,'value'>;}export const SwitchField:{({disabled,value,onChange,title,}:ISwitchFieldProps&ISwitchFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/TextField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface ITextFieldProps<Data=IAnything>{inputType?:PickProp<IField<Data>,"inputType">;inputMode?:PickProp<IField<Data>,"inputMode">;inputPattern?:PickProp<IField<Data>,"inputPattern">;inputAutocomplete?:PickProp<IField<Data>,"inputAutocomplete">;inputFormatter?:PickProp<IField<Data>,"inputFormatter">;inputFormatterSymbol?:PickProp<IField<Data>,"inputFormatterSymbol">;inputFormatterAllowed?:PickProp<IField<Data>,"inputFormatterAllowed">;inputFormatterTemplate?:PickProp<IField<Data>,"inputFormatterTemplate">;inputFormatterReplace?:PickProp<IField<Data>,"inputFormatterReplace">;description?:PickProp<IField<Data>,"description">;outlined?:PickProp<IField<Data>,"outlined">;title?:PickProp<IField<Data>,"title">;leadingIcon?:PickProp<IField<Data>,"leadingIcon">;trailingIcon?:PickProp<IField<Data>,"trailingIcon">;leadingIconClick?:PickProp<IField<Data>,"leadingIconClick">;trailingIconClick?:PickProp<IField<Data>,"trailingIconClick">;inputRows?:PickProp<IField<Data>,"inputRows">;placeholder?:PickProp<IField<Data>,"placeholder">;readonly?:PickProp<IField<Data>,"readonly">;autoFocus?:PickProp<IField<Data>,"autoFocus">;disabled?:PickProp<IField<Data>,"disabled">;groupRef?:PickProp<IField<Data>,'groupRef'>;inputRef?:PickProp<IField<Data>,'inputRef'>;}export interface ITextFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,"onChange">;invalid:PickProp<IManaged<Data>,"invalid">;value:PickProp<IManaged<Data>,"value">;loading:PickProp<IManaged<Data>,"loading">;disabled:PickProp<IManaged<Data>,"disabled">;dirty:PickProp<IManaged<Data>,"dirty">;name:PickProp<IManaged<Data>,"name">;}export const TextField:{({invalid,value,disabled,readonly,inputType,description,outlined,title,leadingIcon,trailingIcon,leadingIconClick,trailingIconClick,inputRows,placeholder,inputAutocomplete,inputFormatter,inputFormatterSymbol,inputFormatterAllowed,inputFormatterTemplate,dirty,loading,onChange,autoFocus,inputRef,name,}:ITextFieldProps&ITextFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/TypographyField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ITypographyFieldProps<Data=IAnything>{placeholder?:PickProp<IField<Data>,'placeholder'>;typoVariant?:PickProp<IField<Data>,'typoVariant'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ITypographyFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;}export const TypographyField:{({value,placeholder,typoVariant,style,}:ITypographyFieldProps&ITypographyFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/model/ISize'{import IAnything from'react-declarative/model/IAnything';export interface ISize{height:number;width:number;}export type ISizeCallback<Data=IAnything>=(data:Data,size:ISize,ref:HTMLDivElement)=>string;export default ISize;}declare module'react-declarative/components/List/api/useLastPagination'{import{ListHandler,ListHandlerChips,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";interface IResult<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{data:IState<FilterData,RowData>;handler:ListHandler<FilterData,RowData>;}export interface IState<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{filterData:FilterData;pagination:ListHandlerPagination;sort:ListHandlerSortModel<RowData>;chipData:ListHandlerChips<RowData>;search:string;}export const useLastPagination:<FilterData extends{}=any,RowData extends IRowData=any>(upperHandler:ListHandler<FilterData,RowData>)=>IResult;export default useLastPagination;}declare module'react-declarative/components/List/components/SlotFactory'{export*from'react-declarative/components/List/components/SlotFactory/SlotFactory';export*from'react-declarative/components/List/components/SlotFactory/SlotContext';export*from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';export{default}from'react-declarative/components/List/components/SlotFactory/SlotFactory';}declare module'react-declarative/components/One/components/SlotFactory'{export*from'react-declarative/components/One/components/SlotFactory/SlotFactory';export*from'react-declarative/components/One/components/SlotFactory/SlotContext';export*from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';export{default}from'react-declarative/components/One/components/SlotFactory/SlotFactory';}declare module'react-declarative/components/ModalProvider/ModalProvider'{import*as React from'react';import IAnything from'react-declarative/model/IAnything';interface IModalProviderProps{children:React.ReactNode;}type IRenderer=React.ComponentType<IAnything>;interface IHook{(render:IRenderer,deps?:any[]):{showModal:Function;hideModal:Function;};}export const ModalProvider:({children}:IModalProviderProps)=>JSX.Element;export const useModal:IHook;export default ModalProvider;}declare module'react-declarative/components/SnackProvider/SnackProvider'{import*as React from'react';interface ISnackProviderProps{children:React.ReactNode;delay?:number;}const useSnack:()=>(msg:string)=>void;export const SnackProvider:({children,delay,}:ISnackProviderProps)=>JSX.Element;export{useSnack};export default SnackProvider;}declare module'react-declarative/components/SizeProvider/SizeProvider'{import{BoxProps}from'@mui/material/Box';import ISize from'react-declarative/model/ISize';interface ISizeProvider extends Omit<BoxProps,keyof{ref:never;}>{target?:HTMLElement;}const useSize:()=>ISize;export const SizeProvider:({children,className,target,...props}:ISizeProvider)=>JSX.Element;export{useSize};export default SizeProvider;}declare module'react-declarative/components/common/ListPicker'{export*from'react-declarative/components/common/ListPicker/ListPicker';export{default}from'react-declarative/components/common/ListPicker/ListPicker';}declare module'react-declarative/components/One'{export*from'react-declarative/components/One/One';export*from'react-declarative/components/One/slots';export{createField}from'react-declarative/components/One/config/createField';export{makeField}from'react-declarative/components/One/components/makeField';export{useOneProps}from'react-declarative/components/One/context/PropsProvider';export{useOneState}from'react-declarative/components/One/context/StateProvider';export{OtherComboSlot}from'react-declarative/components/One/other/OtherComboSlot';export{OtherItemsSlot}from'react-declarative/components/One/other/OtherItemsSlot';export{useApiHandler}from'react-declarative/components/One/api/useApiHandler';export{useLocalHandler}from'react-declarative/components/One/api/useLocalHandler';export{useStaticHandler}from'react-declarative/components/One/api/useStaticHandler';export{usePreventLeave}from'react-declarative/components/One/api/usePreventLeave';export{default as OneSlotFactory}from'react-declarative/components/One/components/SlotFactory';export{defaultSlots as OneDefaultSlots}from'react-declarative/components/One/components/SlotFactory';export{default}from'react-declarative/components/One/One';}declare module'react-declarative/components/List'{export*from"react-declarative/components/List/List";export*from"react-declarative/components/List/slots";export{useProps as useListProps}from'react-declarative/components/List/hooks/useProps';export{useCachedRows as useListCachedRows}from'react-declarative/components/List/hooks/useCachedRows';export{useApiPaginator}from'react-declarative/components/List/api/useApiPaginator';export{useLastPagination}from'react-declarative/components/List/api/useLastPagination';export{useParsedPagination}from'react-declarative/components/List/api/useParsedPagination';export{useSerializedPagination}from'react-declarative/components/List/api/useSerializedPagination';export{useHashstatePagination}from'react-declarative/components/List/api/useHashstatePagination';export{useCachedPaginator}from'react-declarative/components/List/api/useCachedPaginator';export{useArrayPaginator}from'react-declarative/components/List/api/useArrayPaginator';export{default as ListSlotFactory}from'react-declarative/components/List/components/SlotFactory';export{defaultSlots as ListDefaultSlots}from'react-declarative/components/List/components/SlotFactory';export{default}from"react-declarative/components/List/List";}declare module'react-declarative/components/NoSsr'{export*from'react-declarative/components/NoSsr/NoSsr';export{default}from'react-declarative/components/NoSsr/NoSsr';}declare module'react-declarative/components/Switch'{export*from'react-declarative/components/Switch/Switch';export{default}from'react-declarative/components/Switch/Switch';}declare module'react-declarative/components/Scaffold'{export*from"react-declarative/components/Scaffold/Scaffold";export*from"react-declarative/components/Scaffold/model/IScaffoldProps";export*from"react-declarative/components/Scaffold/model/IScaffoldOption";export{default}from"react-declarative/components/Scaffold/Scaffold";}declare module'react-declarative/components/ActionMenu'{export*from'react-declarative/components/ActionMenu/ActionMenu';export{default}from'react-declarative/components/ActionMenu/ActionMenu';}declare module'react-declarative/components/Breadcrumbs'{export*from'react-declarative/components/Breadcrumbs/Breadcrumbs';export{default}from'react-declarative/components/Breadcrumbs/Breadcrumbs';}declare module'react-declarative/components/ActionButton'{export*from'react-declarative/components/ActionButton/ActionButton';export{default}from'react-declarative/components/ActionButton/ActionButton';}declare module'react-declarative/components/ActionStopIcon'{export*from'react-declarative/components/ActionStopIcon/ActionStopIcon';export{default}from'react-declarative/components/ActionStopIcon/ActionStopIcon';}declare module'react-declarative/components/ErrorBoundary'{export*from'react-declarative/components/ErrorBoundary/ErrorBoundary';export{default}from'react-declarative/components/ErrorBoundary/ErrorBoundary';}declare module'react-declarative/components/ActionFilter'{export*from'react-declarative/components/ActionFilter/ActionFilter';export*from'react-declarative/components/ActionFilter/model/IActionFilter';export{default}from'react-declarative/components/ActionFilter/ActionFilter';}declare module'react-declarative/components/ActionTrigger'{export*from'react-declarative/components/ActionTrigger/ActionTrigger';export*from'react-declarative/components/ActionTrigger/model/IActionTrigger';export{default}from'react-declarative/components/ActionTrigger/ActionTrigger';}declare module'react-declarative/components/ActionIcon'{export*from'react-declarative/components/ActionIcon/ActionIcon';export{default}from'react-declarative/components/ActionIcon/ActionIcon';}declare module'react-declarative/components/ActionToggle'{export*from'react-declarative/components/ActionToggle/ActionToggle';export{default}from'react-declarative/components/ActionToggle/ActionToggle';}declare module'react-declarative/components/ConstraintView'{export*from'react-declarative/components/ConstraintView/ConstraintView';export{default}from'react-declarative/components/ConstraintView/ConstraintView';}declare module'react-declarative/components/DragDropView'{export*from'react-declarative/components/DragDropView/DragDropView';export{default}from'react-declarative/components/DragDropView/DragDropView';}declare module'react-declarative/components/ScrollView'{export*from'react-declarative/components/ScrollView/ScrollView';export{default}from'react-declarative/components/ScrollView/ScrollView';}declare module'react-declarative/components/ScaleView'{export*from'react-declarative/components/ScaleView/ScaleView';export{default}from'react-declarative/components/ScaleView/ScaleView';}declare module'react-declarative/components/AutoSizer'{export*from'react-declarative/components/AutoSizer/AutoSizer';export{default}from'react-declarative/components/AutoSizer/AutoSizer';}declare module'react-declarative/components/FadeView'{export*from'react-declarative/components/FadeView/FadeView';export{default}from'react-declarative/components/FadeView/FadeView';}declare module'react-declarative/components/TabsView'{export*from'react-declarative/components/TabsView/TabsView';export*from'react-declarative/components/TabsView/api/useTabsHashstate';export{default}from'react-declarative/components/TabsView/TabsView';}declare module'react-declarative/components/FetchView'{export*from'react-declarative/components/FetchView/FetchView';export{default}from'react-declarative/components/FetchView/FetchView';}declare module'react-declarative/components/WaitView'{export*from'react-declarative/components/WaitView/WaitView';export{default}from'react-declarative/components/WaitView/WaitView';}declare module'react-declarative/components/PingView'{export*from'react-declarative/components/PingView/PingView';export{default}from'react-declarative/components/PingView/PingView';}declare module'react-declarative/components/OfflineView'{export*from'react-declarative/components/OfflineView/OfflineView';export{default}from'react-declarative/components/OfflineView/OfflineView';}declare module'react-declarative/components/RevealView'{export*from'react-declarative/components/RevealView/RevealView';export{default}from'react-declarative/components/RevealView/RevealView';}declare module'react-declarative/components/SecretView'{export*from'react-declarative/components/SecretView/SecretView';export{default}from'react-declarative/components/SecretView/SecretView';}declare module'react-declarative/components/PortalView'{export*from'react-declarative/components/PortalView/PortalView';export{default}from'react-declarative/components/PortalView/PortalView';}declare module'react-declarative/components/Async'{export*from'react-declarative/components/Async/Async';export{default}from'react-declarative/components/Async/Async';}declare module'react-declarative/components/If'{export*from'react-declarative/components/If/If';export{default}from'react-declarative/components/If/If';}declare module'react-declarative/components/Translate/Translate'{import*as React from'react';interface IAttributeCollection{[name:string]:unknown;}type Locale=Record<string,string>;export class Translate{readonly transform?:((str:string)=>string)|undefined;get skipList():string[];constructor(locale?:Locale,transform?:((str:string)=>string)|undefined);createElement:(type:string,props:IAttributeCollection|null,...children:any[])=>React.DOMElement<IAttributeCollection,Element>;}global{interface Window{Translate:Translate;}}export const register:(locale?:Locale,transform?:((str:string)=>string)|undefined)=>void;export default Translate;}declare module'react-declarative/components/common/Group'{export*from'react-declarative/components/common/Group/Group';export{default}from'react-declarative/components/common/Group/Group';}declare module'react-declarative/components/common/Outline'{export*from'react-declarative/components/common/Outline/Outline';export{default}from'react-declarative/components/common/Outline/Outline';}declare module'react-declarative/components/common/Paper'{export*from'react-declarative/components/common/Paper/Paper';export{default}from'react-declarative/components/common/Paper/Paper';}declare module'react-declarative/components/common/Expansion'{export*from'react-declarative/components/common/Expansion/Expansion';export{default}from'react-declarative/components/common/Expansion/Expansion';}declare module'react-declarative/components/List/components/SlotFactory/SlotFactory'{import*as React from'react';import ISlotFactoryContext from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';interface ISlotFactoryProps extends Partial<ISlotFactoryContext>{children:React.ReactNode;}export const SlotFactory:({children,...currentSlots}:Partial<ISlotFactoryProps>)=>JSX.Element;export default SlotFactory;}declare module'react-declarative/components/List/components/SlotFactory/SlotContext'{import ISlotFactoryContext from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';export const defaultSlots:{BodyRow:<RowData extends import("../../../..").IRowData=any>(props:import("../..").IBodyRowSlot<RowData>)=>JSX.Element;CheckboxCell:<RowData_1 extends import("../../../..").IRowData=any>({row,}:import("./components/CheckboxCell").ICheckboxCellProps<RowData_1>)=>JSX.Element;CommonCell:<RowData_2 extends import("../../../..").IRowData=any>({column,row,onMenuToggle,onAction,}:import("../..").ICommonCellSlot<RowData_2>)=>any;HeadRow:(props:import("../..").IHeadRowSlot<any>)=>JSX.Element;ActionAdd:({action,width,label,isVisible,isDisabled,}:import("../..").IActionAddSlot<any>)=>JSX.Element;ActionMenu:({options,}:import("../..").IActionMenuSlot)=>JSX.Element;ActionFab:({action,label,width,icon:Icon,isVisible,isDisabled,}:import("../..").IActionFabSlot<any>)=>JSX.Element;ChipListSlot:<RowData_3 extends import("../../../..").IRowData=any>({listChips,loading,}:import("../..").IChipListSlot<RowData_3>)=>JSX.Element;ActionListSlot:<FilterData extends{}>({className,actions,style,title,height,width,}:import("../..").IActionListSlot<FilterData>)=>JSX.Element;FilterListSlot:<FilterData_1 extends{}>({className,style,height,filterData,filters,change,ready,clean,label,loading,withSearch,withToggledFilters,search:upperSearch,onSearchChange,onFilterChange,onCollapsedChange,}:import("../..").IFilterListSlot<FilterData_1>)=>JSX.Element;OperationListSlot:({className,style,operations,width,}:import("../..").IOperationListSlot)=>JSX.Element;SearchSlot:({className,style,label,loading,clean,search:upperSearch,onSearchChange,}:import("../..").ISearchSlot)=>JSX.Element;};export const SlotContext:import("react").Context<ISlotFactoryContext>;export default SlotContext;}declare module'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext'{import{ComponentType}from'react';import{IBodyRowSlot}from'react-declarative/components/List/slots/BodyRowSlot';import{ICheckboxCellSlot}from'react-declarative/components/List/slots/CheckboxCellSlot';import{ICommonCellSlot}from'react-declarative/components/List/slots/CommonCellSlot';import{IHeadRowSlot}from'react-declarative/components/List/slots/HeadRowSlot';import{IActionAddSlot}from'react-declarative/components/List/slots/ActionAddSlot';import{IActionMenuSlot}from'react-declarative/components/List/slots/ActionMenuSlot';import{IActionFabSlot}from'react-declarative/components/List/slots/ActionFabSlot';import{IActionListSlot}from'react-declarative/components/List/slots/ActionListSlot';import{IChipListSlot}from'react-declarative/components/List/slots/ChipListSlot';import{IFilterListSlot}from'react-declarative/components/List/slots/FilterListSlot';import{IOperationListSlot}from'react-declarative/components/List/slots/OperationListSlot';import{ISearchSlot}from'react-declarative/components/List/slots/SearchSlot';export interface ISlotFactoryContext{BodyRow:ComponentType<IBodyRowSlot>;CheckboxCell:ComponentType<ICheckboxCellSlot>;CommonCell:ComponentType<ICommonCellSlot>;HeadRow:ComponentType<IHeadRowSlot>;ActionAdd:ComponentType<IActionAddSlot>;ActionFab:ComponentType<IActionFabSlot>;ActionMenu:ComponentType<IActionMenuSlot>;ActionListSlot:ComponentType<IActionListSlot>;FilterListSlot:ComponentType<IFilterListSlot>;ChipListSlot:ComponentType<IChipListSlot>;OperationListSlot:ComponentType<IOperationListSlot>;SearchSlot:ComponentType<ISearchSlot>;}export default ISlotFactoryContext;}declare module'react-declarative/components/One/components/SlotFactory/SlotFactory'{import*as React from'react';import ISlotFactoryContext from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';interface ISlotFactoryProps extends Partial<ISlotFactoryContext>{children:React.ReactNode;}export const SlotFactory:({children,...currentSlots}:Partial<ISlotFactoryProps>)=>JSX.Element;export default SlotFactory;}declare module'react-declarative/components/One/components/SlotFactory/SlotContext'{import ISlotFactoryContext from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';export const defaultSlots:{CheckBox:({disabled,onChange,title,value,}:import("../..").ICheckBoxSlot)=>JSX.Element;Combo:({value,disabled,fieldReadonly,description,placeholder,outlined,itemList,keepSync,title,dirty,invalid,tr,shouldUpdateItemList:shouldUpdate,onChange,}:import("../..").IComboSlot)=>JSX.Element;Items:({value,disabled,fieldReadonly,description,placeholder,outlined,itemList,keepSync,dirty,invalid,title,tr,shouldUpdateItemList:shouldUpdate,onChange,}:import("../..").IItemsSlot)=>JSX.Element;Line:({title,}:import("../..").ILineSlot)=>JSX.Element;Radio:({disabled,value,onChange,title,radioValue,name,}:import("../..").IRadioSlot)=>JSX.Element;Rating:({value,disabled,fieldReadonly,title,name,onChange,}:import("../..").IRatingSlot)=>JSX.Element;Progress:({maxPercent,showPercentLabel,value,}:import("../..").IProgressSlot)=>JSX.Element;Typography:({value,placeholder,typoVariant,style,}:import("../..").ITypographySlot)=>JSX.Element;Text:({invalid,value,disabled,readonly,inputType,inputMode,inputPattern,description,outlined,title,leadingIcon:li,trailingIcon:ti,leadingIconClick:lic,trailingIconClick:tic,inputRows:rows,placeholder,inputAutocomplete:autoComplete,inputFormatterSymbol:symbol,inputFormatterAllowed:allowed,inputFormatterReplace:replace,inputFormatterTemplate:template,inputFormatter,dirty,loading,autoFocus,inputRef,onChange,name,}:import("../..").ITextSlot)=>JSX.Element;Switch:({disabled,value,onChange,title,}:import("../..").ISwitchSlot)=>JSX.Element;Slider:({value,onChange,leadingIcon:li,trailingIcon:ti,leadingIconClick:lic,trailingIconClick:tic,labelFormatSlider,stepSlider,maxSlider,minSlider,}:import("../..").ISliderSlot)=>JSX.Element;};export const SlotContext:import("react").Context<ISlotFactoryContext>;export default SlotContext;}declare module'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext'{import{ComponentType}from'react';import{IProgressSlot}from'react-declarative/components/One/slots/ProgressSlot';import{ICheckBoxSlot}from'react-declarative/components/One/slots/CheckBoxSlot';import{IItemsSlot}from'react-declarative/components/One/slots/ItemsSlot';import{IComboSlot}from'react-declarative/components/One/slots/ComboSlot';import{ILineSlot}from'react-declarative/components/One/slots/LineSlot';import{IRadioSlot}from'react-declarative/components/One/slots/RadioSlot';import{IRatingSlot}from'react-declarative/components/One/slots/RatingSlot';import{ITypographySlot}from'react-declarative/components/One/slots/TypographySlot';import{ITextSlot}from'react-declarative/components/One/slots/TextSlot';import{ISwitchSlot}from'react-declarative/components/One/slots/SwitchSlot';import{ISliderSlot}from'react-declarative/components/One/slots/SliderSlot';export interface ISlotFactoryContext{CheckBox:ComponentType<ICheckBoxSlot>;Combo:ComponentType<IComboSlot>;Items:ComponentType<IItemsSlot>;Line:ComponentType<ILineSlot>;Progress:ComponentType<IProgressSlot>;Radio:ComponentType<IRadioSlot>;Rating:ComponentType<IRatingSlot>;Typography:ComponentType<ITypographySlot>;Text:ComponentType<ITextSlot>;Switch:ComponentType<ISwitchSlot>;Slider:ComponentType<ISliderSlot>;}export default ISlotFactoryContext;}declare module'react-declarative/components/common/ListPicker/ListPicker'{import IRowData,{RowId}from'react-declarative/model/IRowData';import IListProps from'react-declarative/model/IListProps';import IAnything from'react-declarative/model/IAnything';import IColumn from'react-declarative/model/IColumn';import SelectionMode from'react-declarative/model/SelectionMode';import IListRowAction from'react-declarative/model/IListRowAction';export interface IListPickerProps<RowData extends IRowData=IAnything>{onChange:(data:RowId[]|null)=>void;handler:IListProps<RowData>['handler'];selectionMode:SelectionMode.Single|SelectionMode.Multiple;columns:Omit<IColumn<RowData>,keyof{headerName:never;width:never;}>[];selectedRows:NonNullable<IListProps<RowData>['selectedRows']>|null;minHeight:number;minWidth:number;title:string;open:boolean;rowActions?:IListRowAction[];}export const ListPicker:<RowData extends IRowData=any>({onChange,handler,title,columns,open,selectionMode,selectedRows:selectedRowsDefault,minHeight,minWidth,rowActions,}:IListPickerProps<RowData>)=>JSX.Element;export default ListPicker;}declare module'react-declarative/components/One/One'{import IField from'react-declarative/model/IField';import TypedField from"react-declarative/model/TypedField";import IOnePublicProps from"react-declarative/model/IOnePublicProps";export const One:{<Data extends unknown=any,Field=IField<Data>>(props:IOnePublicProps<Data,Field>):JSX.Element;displayName:string;typed:{<Data_1 extends unknown=any,Field_1=TypedField<Data_1>>(props:IOnePublicProps<Data_1,Field_1>):JSX.Element;displayName:string;};};export const OneTyped:{<Data extends unknown=any,Field=TypedField<Data>>(props:IOnePublicProps<Data,Field>):JSX.Element;displayName:string;};export default One;}declare module'react-declarative/components/One/slots'{export*from'react-declarative/components/One/slots/CheckBoxSlot';export*from'react-declarative/components/One/slots/ComboSlot';export*from'react-declarative/components/One/slots/ItemsSlot';export*from'react-declarative/components/One/slots/LineSlot';export*from'react-declarative/components/One/slots/ProgressSlot';export*from'react-declarative/components/One/slots/RadioSlot';export*from'react-declarative/components/One/slots/RatingSlot';export*from'react-declarative/components/One/slots/SliderSlot';export*from'react-declarative/components/One/slots/SwitchSlot';export*from'react-declarative/components/One/slots/TextSlot';export*from'react-declarative/components/One/slots/TypographySlot';}declare module'react-declarative/components/One/config/createField'{import IEntity from"react-declarative/model/IEntity";export const createField:<Data extends unknown=any>(entity:IEntity<Data>,currentPath?:string)=>JSX.Element;export default createField;}declare module'react-declarative/components/One/components/makeField'{export*from'react-declarative/components/One/components/makeField/makeField';export{default}from'react-declarative/components/One/components/makeField/makeField';}declare module'react-declarative/components/One/context/PropsProvider'{import*as React from'react';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IOneProps from'react-declarative/model/IOneProps';interface IPropsProviderProps<Data extends IAnything=IAnything,Field extends IField<Data>=IField<Data>>extends IOneProps<Data,Field>{children:React.ReactNode;}export const PropsProvider:<Data extends unknown=any,Field extends IField<Data>=IField<Data>>({children,...props}:IPropsProviderProps<Data,Field>)=>JSX.Element;export const useOneProps:<Data extends unknown=any>()=>IOneProps<Data,IField<Data>>;export default PropsProvider;}declare module'react-declarative/components/One/context/StateProvider'{import*as React from'react';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IOneProps from'react-declarative/model/IOneProps';interface IStateProviderProps<Data=IAnything,Field extends IField<Data>=IField<Data>>extends IOneProps<Data,Field>{children:React.ReactElement;}interface IState<Data=IAnything>{object:Data|null;setObject:(data:Data,invalidMap:Record<string,boolean>)=>void;}export const StateProvider:<Data extends unknown,Field extends IField<Data>=IField<Data>>({children,...otherProps}:IStateProviderProps<Data,Field>)=>JSX.Element;export const useOneState:<Data extends unknown>()=>IState<Data>;export default StateProvider;}declare module'react-declarative/components/One/other/OtherComboSlot'{import{IComboSlot}from'react-declarative/components/One/slots/ComboSlot';export const OtherComboSlot:({value,disabled,readonly,description,placeholder,outlined,itemList,title,dirty,invalid,tr,onChange,}:IComboSlot)=>JSX.Element;export default OtherComboSlot;}declare module'react-declarative/components/One/other/OtherItemsSlot'{import{IItemsSlot}from'react-declarative/components/One/slots/ItemsSlot';export const OtherItemsSlot:({value,disabled,readonly,description,placeholder,outlined,itemList,dirty,invalid,title,tr,onChange,}:IItemsSlot)=>JSX.Element;export default OtherItemsSlot;}declare module'react-declarative/components/One/api/useLocalHandler'{import IOneProps,{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface ILocalHandlerParams<Data extends IAnything=IAnything>{resultMap?:(json:Record<string,any>|null)=>Data|null;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;fallback?:(e:Error)=>void;}export interface ILocalHandlerResult<Data extends IAnything=IAnything>{data:Data|null;change:IOneProps<Data>['change'];}export const useLocalHandler:<Data extends unknown=any>(handler:OneHandler<Data>,{resultMap,onLoadBegin,onLoadEnd,fallback,}?:ILocalHandlerParams<Data>)=>ILocalHandlerResult<Data>;export default useLocalHandler;}declare module'react-declarative/components/One/api/useStaticHandler'{import{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IStaticHandlerParams<Data extends IAnything=IAnything>{resultMap?:(json:Record<string,any>|null)=>Data|null;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;fallback?:(e:Error)=>void;}export const useStaticHandler:<Data extends unknown=any>(handler:OneHandler<Data>,{resultMap,onLoadBegin,onLoadEnd,fallback,}?:IStaticHandlerParams<Data>)=>OneHandler<Data>;export default useStaticHandler;}declare module'react-declarative/components/One/api/usePreventLeave'{import{BrowserHistory,MemoryHistory,HashHistory}from"history";import IOneProps from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IPreventLeaveParams<Data=IAnything>{history?:BrowserHistory|MemoryHistory|HashHistory;onChange?:IOneProps<Data>['change'];onBlock?:()=>(()=>void)|void;onSave?:(data:Data)=>(boolean|Promise<boolean>);fallback?:(e:Error)=>void;}export interface IPreventLeaveReturn<Data=IAnything>{oneProps:{change:(data:Data,initial?:boolean)=>void;invalidity:IOneProps<Data>['invalidity'];};data:Data|null;beginSave:()=>Promise<boolean>;afterSave:()=>void;}export const usePreventLeave:<Data=any>({history,onChange,onBlock,onSave,fallback,}?:IPreventLeaveParams<Data>)=>IPreventLeaveReturn<Data>;export default usePreventLeave;}declare module'react-declarative/components/List/List'{import*as React from'react';import IListProps,{IListState}from'react-declarative/model/IListProps';import TypedField from'react-declarative/model/TypedField';import IAnything from'react-declarative/model/IAnything';import IRowData from'react-declarative/model/IRowData';import IField from'react-declarative/model/IField';export class List<FilterData extends{}=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<IAnything>>extends React.Component<IListProps<FilterData,RowData,Field>,IListState<FilterData,RowData>>{static defaultProps:Partial<IListProps>;constructor(props:IListProps<FilterData,RowData,Field>);componentDidUpdate:()=>void;componentDidMount:()=>void;componentWillUnmount:()=>void;renderInner:()=>JSX.Element;render:()=>JSX.Element;}export const ListTyped:<FilterData extends{}=any,RowData extends IRowData=any>(props:IListProps<FilterData,RowData,TypedField<FilterData>>)=>JSX.Element;export default List;}declare module'react-declarative/components/List/slots'{export*from'react-declarative/components/List/slots/ActionAddSlot';export*from'react-declarative/components/List/slots/ActionFabSlot';export*from'react-declarative/components/List/slots/ActionMenuSlot';export*from'react-declarative/components/List/slots/BodyRowSlot';export*from'react-declarative/components/List/slots/CheckboxCellSlot';export*from'react-declarative/components/List/slots/CommonCellSlot';export*from'react-declarative/components/List/slots/HeadRowSlot';export*from'react-declarative/components/List/slots/ActionListSlot';export*from'react-declarative/components/List/slots/ChipListSlot';export*from'react-declarative/components/List/slots/FilterListSlot';export*from'react-declarative/components/List/slots/OperationListSlot';export*from'react-declarative/components/List/slots/SearchSlot';}declare module'react-declarative/components/List/hooks/useProps'{import*as React from'react';import IListProps,{IListCallbacks,IListState}from'react-declarative/model/IListProps';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';import IRowData from'react-declarative/model/IRowData';interface IPropContext<FilterData extends{}=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<FilterData>>extends Omit<IListProps<FilterData,RowData,Field>,keyof{limit:never;chips:never;search:never;filterData:never;isChooser:never;}>,IListState<FilterData,RowData>,IListCallbacks<FilterData,RowData>{children:React.ReactNode;}export const PropProvider:<FilterData extends{}=any,RowData extends IRowData=any,Field extends IField<any>=IField<FilterData>>(props:IPropContext<FilterData,RowData,Field>)=>JSX.Element;export const useProps:<FilterData extends{}=any,RowData extends IRowData=any,Field extends IField<any>=IField<FilterData>>()=>IPropContext<FilterData,RowData,Field>;export default useProps;}declare module'react-declarative/components/List/hooks/useCachedRows'{import React from'react';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';export const useCachedRows:<RowData extends IRowData=any>()=>IState<RowData>;interface ICachedRowsProviderProps{children:React.ReactNode;}interface IState<RowData extends IRowData=IAnything>{cachedRows:Map<RowId,RowData>;selectedRows:RowData[];}export const CachedRowsProvider:<RowData extends IRowData=any>({children,}:ICachedRowsProviderProps)=>JSX.Element;export default useCachedRows;}declare module'react-declarative/components/List/api/useParsedPagination'{import IAnything from"react-declarative/model/IAnything";import IListProps from"react-declarative/model/IListProps";import IRowData from"react-declarative/model/IRowData";export interface IParseResult<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{filterData:IListProps<FilterData,RowData>['filterData'];sortModel:IListProps<FilterData,RowData>['sortModel'];chipData:IListProps<FilterData,RowData>['chipData'];limit:IListProps<FilterData,RowData>['limit'];page:IListProps<FilterData,RowData>['page'];search:IListProps<FilterData,RowData>['search'];}export type IParams<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>=IParseResult<FilterData,RowData>;export const DEFAULT_PARSE_RESULT:IParseResult;export const useParsedPagination:<FilterData extends{}=any,RowData extends IRowData=any>(query:string,{filterData:defaultFilterData,sortModel:defaultSortModel,chipData:defaultChips,limit:defaultLimit,page:defaultPage,search:defaultSearch,}?:Partial<IParams<FilterData,RowData>>)=>IParseResult<FilterData,RowData>;export default useParsedPagination;}declare module'react-declarative/components/List/api/useSerializedPagination'{import IAnything from"react-declarative/model/IAnything";import IListProps from"react-declarative/model/IListProps";import IRowData from"react-declarative/model/IRowData";import{IParseResult}from"react-declarative/components/List/api/useParsedPagination";export interface IResultListProps<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{onFilterChange:IListProps<FilterData,RowData>['onFilterChange'];onLimitChange:IListProps<FilterData,RowData>['onLimitChange'];onPageChange:IListProps<FilterData,RowData>['onPageChange'];onSortModelChange:IListProps<FilterData,RowData>['onSortModelChange'];onChipsChange:IListProps<FilterData,RowData>['onChipsChange'];onSearchChange:IListProps<FilterData,RowData>['onSearchChange'];onChange?:(pagination:string)=>void;}interface IResult<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{listProps:IResultListProps<FilterData,RowData>;serializedPagination:string;}export interface IParams<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>extends Partial<IParseResult<FilterData,RowData>>,Partial<IResultListProps<FilterData,RowData>>{}export const useSerializedPagination:<FilterData extends{}=any,RowData extends IRowData=any>({chipData,filterData,limit,page,search,sortModel,...otherProps}?:IParams<FilterData,RowData>)=>IResult<FilterData,RowData>;export default useSerializedPagination;}declare module'react-declarative/components/List/api/useHashstatePagination'{import{BrowserHistory,HashHistory,MemoryHistory}from'history';import{IParams as ISerializedPaginationParams}from'react-declarative/components/List/api/useSerializedPagination';import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";interface IParams<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>extends ISerializedPaginationParams<FilterData,RowData>{history?:MemoryHistory|BrowserHistory|HashHistory;}export const useHashstatePagination:<FilterData extends{}=any,RowData extends IRowData=any>({history,onChange,onChipsChange,onFilterChange,onLimitChange,onPageChange,onSearchChange,onSortModelChange,...props}?:IParams<FilterData,RowData>)=>{listProps:{filterData:Partial<FilterData>|undefined;sortModel:import("../../../model/IListProps").ListHandlerSortModel<RowData>|undefined;chipData:Partial<Record<keyof RowData,boolean>>|undefined;limit:number|undefined;page:number|undefined;search:string|undefined;onFilterChange:((data:FilterData)=>void)|undefined;onLimitChange:((limit:number)=>void)|undefined;onPageChange:((page:number)=>void)|undefined;onSortModelChange:((sort:import("../../../model/IListProps").ListHandlerSortModel<RowData>)=>void)|undefined;onChipsChange:((data:Partial<Record<keyof RowData,boolean>>)=>void)|undefined;onSearchChange:((search:string)=>void)|undefined;onChange?:((pagination:string)=>void)|undefined;};};export default useHashstatePagination;}declare module'react-declarative/components/List/api/useCachedPaginator'{import{ListHandler}from'react-declarative/model/IListProps';import IAnything from'react-declarative/model/IAnything';import IRowData from'react-declarative/model/IRowData';import{IArrayPaginatorParams}from"react-declarative/components/List/api/useArrayPaginator";interface IResult<FilterData extends{}=IAnything,RowData extends IRowData=IAnything>{handler:ListHandler<FilterData,RowData>;clear:()=>void;}export const useCachedPaginator:<FilterData extends{}=any,RowData extends IRowData=any>(handler:ListHandler<FilterData,RowData>,params:IArrayPaginatorParams<FilterData,RowData>)=>IResult<FilterData,RowData>;export default useCachedPaginator;}declare module'react-declarative/components/NoSsr/NoSsr'{import*as React from"react";interface INoSsrProps{ServerView?:React.ComponentType<any>;children?:React.ReactNode;}interface State{canRender:boolean;}export class NoSsr extends React.Component<INoSsrProps,State>{constructor(props:INoSsrProps);componentDidMount:()=>void;render:()=>JSX.Element;}export default NoSsr;}declare module'react-declarative/components/Switch/Switch'{import*as React from'react';import{BrowserHistory,HashHistory,MemoryHistory}from'history';import{IFetchViewProps}from'react-declarative/components/FetchView';export interface ISwitchItem{path:string;element?:React.ComponentType<any>;guard?:()=>boolean|Promise<boolean>;prefetch?:(params:Record<string,any>)=>Record<string,any>|Promise<Record<string,any>>;unload?:(params:Record<string,any>)=>(Promise<void>|void);redirect?:string|((params:Record<string,any>)=>string|null);}export interface ISwitchProps{className?:string;style?:React.CSSProperties;items:ISwitchItem[];fallback?:(e:Error)=>void;history?:BrowserHistory|MemoryHistory|HashHistory;Forbidden?:React.ComponentType<any>;NotFound?:React.ComponentType<any>;Loader?:React.ComponentType<any>;Error?:React.ComponentType<any>;animation?:IFetchViewProps['animation'];onLoadStart?:()=>void;onLoadEnd?:(isOk?:boolean)=>void;throwError?:boolean;children?:(result:ISwitchResult)=>React.ReactNode;}interface ISwitchResult{element:React.ComponentType<any>;path:string;params?:Record<string,any>;}export const Switch:({className,style,Loader,Forbidden,NotFound,Error,animation,history,children,fallback,items,onLoadStart,onLoadEnd,throwError,}:ISwitchProps)=>JSX.Element;export default Switch;}declare module'react-declarative/components/Scaffold/Scaffold'{import IScaffoldProps from'react-declarative/components/Scaffold/model/IScaffoldProps';export const Scaffold:<T extends unknown=string>({roles,payload,throwError,fallback,options,loaderLine,loader,Loader,withPassthrough,...props}:IScaffoldProps<T>)=>JSX.Element;export default Scaffold;}declare module'react-declarative/components/Scaffold/model/IScaffoldProps'{import IMenuGroup from"react-declarative/model/IMenuGroup";import IScaffoldOption from"react-declarative/components/Scaffold/model/IScaffoldOption";export interface IScaffoldProps<T extends any=string>{children:React.ReactNode;className?:string;dense?:boolean;withPassthrough?:boolean;style?:React.CSSProperties;title?:string;loaderLine?:boolean;loader?:number;colored?:boolean;selected?:string;options?:IMenuGroup[];actions?:IScaffoldOption<T>[];payload?:T;throwError?:boolean;fallback?:(e:Error)=>void;BeforeSearch?:React.ComponentType<any>;AfterSearch?:React.ComponentType<any>;BeforeMenuContent?:React.ComponentType<any>;AfterMenuContent?:React.ComponentType<any>;Loader?:React.ComponentType<any>;roles?:string[]|((payload:T)=>string[])|((payload:T)=>Promise<string[]>);onOptionClick?:(name:string)=>void;onAction?:(name:string)=>void;}export default IScaffoldProps;}declare module'react-declarative/components/Scaffold/model/IScaffoldOption'{import IOption from"react-declarative/model/IOption";export interface IScaffoldOption<T extends any=string>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(payload:T)=>Promise<boolean>|boolean;isDisabled?:(payload:T)=>Promise<boolean>|boolean;}export default IScaffoldOption;}declare module'react-declarative/components/ActionMenu/ActionMenu'{import*as React from"react";import{IAsyncProps}from"react-declarative/components/Async";import IOption from"react-declarative/model/IOption";export interface IActionMenuProps<T extends any=object>{keepMounted?:boolean;options?:Partial<IOption>[];transparent?:boolean;disabled?:boolean;onAction?:(action:string)=>void;onToggle?:(opened:boolean)=>void;fallback?:(e:Error)=>void;throwError?:boolean;className?:string;style?:React.CSSProperties;payload?:IAsyncProps<T>["payload"];onLoadStart?:IAsyncProps<T>["onLoadStart"];onLoadEnd?:IAsyncProps<T>["onLoadEnd"];BeforeContent?:React.ComponentType<any>;AfterContent?:React.ComponentType<any>;}export const ActionMenu:<T extends unknown=object>({options,transparent,disabled,throwError,fallback,onToggle,onAction,payload,className,style,onLoadStart,onLoadEnd,keepMounted,BeforeContent,AfterContent,}:IActionMenuProps<T>)=>JSX.Element;export default ActionMenu;}declare module'react-declarative/components/Breadcrumbs/Breadcrumbs'{import*as React from'react';import IBreadcrumbsOption from'react-declarative/model/IBreadcrumbsOption';interface IBreadcrumbsProps<T extends any=string>{onSave?:()=>void;onBack?:()=>void;onAction?:(action:string)=>void;actions?:IBreadcrumbsOption<T>[];saveDisabled?:boolean;title?:string;subtitle?:string;withSave?:boolean;payload?:T;BeforeMenuContent?:React.ComponentType<any>;AfterMenuContent?:React.ComponentType<any>;}export const Breadcrumbs:<T extends unknown=string>({onSave,onBack,onAction,actions,saveDisabled,payload,title,subtitle,withSave,BeforeMenuContent,AfterMenuContent,}:IBreadcrumbsProps<T>)=>JSX.Element;export default Breadcrumbs;}declare module'react-declarative/components/ActionButton/ActionButton'{import*as React from'react';import{ButtonProps}from'@mui/material/Button';const ProgressDefault:({loading,children,}:{children:React.ReactNode;loading:boolean;})=>JSX.Element;interface IActionButtonProps extends Omit<ButtonProps,keyof{onClick:never;}>{Progress?:typeof ProgressDefault;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;onClick?:(event:React.MouseEvent<HTMLButtonElement,MouseEvent>)=>(void|Promise<void>);fallback?:(e:Error)=>void;throwError?:boolean;}export const ActionButton:({Progress,onClick,onLoadStart,onLoadEnd,fallback,children,disabled,throwError,variant,...otherProps}:IActionButtonProps)=>JSX.Element;export default ActionButton;}declare module'react-declarative/components/ActionStopIcon/ActionStopIcon'{import*as React from'react';import{SxProps}from'@mui/material';import{IconButtonProps}from'@mui/material/IconButton';interface IActionStopIconProps extends Omit<IconButtonProps,keyof{className:never;style:never;sx:never;size:never;thickness:never;onClick:never;}>{children?:React.ReactNode;sx?:SxProps;className?:string;style?:React.CSSProperties;noProgress?:boolean;disabled?:boolean;size?:number;thickness?:number;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;onClick?:(event:React.MouseEvent<HTMLButtonElement,MouseEvent>)=>(void|Promise<void>);fallback?:(e:Error)=>void;throwError?:boolean;}export const ActionStopIcon:({className,style,sx,size,thickness,noProgress,throwError,disabled,onLoadStart,onLoadEnd,fallback,onClick,children,...otherProps}:IActionStopIconProps)=>JSX.Element;export default ActionStopIcon;}declare module'react-declarative/components/ErrorBoundary/ErrorBoundary'{import*as React from'react';import{BrowserHistory,HashHistory,MemoryHistory}from'history';interface IErrorBoundaryProps{onError?:(error:Error,errorInfo:any)=>void;history:MemoryHistory|BrowserHistory|HashHistory;children?:React.ReactNode;}interface IErrorBoundaryState{hasError:boolean;}export class ErrorBoundary extends React.Component<IErrorBoundaryProps,IErrorBoundaryState>{static getDerivedStateFromError():{hasError:boolean;};constructor(props:IErrorBoundaryProps);componentDidUpdate:()=>void;componentDidCatch:(error:any,errorInfo:any)=>void;render:()=>React.ReactNode;}export default ErrorBoundary;}declare module'react-declarative/components/ActionFilter/ActionFilter'{import{BoxProps as MatBoxProps}from'@mui/material/Box';import IActionFilterProps from'react-declarative/components/ActionFilter/model/IActionFilterProps';type BoxProps=Omit<MatBoxProps,keyof{onChange:never;}>;export const ActionFilter:({actions,label,addLabel,data:initialData,onChange,...otherProps}:BoxProps&IActionFilterProps)=>JSX.Element;export default ActionFilter;}declare module'react-declarative/components/ActionFilter/model/IActionFilter'{export interface IActionFilter{action:string;label:string;items:{value:string;label:string;}[];}export default IActionFilter;}declare module'react-declarative/components/ActionTrigger/ActionTrigger'{import IActionTriggerProps from'react-declarative/components/ActionTrigger/model/IActionTriggerProps';export const ActionTrigger:<T extends unknown=object>({actions,variant,size,onAction,fallback,onLoadStart,onLoadEnd,payload,deps,throwError,...otherProps}:IActionTriggerProps<T>)=>JSX.Element;export default ActionTrigger;}declare module'react-declarative/components/ActionTrigger/model/IActionTrigger'{import IAnything from"react-declarative/model/IAnything";import IOption from"react-declarative/model/IOption";export interface IActionTrigger<Data extends object=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isAvailable?:((payload:Data)=>boolean|Promise<boolean>)|boolean;}export default IActionTrigger;}declare module'react-declarative/components/ActionIcon/ActionIcon'{import*as React from'react';import{IconButtonProps}from'@mui/material/IconButton';interface IActionIconProps extends Omit<IconButtonProps,keyof{onClick:never;size:never;}>{onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;onClick?:(event:React.MouseEvent<HTMLButtonElement,MouseEvent>)=>(void|Promise<void>);fallback?:(e:Error)=>void;throwError?:boolean;size?:number;thickness?:number;noProgress?:boolean;}export const ActionIcon:({className,style,sx,noProgress,throwError,disabled,onLoadStart,onLoadEnd,onClick,fallback,children,size,thickness,...otherProps}:IActionIconProps)=>JSX.Element;export default ActionIcon;}declare module'react-declarative/components/ActionToggle/ActionToggle'{import{SxProps}from"@mui/material";import{BoxProps}from'@mui/material/Box';interface IActionToggleProps extends Omit<BoxProps,keyof{onChange:never;onClick:never;sx?:never;}>{onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;onClick?:(value:boolean)=>(void|Promise<void>);fallback?:(e:Error)=>void;checked?:boolean;disabled?:boolean;defaultChecked?:boolean;throwError?:boolean;sx?:SxProps;}export const ActionToggle:({className,onClick,onLoadStart,onLoadEnd,fallback,disabled,throwError,checked:upperChecked,defaultChecked,...otherProps}:IActionToggleProps)=>JSX.Element;export default ActionToggle;}declare module'react-declarative/components/ConstraintView/ConstraintView'{import*as React from'react';import{IAutoSizerProps,IChildParams}from'react-declarative/components/AutoSizer';import IAnything from'react-declarative/model/IAnything';interface IConstraintViewProps<T extends IAnything=IAnything>extends Omit<IAutoSizerProps<T>,keyof{children:never;}>{phoneView?:React.ComponentType<any>;tabletView?:React.ComponentType<any>;desktopView?:React.ComponentType<any>;onViewChanged?:(name:string)=>void;params?:IChildParams<T>;}export const ConstraintView:<T extends unknown=any>({desktopView:Desktop,tabletView:Tablet,phoneView:Phone,onViewChanged,params,...otherProps}:IConstraintViewProps<T>)=>JSX.Element;export default ConstraintView;}declare module'react-declarative/components/DragDropView/DragDropView'{import*as React from"react";import{SxProps}from"@mui/material/styles";interface IDragDropViewProps{className?:string;style?:React.CSSProperties;sx?:SxProps;multiple?:boolean;accept?:string;onData?:(files:File[])=>void;onReject?:(files:File[])=>void;}export const DragDropView:({className,style,sx,multiple,accept,onData,onReject,}:IDragDropViewProps)=>JSX.Element;export default DragDropView;}declare module'react-declarative/components/ScrollView/ScrollView'{import*as React from'react';import{IAutoSizerProps}from'react-declarative/components/AutoSizer';import IAnything from'react-declarative/model/IAnything';export const SCROLL_VIEW_TARGER="react-declarative__scrollViewTarget";interface IScrollViewProps<T extends IAnything=IAnything>{children:React.ReactNode;className?:string;style?:React.CSSProperties;center?:boolean;payload?:IAutoSizerProps<T>["payload"];}export const ScrollView:<T extends unknown=any>({children,className,style,payload,center,}:IScrollViewProps<T>)=>JSX.Element;export default ScrollView;}declare module'react-declarative/components/ScaleView/ScaleView'{import*as React from'react';interface IScaleViewProps{className?:string;style?:React.CSSProperties;children?:React.ReactNode;stretch?:boolean;center?:boolean;}export const ScaleView:({children,className,style,stretch,center,}:IScaleViewProps)=>JSX.Element;export default ScaleView;}declare module'react-declarative/components/AutoSizer/AutoSizer'{import*as React from"react";import ISize from"react-declarative/model/ISize";export interface IChildParams<T extends any=unknown>extends ISize{payload:T;}export interface IAutoSizerProps<T extends any=unknown>{children:(s:IChildParams<T>)=>any;className?:string;defaultHeight?:number;defaultWidth?:number;withContainerHeight?:boolean;withContainerWidth?:boolean;heightRequest?:(h:number)=>number;widthRequest?:(w:number)=>number;onResize?:(s:ISize)=>void;style?:React.CSSProperties;payload?:T;target?:HTMLElement;closest?:string;selector?:string;}type State={height:number;width:number;childHeight:number;childWidth:number;};type ResizeHandler=(element:HTMLElement,onResize:()=>void)=>void;type DetectElementResize={addResizeListener:ResizeHandler;removeResizeListener:ResizeHandler;};export class AutoSizer<T extends unknown=object>extends React.Component<IAutoSizerProps<T>,State>{static defaultProps:Partial<IAutoSizerProps<any>>;lastHeightRequest:(h:number)=>number;lastWidthRequest:(w:number)=>number;state:{height:number;width:number;childHeight:number;childWidth:number;};_parentNode?:HTMLElement;_autoSizer?:HTMLElement|null;_detectElementResize?:DetectElementResize;shouldComponentUpdate(nextProps:IAutoSizerProps<T>,nextState:State):boolean;componentDidMount():void;componentWillUnmount():void;render():JSX.Element;_onResize:()=>void;_setRef:(autoSizer:HTMLElement|null)=>void;}export default AutoSizer;}declare module'react-declarative/components/FadeView/FadeView'{import*as React from"react";import{IAutoSizerProps}from"react-declarative/components/AutoSizer";import{IFadeContainerProps}from"react-declarative/components/FadeView/components/FadeContainer";type FadeContainerT=Pick<IFadeContainerProps,keyof{Fade:never;color:never;zIndex:never;disableBottom:never;disableRight:never;}>;interface IFadeViewProps<T extends any=unknown>extends FadeContainerT{className?:string;style?:React.CSSProperties;children:React.ReactNode;payload?:IAutoSizerProps<T>["payload"];}export const FadeView:<T extends unknown=any>({className,style,children,Fade,color,zIndex,disableBottom,disableRight,payload,}:IFadeViewProps<T>)=>JSX.Element;export default FadeView;}declare module'react-declarative/components/TabsView/TabsView'{import*as React from'react';import{TabsProps}from'@mui/material/Tabs';import{IAsyncProps}from'react-declarative/components/Async';import ITab from'react-declarative/model/ITab';export interface ITabsViewProps<T extends any=string>extends Omit<IAsyncProps<T>,keyof{children:never;Error:never;}>{className?:string;style?:React.CSSProperties;items:ITab<T>[];value?:string;children:(value:string)=>React.ComponentType<any>;onChange?:(value:string)=>void;centered?:TabsProps['centered'];variant?:TabsProps['variant'];noUnderline?:boolean;}export const TabsView:<T extends unknown=string>({className,style,centered,variant,items,value:defaultValue,noUnderline,children,onChange,onLoadStart,onLoadEnd,Loader,...otherProps}:ITabsViewProps<T>)=>JSX.Element;export default TabsView;}declare module'react-declarative/components/TabsView/api/useTabsHashstate'{import{BrowserHistory,HashHistory,MemoryHistory}from'history';import{ITabsViewProps}from'react-declarative/components/TabsView/TabsView';interface IResult<T extends any=string>{tabsProps:{value:ITabsViewProps<T>['value'];onChange:ITabsViewProps<T>['onChange'];};hashManager:{getValue:()=>string;setValue:(hash:string)=>void;};}interface IParams{history?:MemoryHistory|BrowserHistory|HashHistory;defaultValue?:string;}export const useTabsHashstate:<T extends unknown=string>({history,defaultValue,}?:IParams)=>IResult<T>;export default useTabsHashstate;}declare module'react-declarative/components/FetchView/FetchView'{import*as React from'react';import{IAsyncProps}from'react-declarative/components/Async';import{IRevealProps}from'react-declarative/components/FetchView/components/Reveal';type Result=React.ReactNode|void;type ObjectState<P extends any=object,A=any>=((payload:P)=>Promise<A>)|((payload:P)=>A);type TupleState<P extends any=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>=((payload:P)=>readonly[Promise<A>?,Promise<B>?,Promise<C>?,Promise<D>?,Promise<E>?,Promise<F>?,Promise<G>?,Promise<H>?,Promise<I>?,Promise<J>?])|((payload:P)=>readonly[A?,B?,C?,D?,E?,F?,G?,H?,I?,J?])|((payload:P)=>[Promise<A>?,Promise<B>?,Promise<C>?,Promise<D>?,Promise<E>?,Promise<F>?,Promise<G>?,Promise<H>?,Promise<I>?,Promise<J>?])|((payload:P)=>[A?,B?,C?,D?,E?,F?,G?,H?,I?,J?]);export interface IFetchViewBaseProps<P extends any=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>extends Omit<IAsyncProps<P>,keyof{children:never;}>{animation?:IRevealProps['animation'];className?:string;style?:React.CSSProperties;children:(a:A,b:B,c:C,d:D,e:E,f:F,g:G,h:H,i:I,j:J)=>Promise<Result>|Result;}export type IFetchViewObjectProps<P extends any=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>=IFetchViewBaseProps<P,A,B,C,D,E,F,G,H,I,J>&{state:ObjectState<P,A>;};export type IFetchViewTupleProps<P extends any=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>=IFetchViewBaseProps<P,A,B,C,D,E,F,G,H,I,J>&{state:TupleState<P,A,B,C,D,E,F,G,H,I,J>;};export type IFetchViewProps<P extends any=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>=IFetchViewObjectProps<P,A,B,C,D,E,F,G,H,I,J>|IFetchViewTupleProps<P,A,B,C,D,E,F,G,H,I,J>;export const FetchView:<P extends unknown=object,A=any,B=any,C=any,D=any,E=any,F=any,G=any,H=any,I=any,J=any>({animation,className,style,Loader,Error,onLoadEnd,onLoadStart,children,state,payload,...otherProps}:IFetchViewProps<P,A,B,C,D,E,F,G,H,I,J>)=>JSX.Element;export default FetchView;}declare module'react-declarative/components/WaitView/WaitView'{import*as React from'react';import{IAsyncProps}from'react-declarative/components/Async';interface IWaitViewProps<P extends any=object,T extends any=object>extends Omit<IAsyncProps<P>,keyof{children:never;}>{Content:React.ComponentType<any>;condition:()=>(Promise<boolean>|boolean|Promise<T>|T|Promise<null>|null);conditionMap?:(result:T)=>boolean;onDone?:(attempts:number)=>void;totalAttempts?:number;delay?:number;}export const WaitView:<P extends unknown=object,T extends unknown=object>({onDone,condition,Loader,Content,Error,delay,totalAttempts,conditionMap,payload,...otherProps}:IWaitViewProps<P,T>)=>JSX.Element|null;export default WaitView;}declare module'react-declarative/components/PingView/PingView'{import*as React from'react';interface IPingViewProps<P extends any=object>{children?:React.ReactNode;Offline?:React.ComponentType<any>;ping:(payload?:P)=>(boolean|Promise<boolean>);fallback?:(e:Error)=>void;throwError?:boolean;delay?:5000;payload?:P;onOnline?:()=>void;onOffline?:()=>void;}export const PingView:<P extends unknown=object>({ping,children,onOnline,onOffline,Offline,fallback,throwError,delay,payload,}:IPingViewProps<P>)=>JSX.Element|null;export default PingView;}declare module'react-declarative/components/OfflineView/OfflineView'{import*as React from"react";interface IOfflineViewProps{children?:React.ReactNode;onOnline?:()=>void;onOffline?:()=>void;withPolling?:boolean;config?:IConfig;Offline?:React.ComponentType<any>;}interface IConfig{url:string;method?:string;interval?:number;timeout?:number;}export const OfflineView:({children,onOnline,onOffline,config,withPolling,Offline,}:IOfflineViewProps)=>JSX.Element|null;export default OfflineView;}declare module'react-declarative/components/RevealView/RevealView'{import*as React from'react';import{IRevealProps}from'react-declarative/components/FetchView/components/Reveal';interface IRevealViewProps{className?:string;style?:React.CSSProperties;animation?:IRevealProps['animation'];delay?:number;appear?:boolean;children:React.ReactNode;}export const RevealView:({children,className,style,animation,delay,appear:upperAppear,}:IRevealViewProps)=>JSX.Element;export default RevealView;}declare module'react-declarative/components/SecretView/SecretView'{import*as React from"react";interface ISecretViewProps{children?:React.ReactNode;onCode?:(code:number)=>void;title?:string;description?:string;digits?:number;}export const SecretView:({children,title,description,digits,onCode,}:ISecretViewProps)=>JSX.Element;export default SecretView;}declare module'react-declarative/components/PortalView/PortalView'{import*as React from"react";interface IPortalViewProps{children:React.ReactNode;selector?:string;}export class PortalView extends React.Component<IPortalViewProps>{static defaultProps:{selector:string;};modalRoot?:HTMLElement;element:DocumentFragment;constructor(props:IPortalViewProps);componentDidMount:()=>void;componentWillUnmount:()=>void;render:()=>React.ReactPortal;}export default PortalView;}declare module'react-declarative/components/Async/Async'{import*as React from'react';export interface IAsyncProps<T extends any=object>{children:(p:T)=>(Result|Promise<Result>);fallback?:(e:Error)=>void;Loader?:React.ComponentType<any>;Error?:React.ComponentType<any>;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;payload?:T;deps?:any[];throwError?:boolean;}type Result=React.ReactNode|void;export const Async:<T extends unknown=object>({children,fallback,Loader,Error,onLoadStart,onLoadEnd,payload,deps,throwError,}:IAsyncProps<T>)=>JSX.Element;export default Async;}declare module'react-declarative/components/If/If'{import*as React from'react';export interface IIfProps<T extends any=object>{condition:boolean|((payload:T)=>boolean|Promise<boolean>);children:React.ReactNode;fallback?:(e:Error)=>void;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;payload?:T;deps?:any[];throwError?:boolean;}export const If:<T extends unknown=object>({children,condition,fallback,onLoadStart,onLoadEnd,payload,deps,throwError,}:IIfProps<T>)=>JSX.Element|null;export default If;}declare module'react-declarative/components/common/Group/Group'{import*as React from"react";import{IManagedLayout,PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IGroupProps<Data=IAnything>extends IManagedLayout{style?:PickProp<IField<Data>,'style'>;className?:PickProp<IField<Data>,'className'>;}interface IGroupPrivate{children:React.ReactNode;isItem?:boolean;onFocus?:()=>void;}export const Group:{({className,columns,phoneColumns,tabletColumns,desktopColumns,children,isItem,style,columnsOverride,sx,fieldRightMargin,fieldBottomMargin,onFocus,}:IGroupProps&IGroupPrivate,ref:React.Ref<HTMLDivElement>):JSX.Element;displayName:string;};const _default:React.ForwardRefExoticComponent<IGroupProps<any>&IGroupPrivate&React.RefAttributes<HTMLDivElement>>;export default _default;}declare module'react-declarative/components/common/Outline/Outline'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IOutlineProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IOutlinePrivate<Data=IAnything>{children:React.ReactNode;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;sx?:PickProp<IField<Data>,'sx'>;}export const Outline:{({className,columnsOverride,style,children,sx,}:IOutlineProps&IOutlinePrivate):JSX.Element;displayName:string;};export default Outline;}declare module'react-declarative/components/common/Paper/Paper'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IPaperProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IPaperPrivate<Data=IAnything>{children:React.ReactNode;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;sx?:PickProp<IField<Data>,'sx'>;}export const Paper:{({className,style,children,columnsOverride,sx,}:IPaperProps&IPaperPrivate):JSX.Element;displayName:string;};export default Paper;}declare module'react-declarative/components/common/Expansion/Expansion'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IExpansionProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;style?:PickProp<IField<Data>,'style'>;description?:PickProp<IField<Data>,'description'>;className?:PickProp<IField<Data>,'className'>;}interface IExpansionPrivate<Data=IAnything>{children:React.ReactNode;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;sx?:PickProp<IField<Data>,'sx'>;}export const Expansion:{({title,description,className,columnsOverride,sx,style,children,}:IExpansionProps&IExpansionPrivate):JSX.Element;displayName:string;};export default Expansion;}declare module'react-declarative/components/List/slots/BodyRowSlot'{export*from'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot';export*from'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot';export{default}from'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot';}declare module'react-declarative/components/List/slots/CheckboxCellSlot'{export*from'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot';export*from'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot';export{default}from'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot';}declare module'react-declarative/components/List/slots/CommonCellSlot'{export*from'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot';export*from'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot';export{default}from'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot';}declare module'react-declarative/components/List/slots/HeadRowSlot'{export*from'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot';export*from'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot';export{default}from'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot';}declare module'react-declarative/components/List/slots/ActionAddSlot'{export*from'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot';export*from'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot';export{default}from'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot';}declare module'react-declarative/components/List/slots/ActionMenuSlot'{export*from'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot';export*from'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot';export{default}from'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot';}declare module'react-declarative/components/List/slots/ActionFabSlot'{export*from'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot';export*from'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot';export{default}from'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot';}declare module'react-declarative/components/List/slots/ActionListSlot'{export*from'react-declarative/components/List/slots/ActionListSlot/IActionListSlot';export*from'react-declarative/components/List/slots/ActionListSlot/ActionListSlot';export{default}from'react-declarative/components/List/slots/ActionListSlot/ActionListSlot';}declare module'react-declarative/components/List/slots/ChipListSlot'{export*from'react-declarative/components/List/slots/ChipListSlot/IChipListSlot';export*from'react-declarative/components/List/slots/ChipListSlot/ChipListSlot';export{default}from'react-declarative/components/List/slots/ChipListSlot/ChipListSlot';}declare module'react-declarative/components/List/slots/FilterListSlot'{export*from'react-declarative/components/List/slots/FilterListSlot/IFilterListSlot';export*from'react-declarative/components/List/slots/FilterListSlot/FilterListSlot';export{default}from'react-declarative/components/List/slots/FilterListSlot/FilterListSlot';}declare module'react-declarative/components/List/slots/OperationListSlot'{export*from'react-declarative/components/List/slots/OperationListSlot/IOperationListSlot';export*from'react-declarative/components/List/slots/OperationListSlot/OperationListSlot';export{default}from'react-declarative/components/List/slots/OperationListSlot/OperationListSlot';}declare module'react-declarative/components/List/slots/SearchSlot'{export*from'react-declarative/components/List/slots/SearchSlot/ISearchSlot';export*from'react-declarative/components/List/slots/SearchSlot/SearchSlot';export{default}from'react-declarative/components/List/slots/SearchSlot/SearchSlot';}declare module'react-declarative/components/One/slots/ProgressSlot'{export*from'react-declarative/components/One/slots/ProgressSlot/IProgressSlot';export*from'react-declarative/components/One/slots/ProgressSlot/ProgressSlot';export{default}from'react-declarative/components/One/slots/ProgressSlot/ProgressSlot';}declare module'react-declarative/components/One/slots/CheckBoxSlot'{export*from'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot';export*from'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot';export{default}from'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot';}declare module'react-declarative/components/One/slots/ItemsSlot'{export*from'react-declarative/components/One/slots/ItemsSlot/IItemsSlot';export*from'react-declarative/components/One/slots/ItemsSlot/ItemsSlot';export{default}from'react-declarative/components/One/slots/ItemsSlot/ItemsSlot';}declare module'react-declarative/components/One/slots/ComboSlot'{export*from'react-declarative/components/One/slots/ComboSlot/IComboSlot';export*from'react-declarative/components/One/slots/ComboSlot/ComboSlot';export{default}from'react-declarative/components/One/slots/ComboSlot/ComboSlot';}declare module'react-declarative/components/One/slots/LineSlot'{export*from'react-declarative/components/One/slots/LineSlot/ILineSlot';export*from'react-declarative/components/One/slots/LineSlot/LineSlot';export{default}from'react-declarative/components/One/slots/LineSlot/LineSlot';}declare module'react-declarative/components/One/slots/RadioSlot'{export*from'react-declarative/components/One/slots/RadioSlot/IRadioSlot';export*from'react-declarative/components/One/slots/RadioSlot/RadioSlot';export{default}from'react-declarative/components/One/slots/RadioSlot/RadioSlot';}declare module'react-declarative/components/One/slots/RatingSlot'{export*from'react-declarative/components/One/slots/RatingSlot/IRatingSlot';export*from'react-declarative/components/One/slots/RatingSlot/RatingSlot';export{default}from'react-declarative/components/One/slots/RatingSlot/RatingSlot';}declare module'react-declarative/components/One/slots/TypographySlot'{export*from'react-declarative/components/One/slots/TypographySlot/ITypographySlot';export*from'react-declarative/components/One/slots/TypographySlot/TypographySlot';export{default}from'react-declarative/components/One/slots/TypographySlot/TypographySlot';}declare module'react-declarative/components/One/slots/TextSlot'{export*from'react-declarative/components/One/slots/TextSlot/ITextSlot';export*from'react-declarative/components/One/slots/TextSlot/TextSlot';export{default}from'react-declarative/components/One/slots/TextSlot/TextSlot';}declare module'react-declarative/components/One/slots/SwitchSlot'{export*from'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot';export*from'react-declarative/components/One/slots/SwitchSlot/SwitchSlot';export{default}from'react-declarative/components/One/slots/SwitchSlot/SwitchSlot';}declare module'react-declarative/components/One/slots/SliderSlot'{export*from'react-declarative/components/One/slots/SliderSlot/ISliderSlot';export*from'react-declarative/components/One/slots/SliderSlot/SliderSlot';export{default}from'react-declarative/components/One/slots/SliderSlot/SliderSlot';}declare module'react-declarative/components/One/components/makeField/makeField'{import*as React from'react';import IAnything from'react-declarative/model/IAnything';import IManaged from'react-declarative/model/IManaged';import IEntity from'react-declarative/model/IEntity';import IField from'react-declarative/model/IField';interface IConfig<Data=IAnything>{skipDebounce?:boolean;defaultProps?:Partial<Omit<IField<Data>,keyof{fields:never;child:never;}>>;}export function makeField(Component:React.FC<IManaged>,config?:IConfig):{<Data extends unknown=any>({className,sx,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,prefix,dirty:upperDirty,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:IEntity<Data>):JSX.Element;displayName:string;};export default makeField;}declare module'react-declarative/components/ActionFilter/model/IActionFilterProps'{import React from"react";import IActionFilter from"react-declarative/components/ActionFilter/model/IActionFilter";export interface IActionFilterProps{actions:IActionFilter[];label?:React.ReactNode;addLabel?:React.ReactNode;data?:Record<string,string>;onChange?:(data:Record<string,string>)=>void;}export default IActionFilterProps;}declare module'react-declarative/components/ActionTrigger/model/IActionTriggerProps'{import IActionTrigger from"react-declarative/components/ActionTrigger/model/IActionTrigger";import{ButtonProps}from'@mui/material/Button';import{BoxProps}from'@mui/material/Box';import{IAsyncProps}from"react-declarative/components/Async";export interface IActionTriggerProps<T extends any=object>extends Omit<IAsyncProps<T>,keyof{Loader:never;Error:never;children:never;}>,Omit<BoxProps,keyof{onChange:never;onLoadStart:never;children:never;}>{actions:IActionTrigger[];onAction?:(action:string)=>(void|Promise<void>);variant?:ButtonProps['variant'];size?:ButtonProps['size'];}export default IActionTriggerProps;}declare module'react-declarative/components/FadeView/components/FadeContainer'{import*as React from'react';import DefaultFade from'react-declarative/components/FadeView/components/DefaultFade';export const SCROLL_VIEW_TARGER="react-declarative__scrollViewTarget";export interface IFadeContainerProps{className?:string;Fade?:typeof DefaultFade;style?:React.CSSProperties;children:React.ReactNode;color?:string;selector?:string;zIndex?:number;disableBottom?:boolean;disableRight?:boolean;}export const FadeContainer:({className,style,color,children,disableBottom,disableRight,zIndex,Fade,selector,}:IFadeContainerProps)=>JSX.Element;export default FadeContainer;}declare module'react-declarative/components/FetchView/components/Reveal'{import*as React from'react';export interface IRevealProps extends React.HTMLProps<HTMLDivElement>{animation?:'slideDown'|'fadeIn'|'scale'|'none';appear?:boolean;}export const Reveal:({children,className,animation,appear,...otherProps}:IRevealProps)=>JSX.Element;export default Reveal;}declare module'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type BodyColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface IBodyRowSlot<RowData extends IRowData=IAnything>{fullWidth:number;row:RowData;columns:BodyColumn<RowData>[];mode:DisplayMode;}export default IBodyRowSlot;}declare module'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot'{import IBodyRowSlot from'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot';export const BodyRowSlot:(props:IBodyRowSlot)=>JSX.Element;export default BodyRowSlot;}declare module'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import{ICheckboxCellProps}from"react-declarative/components/List/components/SlotFactory/components/CheckboxCell/CheckboxCell";export interface ICheckboxCellSlot<RowData extends IRowData=IAnything>extends ICheckboxCellProps<RowData>{}export default ICheckboxCellSlot;}declare module'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot'{import ICheckboxCellSlot from'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot';export const CheckboxCellSlot:(props:ICheckboxCellSlot)=>JSX.Element;export default CheckboxCellSlot;}declare module'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot'{import{IActionMenuProps}from"react-declarative/components/ActionMenu";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type CommonCellColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface ICommonCellSlot<RowData extends IRowData=IAnything>{column:CommonCellColumn<RowData>;row:RowData;idx:number;fullWidth:number;mode:DisplayMode;onMenuToggle:IActionMenuProps['onToggle'];onAction:IActionMenuProps['onAction'];}export default ICommonCellSlot;}declare module'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot'{import ICommonCellSlot from'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot';export const CommonCellSlot:(props:ICommonCellSlot)=>JSX.Element;export default CommonCellSlot;}declare module'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type HeadColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface IHeadRowSlot<RowData extends IRowData=IAnything>{columns:HeadColumn<RowData>[];fullWidth:number;mode:DisplayMode;}export default IHeadRowSlot;}declare module'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot'{import IHeadRowSlot from'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot';export const HeadRowSlot:(props:IHeadRowSlot)=>JSX.Element;export default HeadRowSlot;}declare module'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IActionAddSlot<RowData extends IRowData=IAnything>{action?:string;label?:string;height:number;width:number;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export default IActionAddSlot;}declare module'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot'{import IActionAddSlot from'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot';export const ActionAddSlot:(props:IActionAddSlot)=>JSX.Element;export default ActionAddSlot;}declare module'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot'{import{IListActionOption}from"react-declarative/model/IListProps";export interface IActionMenuSlot{options?:Partial<IListActionOption>[];}export default IActionMenuSlot;}declare module'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot'{import IActionMenuSlot from'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot';export const ActionMenuSlot:(props:IActionMenuSlot)=>JSX.Element;export default ActionMenuSlot;}declare module'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot'{import React from"react";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IActionFabSlot<RowData extends IRowData=IAnything>{action?:string;label?:string;icon?:React.ComponentType<any>;height:number;width:number;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export default IActionFabSlot;}declare module'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot'{import IActionFabSlot from'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot';export const ActionFabSlot:(props:IActionFabSlot)=>JSX.Element;export default ActionFabSlot;}declare module'react-declarative/components/List/slots/ActionListSlot/IActionListSlot'{import{IListAction}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";export interface IActionListSlot<FilterData extends{}=IAnything>{className?:string;style?:React.CSSProperties;filterData:FilterData;actions:IListAction[];height:number;width:number;title?:string;}export default IActionListSlot;}declare module'react-declarative/components/List/slots/ActionListSlot/ActionListSlot'{import IActionListSlot from'react-declarative/components/List/slots/ActionListSlot/IActionListSlot';export const ActionListSlot:(props:IActionListSlot)=>JSX.Element;export default ActionListSlot;}declare module'react-declarative/components/List/slots/ChipListSlot/IChipListSlot'{import IAnything from"react-declarative/model/IAnything";import IListProps from"react-declarative/model/IListProps";import IRowData from"react-declarative/model/IRowData";export interface IChipListSlot<RowData extends IRowData=IAnything>{listChips:IListProps<RowData>['chips'];loading:boolean;}export default IChipListSlot;}declare module'react-declarative/components/List/slots/ChipListSlot/ChipListSlot'{import IChipListSlot from'react-declarative/components/List/slots/ChipListSlot/IChipListSlot';export const ChipListSlot:(props:IChipListSlot)=>JSX.Element;export default ChipListSlot;}declare module'react-declarative/components/List/slots/FilterListSlot/IFilterListSlot'{import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IFilterListSlot<FilterData extends{}=IAnything>{className?:string;filterData:FilterData;style?:React.CSSProperties;filters:IField<FilterData>[];change:(data:FilterData)=>void;onSearchChange?:(search:string)=>void;onFilterChange?:(data:FilterData)=>void;onCollapsedChange?:(collapsed:boolean)=>void;withToggledFilters?:boolean;ready:()=>void;clean:()=>void;loading:boolean;label:string;search:string;withSearch:boolean;height:number;width:number;}export default IFilterListSlot;}declare module'react-declarative/components/List/slots/FilterListSlot/FilterListSlot'{import IFilterListSlot from'react-declarative/components/List/slots/FilterListSlot/IFilterListSlot';export const FilterListSlot:(props:IFilterListSlot)=>JSX.Element;export default FilterListSlot;}declare module'react-declarative/components/List/slots/OperationListSlot/IOperationListSlot'{import IListOperation from"react-declarative/model/IListOperation";export interface IOperationListSlot{className?:string;style?:React.CSSProperties;operations:IListOperation[];width:number;}export default IOperationListSlot;}declare module'react-declarative/components/List/slots/OperationListSlot/OperationListSlot'{import IOperationListSlot from'react-declarative/components/List/slots/OperationListSlot/IOperationListSlot';export const OperationListSlot:(props:IOperationListSlot)=>JSX.Element;export default OperationListSlot;}declare module'react-declarative/components/List/slots/SearchSlot/ISearchSlot'{export interface ISearchSlot{className?:string;style?:React.CSSProperties;onSearchChange?:(search:string)=>void;clean:()=>void;loading:boolean;label:string;search:string;height:number;width:number;}export default ISearchSlot;}declare module'react-declarative/components/List/slots/SearchSlot/SearchSlot'{import ISearchSlot from'react-declarative/components/List/slots/SearchSlot/ISearchSlot';export const SearchSlot:(props:ISearchSlot)=>JSX.Element;export default SearchSlot;}declare module'react-declarative/components/One/slots/ProgressSlot/IProgressSlot'{import{IProgressFieldProps,IProgressFieldPrivate}from"react-declarative/components/One/fields/ProgressField";export interface IProgressSlot extends IProgressFieldProps,IProgressFieldPrivate{}export default IProgressSlot;}declare module'react-declarative/components/One/slots/ProgressSlot/ProgressSlot'{import IProgressSlot from'react-declarative/components/One/slots/ProgressSlot/IProgressSlot';export const ProgressSlot:(props:IProgressSlot)=>JSX.Element;export default ProgressSlot;}declare module'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot'{import{ICheckboxFieldPrivate,ICheckboxFieldProps}from"react-declarative/components/One/fields/CheckboxField";export interface ICheckBoxSlot extends ICheckboxFieldProps,ICheckboxFieldPrivate{}export default ICheckBoxSlot;}declare module'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot'{import ICheckBoxSlot from'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot';export const CheckBoxSlot:(props:ICheckBoxSlot)=>JSX.Element;export default CheckBoxSlot;}declare module'react-declarative/components/One/slots/ItemsSlot/IItemsSlot'{import{IItemsFieldPrivate,IItemsFieldProps}from"react-declarative/components/One/fields/ItemsField";export interface IItemsSlot extends IItemsFieldProps,IItemsFieldPrivate{}export default IItemsSlot;}declare module'react-declarative/components/One/slots/ItemsSlot/ItemsSlot'{import IItemsSlot from'react-declarative/components/One/slots/ItemsSlot/IItemsSlot';export const ItemsSlot:(props:IItemsSlot)=>JSX.Element;export default ItemsSlot;}declare module'react-declarative/components/One/slots/ComboSlot/IComboSlot'{import{IComboFieldPrivate,IComboFieldProps}from"react-declarative/components/One/fields/ComboField";export interface IComboSlot extends IComboFieldProps,IComboFieldPrivate{}export default IComboSlot;}declare module'react-declarative/components/One/slots/ComboSlot/ComboSlot'{import IComboSlot from'react-declarative/components/One/slots/ComboSlot/IComboSlot';export const ComboSlot:(props:IComboSlot)=>JSX.Element;export default ComboSlot;}declare module'react-declarative/components/One/slots/LineSlot/ILineSlot'{import{ILineFieldProps}from"react-declarative/components/One/fields/LineField";export interface ILineSlot extends ILineFieldProps{}export default ILineSlot;}declare module'react-declarative/components/One/slots/LineSlot/LineSlot'{import ILineSlot from'react-declarative/components/One/slots/LineSlot/ILineSlot';export const LineSlot:(props:ILineSlot)=>JSX.Element;export default LineSlot;}declare module'react-declarative/components/One/slots/RadioSlot/IRadioSlot'{import{IRadioFieldPrivate,IRadioFieldProps}from"react-declarative/components/One/fields/RadioField";export interface IRadioSlot extends IRadioFieldProps,IRadioFieldPrivate{}export default IRadioSlot;}declare module'react-declarative/components/One/slots/RadioSlot/RadioSlot'{import IRadioSlot from'react-declarative/components/One/slots/RadioSlot/IRadioSlot';export const RadioSlot:(props:IRadioSlot)=>JSX.Element;export default RadioSlot;}declare module'react-declarative/components/One/slots/RatingSlot/IRatingSlot'{import{IRatingFieldProps,IRatingFieldPrivate}from"react-declarative/components/One/fields/RatingField";export interface IRatingSlot extends IRatingFieldProps,IRatingFieldPrivate{}export default IRatingSlot;}declare module'react-declarative/components/One/slots/RatingSlot/RatingSlot'{import IRatingSlot from'react-declarative/components/One/slots/RatingSlot/IRatingSlot';export const RatingSlot:(props:IRatingSlot)=>JSX.Element;export default RatingSlot;}declare module'react-declarative/components/One/slots/TypographySlot/ITypographySlot'{import{ITypographyFieldPrivate,ITypographyFieldProps}from"react-declarative/components/One/fields/TypographyField";export interface ITypographySlot extends ITypographyFieldProps,ITypographyFieldPrivate{}export default ITypographySlot;}declare module'react-declarative/components/One/slots/TypographySlot/TypographySlot'{import ITypographySlot from'react-declarative/components/One/slots/TypographySlot/ITypographySlot';export const TypographySlot:(props:ITypographySlot)=>JSX.Element;export default TypographySlot;}declare module'react-declarative/components/One/slots/TextSlot/ITextSlot'{import{ITextFieldProps,ITextFieldPrivate}from"react-declarative/components/One/fields/TextField";type ITextBase=ITextFieldProps&ITextFieldPrivate;export interface ITextSlot extends ITextBase{}export default ITextSlot;}declare module'react-declarative/components/One/slots/TextSlot/TextSlot'{import ITextSlot from'react-declarative/components/One/slots/TextSlot/ITextSlot';export const TextSlot:(props:ITextSlot)=>JSX.Element;export default TextSlot;}declare module'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot'{import{ISwitchFieldPrivate,ISwitchFieldProps}from"react-declarative/components/One/fields/SwitchField";export interface ISwitchSlot extends ISwitchFieldProps,ISwitchFieldPrivate{}export default ISwitchSlot;}declare module'react-declarative/components/One/slots/SwitchSlot/SwitchSlot'{import ISwitchSlot from'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot';export const SwitchSlot:(props:ISwitchSlot)=>JSX.Element;export default SwitchSlot;}declare module'react-declarative/components/One/slots/SliderSlot/ISliderSlot'{import{ISliderFieldPrivate,ISliderFieldProps}from"react-declarative/components/One/fields/SliderField";export interface ISliderSlot extends ISliderFieldProps,ISliderFieldPrivate{}export default ISliderSlot;}declare module'react-declarative/components/One/slots/SliderSlot/SliderSlot'{import ISliderSlot from'react-declarative/components/One/slots/SliderSlot/ISliderSlot';export const SliderSlot:(props:ISliderSlot)=>JSX.Element;export default SliderSlot;}declare module'react-declarative/components/FadeView/components/DefaultFade'{interface IDefaultFadeProps{className:string;visible:boolean;zIndex:number;position:'bottom'|'right';color?:string;none:boolean;}export const DefaultFade:({className,visible,color,none,position,zIndex,}:IDefaultFadeProps)=>JSX.Element;export default DefaultFade;}declare module'react-declarative/model/DisplayMode'{export enum DisplayMode{Phone="phone",Tablet="tablet",Desktop="desktop"}export default DisplayMode;}declare module'react-declarative/components/List/components/SlotFactory/components/CheckboxCell/CheckboxCell'{import IRowData from'react-declarative/model/IRowData';import IAnything from'react-declarative/model/IAnything';export interface ICheckboxCellProps<RowData extends IRowData=IAnything>{row:RowData;}export const CheckboxCell:<RowData extends IRowData=any>({row,}:ICheckboxCellProps<RowData>)=>JSX.Element;export default CheckboxCell;}
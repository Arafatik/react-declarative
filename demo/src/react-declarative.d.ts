declare module'react-declarative'{import{TypedField as TypedFieldInternal}from'react-declarative/model/TypedField';import{IField as IFieldInternal}from'react-declarative/model/IField';import{IEntity as IEntityInternal}from'react-declarative/model/IEntity';import{IManaged as IManagedInternal}from'react-declarative/model/IManaged';import{IColumn as IColumnInternal}from'react-declarative/model/IColumn';import{IApiPaginatorParams as IApiPaginatorParamsInternal}from'react-declarative/components/List/api/useApiPaginator';import{IArrayPaginatorParams as IArrayPaginatorParamsInternal}from'react-declarative/components/List/api/useArrayPaginator';import{IApiHandlerParams as IApiHandlerParamsInternal}from'react-declarative/components/One/api/useApiHandler';export type IListApiPaginatorParams=IApiPaginatorParamsInternal;export type ILastArrayPaginatorParams=IArrayPaginatorParamsInternal;export type IOneApiHandlerParams=IApiHandlerParamsInternal;import{FieldType as FieldTypeInternal}from'react-declarative/model/FieldType';import{ColumnType as ColumnTypeInternal}from'react-declarative/model/ColumnType';import{ActionType as ActionTypeInternal}from'react-declarative/model/ActionType';import{SelectionMode as SelectionModeInternal}from'react-declarative/model/SelectionMode';import{IListApi as IListApiInternal}from'react-declarative/model/IListApi';import{IListOperation as IListOperationInternal}from'react-declarative/model/IListOperation';import{IListRowAction as IListRowActionInternal}from'react-declarative/model/IListRowAction';import{IListAction as IListActionInternal}from'react-declarative/model/IListProps';import{IListChip as IListChipInternal}from'react-declarative/model/IListProps';import{IOption as IOptionInternal}from'react-declarative/model/IOption';export const provide:<T=unknown>(key:string|Symbol,ctor:()=>T,...hof:((t:T)=>T)[])=>void;export const inject:<T=unknown>(key:string|Symbol)=>T;export const serviceManager:{_creators:Map<string|Symbol,()=>unknown>;_instances:Map<string|Symbol,unknown>;_resolutionOrder:(string|Symbol)[];_checkCircularDependency:(key:string|Symbol)=>void;registerInstance:<T=unknown>(key:string|Symbol,inst:T)=>void;registerCreator:<T_1=unknown>(key:string|Symbol,ctor:()=>T_1,...hof:((t:T_1)=>T_1)[])=>void;inject:<T_2=unknown>(key:string|Symbol)=>T_2;prefetch:()=>Promise<void>;clear:()=>void;};import{IMenuGroup as IMenuGroupInternal,IMenuOption as IMenuOptionInternal}from'react-declarative/model/IMenuGroup';import{ListHandlerPagination as ListHandlerPaginationInternal}from'react-declarative/model/IListProps';import{ListHandlerSortModel as ListHandlerSortModelInternal}from'react-declarative/model/IListProps';import{ListHandlerChips as ListHandlerChipsInternal}from'react-declarative/model/IListProps';import{ListHandlerResult as ListHandlerResultInternal}from'react-declarative/model/IListProps';import{ListHandler as ListHandlerInternal}from'react-declarative/model/IListProps';import{OneHandler as OneHandlerInternal}from'react-declarative/model/IOneProps';import{useList}from'react-declarative/hooks/useList';import{useModal}from'react-declarative/components/ModalProvider';import{useConfirm}from'react-declarative/hooks/useConfirm';import{useDate}from'react-declarative/hooks/useDate';import{useTime}from'react-declarative/hooks/useTime';import{useOne}from'react-declarative/hooks/useOne';import{useOneTyped}from'react-declarative/hooks/useOne';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';export type{IRowData,RowId};import{ISwitchItem as ISwitchItemInternal}from'react-declarative/components';export type ISwitchItem=ISwitchItemInternal;export const FieldType:typeof FieldTypeInternal;export const ColumnType:typeof ColumnTypeInternal;export const ActionType:typeof ActionTypeInternal;export const SelectionMode:typeof SelectionModeInternal;export type TypedField<Data=IAnything>=TypedFieldInternal<Data>;export type IField<Data=IAnything>=IFieldInternal<Data>;export type IEntity<Data=IAnything>=IEntityInternal<Data>;export type IManaged<Data=IAnything,Value=IAnything>=IManagedInternal<Data,Value>;export type ListHandler<FilterData=IAnything,RowData extends IRowData=IAnything>=ListHandlerInternal<FilterData,RowData>;export type ListHandlerResult<RowData extends IRowData=IAnything>=ListHandlerResultInternal<RowData>;export type OneHandler<Data=IAnything>=OneHandlerInternal<Data>;export type ListHandlerPagination=ListHandlerPaginationInternal;export type ListHandlerSortModel<RowData extends IRowData=IAnything>=ListHandlerSortModelInternal<RowData>;export type ListHandlerChips<RowData extends IRowData=IAnything>=ListHandlerChipsInternal<RowData>;export type IListRowAction<RowData extends IRowData=IAnything>=IListRowActionInternal<RowData>;export type IListChip<RowData extends IRowData=IAnything>=IListChipInternal<RowData>;export type IListOperation=IListOperationInternal;export type IListAction=IListActionInternal;export type IMenuOption=IMenuOptionInternal;export type IMenuGroup=IMenuGroupInternal;export type IListApi=IListApiInternal;export type IOption=IOptionInternal;export type IColumn=IColumnInternal;export type pickOneTypedFn=ReturnType<typeof useOneTyped>;export type pickOneFn=ReturnType<typeof useOne>;export type pickDateFn=ReturnType<typeof useDate>;export type pickTimeFn=ReturnType<typeof useTime>;export type pickListFn=ReturnType<typeof useList>;export type pickConfirmFn=ReturnType<typeof useConfirm>;export{default as dayjs}from'dayjs';export{ConstraintView}from'react-declarative/components';export{ScrollView}from'react-declarative/components';export{AutoSizer}from'react-declarative/components';export{FetchView}from'react-declarative/components';export{FadeView}from'react-declarative/components';export{ActionMenu}from'react-declarative/components';export{Async}from'react-declarative/components';export{If}from'react-declarative/components';export{List,ListTyped}from'react-declarative/components';export{One,OneTyped}from'react-declarative/components';export{Translate}from'react-declarative/components';export{register as registerTr}from'react-declarative/components/Translate';export{ModalProvider}from'react-declarative/components';export{OneSlotFactory,OneDefaultSlots}from'react-declarative/components';export{ListSlotFactory,ListDefaultSlots}from'react-declarative/components';export{Breadcrumbs}from'react-declarative/components';export{Scaffold}from'react-declarative/components';export{Switch}from'react-declarative/components';export{OtherComboSlot}from'react-declarative/components';export{OtherItemsSlot}from'react-declarative/components';export{useCachedPaginator}from'react-declarative/components';export{useArrayPaginator}from'react-declarative/components';export{useLastPagination}from'react-declarative/components';export{useApiPaginator}from'react-declarative/components';export{useStaticHandler}from'react-declarative/components';export{usePreventLeave}from'react-declarative/components';export{useLocalHandler}from'react-declarative/components';export{useApiHandler}from'react-declarative/components';export{createField,makeField}from'react-declarative/components';export{useListProps,useListCachedRows}from'react-declarative/components';export{useOneProps,useOneState}from'react-declarative/components';export{useOne,useOneTyped};export{useDate,useTime};export{useConfirm};export{useModal};export{useList};import{IOnePublicProps as IOnePublicPropsInternal}from'react-declarative/model/IOnePublicProps';export type IOnePublicProps<Data=IAnything,Field extends IField<Data>=IField<Data>>=IOnePublicPropsInternal<Data,Field>;import{ICheckBoxSlot as ICheckBoxSlotInternal}from'react-declarative/components';import{IComboSlot as IComboSlotInternal}from'react-declarative/components';import{IItemsSlot as IItemsSlotInternal}from'react-declarative/components';import{ILineSlot as ILineSlotInternal}from'react-declarative/components';import{IProgressSlot as IProgressSlotInternal}from'react-declarative/components';import{IRadioSlot as IRadioSlotInternal}from'react-declarative/components';import{IRatingSlot as IRatingSlotInternal}from'react-declarative/components';import{ISliderSlot as ISliderSlotInternal}from'react-declarative/components';import{ISwitchSlot as ISwitchSlotInternal}from'react-declarative/components';import{ITextSlot as ITextSlotInternal}from'react-declarative/components';import{ITypographySlot as ITypographySlotInternal}from'react-declarative/components';import{IActionAddSlot as IActionAddSlotInternal}from'react-declarative/components';import{IActionFabSlot as IActionFabSlotInternal}from'react-declarative/components';import{IActionMenuSlot as IActionMenuSlotInternal}from'react-declarative/components';import{IBodyRowSlot as IBodyRowSlotInternal}from'react-declarative/components';import{ICheckboxCellSlot as ICheckboxCellSlotInternal}from'react-declarative/components';import{ICommonCellSlot as ICommonCellSlotInternal}from'react-declarative/components';import{IHeadRowSlot as IHeadRowSlotInternal}from'react-declarative/components';export type ICheckBoxSlot=ICheckBoxSlotInternal;export type IComboSlot=IComboSlotInternal;export type IItemsSlot=IItemsSlotInternal;export type ILineSlot=ILineSlotInternal;export type IProgressSlot=IProgressSlotInternal;export type IRadioSlot=IRadioSlotInternal;export type IRatingSlot=IRatingSlotInternal;export type ISliderSlot=ISliderSlotInternal;export type ISwitchSlot=ISwitchSlotInternal;export type ITextSlot=ITextSlotInternal;export type ITypographySlot=ITypographySlotInternal;export type IActionAddSlot=IActionAddSlotInternal;export type IActionFabSlot=IActionFabSlotInternal;export type IActionMenuSlot=IActionMenuSlotInternal;export type IBodyRowSlot=IBodyRowSlotInternal;export type ICheckboxCellSlot=ICheckboxCellSlotInternal;export type ICommonCellSlot=ICommonCellSlotInternal;export type IHeadRowSlot=IHeadRowSlotInternal;export{arrays}from'react-declarative/utils/arrays';export{objects}from'react-declarative/utils/objects';export{createProvider}from'react-declarative/utils/createProvider';export{formatText}from'react-declarative/utils/formatText';export{roundTicks}from'react-declarative/utils/roundTicks';export{wordForm}from'react-declarative/utils/wordForm';export{singleshot}from'react-declarative/utils/hof/singleshot';export{cancelable}from'react-declarative/utils/hof/cancelable';export{debounce}from'react-declarative/utils/hof/debounce';export{queued}from'react-declarative/utils/hof/queued';export{cached}from'react-declarative/utils/hof/cached';export{EventEmitter}from'react-declarative/utils/rx/EventEmitter';export{Subject}from'react-declarative/utils/rx/Subject';export{formatAmount,nbsp,thinsp}from'react-declarative/utils/formatAmount';export{createCustomTag}from'react-declarative/utils/createCustomTag';export{mainColor}from'react-declarative/utils/mainColor';export{cacheSrc}from'react-declarative/utils/cacheSrc';export*as typo from'react-declarative/utils/typo';}declare module'react-declarative/model/TypedField'{import IManaged,{IManagedShallow}from'react-declarative/model/IManaged';import IEntity from'react-declarative/model/IEntity';import FieldType from'react-declarative/model/FieldType';import IAnything from'react-declarative/model/IAnything';import{IFragmentLayoutProps}from'react-declarative/components/One/layouts/FragmentLayout';import{IDivLayoutProps}from'react-declarative/components/One/layouts/DivLayout';import{ITabsLayoutProps}from'react-declarative/components/One/layouts/TabsLayout';import{ICenterLayoutProps}from'react-declarative/components/One/layouts/CenterLayout';import{IStretchLayoutProps}from'react-declarative/components/One/layouts/StretchLayout';import{IGroupLayoutProps}from'react-declarative/components/One/layouts/GroupLayout';import{IOutlineLayoutProps}from'react-declarative/components/One/layouts/OutlineLayout';import{IPaperLayoutProps}from'react-declarative/components/One/layouts/PaperLayout';import{IExpansionLayoutProps}from'react-declarative/components/One/layouts/ExpansionLayout';import{IHeroLayoutProps}from'react-declarative/components/One/layouts/HeroLayout';import{IConditionLayoutProps}from'react-declarative/components/One/layouts/ConditionLayout';import{ICheckboxFieldProps}from'react-declarative/components/One/fields/CheckboxField';import{IComboFieldProps}from'react-declarative/components/One/fields/ComboField';import{IComponentFieldProps}from'react-declarative/components/One/fields/ComponentField';import{IItemsFieldProps}from'react-declarative/components/One/fields/ItemsField';import{ILineFieldProps}from'react-declarative/components/One/fields/LineField';import{IProgressFieldProps}from'react-declarative/components/One/fields/ProgressField';import{IRadioFieldProps}from'react-declarative/components/One/fields/RadioField';import{IRatingFieldProps}from'react-declarative/components/One/fields/RatingField';import{ISliderFieldProps}from'react-declarative/components/One/fields/SliderField';import{ISwitchFieldProps}from'react-declarative/components/One/fields/SwitchField';import{ITextFieldProps}from'react-declarative/components/One/fields/TextField';import{ITypographyFieldProps}from'react-declarative/components/One/fields/TypographyField';type Exclude<Data=IAnything>=Omit<IManaged<Data>,keyof IEntity<Data>>;type TypedFieldFactory<Type extends FieldType,Fields extends{},Data=IAnything>={[Prop in keyof Omit<Fields,keyof Exclude<Data>>]?:Fields[Prop];}&{type:Type;};type TypedFieldFactoryShallow<Type extends FieldType,Fields extends{},Data=IAnything>=IManagedShallow<Data>&TypedFieldFactory<Type,Fields,Data>;type Group<Data=IAnything>=TypedFieldFactory<FieldType.Group,IGroupLayoutProps<Data>,Data>;type Paper<Data=IAnything>=TypedFieldFactory<FieldType.Paper,IPaperLayoutProps<Data>,Data>;type Outline<Data=IAnything>=TypedFieldFactory<FieldType.Outline,IOutlineLayoutProps<Data>,Data>;type Expansion<Data=IAnything>=TypedFieldFactory<FieldType.Expansion,IExpansionLayoutProps<Data>,Data>;type Fragment<Data=IAnything>=TypedFieldFactory<FieldType.Fragment,IFragmentLayoutProps<Data>,Data>;type Div<Data=IAnything>=TypedFieldFactory<FieldType.Div,IDivLayoutProps<Data>,Data>;type Tabs<Data=IAnything>=TypedFieldFactory<FieldType.Tabs,ITabsLayoutProps<Data>,Data>;type Hero<Data=IAnything>=TypedFieldFactory<FieldType.Hero,IHeroLayoutProps<Data>,Data>;type Center<Data=IAnything>=TypedFieldFactory<FieldType.Center,ICenterLayoutProps<Data>,Data>;type Stretch<Data=IAnything>=TypedFieldFactory<FieldType.Stretch,IStretchLayoutProps<Data>,Data>;type Condition<Data=IAnything>=TypedFieldFactory<FieldType.Condition,IConditionLayoutProps<Data>,Data>;type Line<Data=IAnything>=TypedFieldFactory<FieldType.Line,ILineFieldProps<Data>,Data>;type Checkbox<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Checkbox,ICheckboxFieldProps<Data>,Data>;type Combo<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Combo,IComboFieldProps<Data>,Data>;type Component<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Component,IComponentFieldProps<Data>,Data>;type Items<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Items,IItemsFieldProps<Data>,Data>;type Progress<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Progress,IProgressFieldProps<Data>,Data>;type Radio<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Radio,IRadioFieldProps<Data>,Data>;type Rating<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Rating,IRatingFieldProps<Data>,Data>;type Slider<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Slider,ISliderFieldProps<Data>,Data>;type Switch<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Switch,ISwitchFieldProps<Data>,Data>;type Text<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Text,ITextFieldProps<Data>,Data>;type Typography<Data=IAnything>=TypedFieldFactoryShallow<FieldType.Typography,ITypographyFieldProps<Data>,Data>;export type TypedFieldRegistry<Data=IAnything,Target=any>=Target extends Expansion<Data>?Expansion<Data>:Target extends Group<Data>?Group<Data>:Target extends Paper<Data>?Paper<Data>:Target extends Outline<Data>?Outline<Data>:Target extends Checkbox<Data>?Checkbox<Data>:Target extends Combo<Data>?Combo<Data>:Target extends Component<Data>?Component<Data>:Target extends Items<Data>?Items<Data>:Target extends Line<Data>?Line<Data>:Target extends Progress<Data>?Progress<Data>:Target extends Radio<Data>?Radio<Data>:Target extends Rating<Data>?Rating<Data>:Target extends Slider<Data>?Slider<Data>:Target extends Switch<Data>?Switch<Data>:Target extends Text<Data>?Text<Data>:Target extends Typography<Data>?Typography<Data>:Target extends Fragment<Data>?Fragment<Data>:Target extends Div<Data>?Div<Data>:Target extends Tabs<Data>?Tabs<Data>:Target extends Center<Data>?Center<Data>:Target extends Stretch<Data>?Stretch<Data>:Target extends Hero<Data>?Hero<Data>:Target extends Condition<Data>?Condition<Data>:never;export type TypedField<Data=IAnything>=TypedFieldRegistry<Data>&{name?:string;fields?:TypedField<Data>[];child?:TypedField<Data>;};export default TypedField;}declare module'react-declarative/model/IField'{import*as React from'react';import{ISizeCallback}from'react-declarative/model/ISize';import FieldType from'react-declarative/model/FieldType';import IAnything from'react-declarative/model/IAnything';export type Value=string|string[]|number|boolean|null;export interface IField<Data=IAnything>{name?:string;roles?:string[];focus?:()=>void;blur?:()=>void;readonly?:boolean;outlined?:boolean;groupRef?:(element?:HTMLDivElement|null)=>void;inputRef?:(element?:HTMLInputElement|null)=>void;autoFocus?:boolean;disabled?:boolean;radioValue?:string;inputType?:keyof{'text':never;'color':never;'date':never;'email':never;'month':never;'number':never;'password':never;'search':never;'tel':never;'time':never;'url':never;'week':never;};inputFormatter?:(input:string)=>string;inputFormatterTemplate?:string;inputFormatterSymbol?:string;inputFormatterAllowed?:RegExp;inputAutocomplete?:keyof{'new-password':never;'on':never;'off':never;'false':never;};tabList?:string[];tabIndex?:number;tabVariant?:"fullWidth"|"standard"|"scrollable";tabColor?:"primary"|"secondary";tabKeepFlow?:boolean;tabChange?:(idx:number)=>void;tabLine?:boolean;tabBackground?:boolean;inputRows?:number;leadingIcon?:string|React.ComponentType;trailingIcon?:string|React.ComponentType;leadingIconClick?:(value:any,onChange:(v:any)=>void)=>void;trailingIconClick?:(value:any,onChange:(v:any)=>void)=>void;maxPercent?:number;showPercentLabel?:boolean;innerPadding?:string;sliderThumbColor?:(v:number)=>string;sliderTrackColor?:(v:number)=>string;sliderRailColor?:(v:number)=>string;progressColor?:(v:number)=>string;progressBarColor?:(v:number)=>string;minSlider?:number;maxSlider?:number;stepSlider?:number;labelFormatSlider?:(v:number)=>string|number;itemList?:string[]|((data:Data)=>string[])|((data:Data)=>Promise<string[]>);tr?:((s:string)=>string)|((s:string)=>Promise<string>);keepSync?:boolean;type:FieldType;className?:string;style?:React.CSSProperties;title?:string;description?:string;placeholder?:string;columns?:string;phoneColumns?:string;tabletColumns?:string;desktopColumns?:string;columnsOverride?:string;fields?:IField<Data>[];child?:IField<Data>;isInvalid?:(v:Data)=>null|string;isVisible?:(v:Data)=>boolean;isDisabled?:(v:Data)=>boolean;compute?:(v:Data)=>Promise<Value>|Value;element?:React.ComponentType<Data>;invalidity?:(e:string)=>void;defaultValue?:Value;fieldRightMargin?:string;fieldBottomMargin?:string;typoVariant?:keyof{h2:'h2';h3:'h3';h4:'h4';h5:'h5';h6:'h6';subtitle1:'subtitle1';subtitle2:'subtitle2';body1:'body1';body2:'body2';};condition?:((payload:Data)=>boolean)|((payload:Data)=>Promise<boolean>);top?:string|ISizeCallback<Data>;phoneTop?:string|ISizeCallback<Data>;tabletTop?:string|ISizeCallback<Data>;desktopTop?:string|ISizeCallback<Data>;left?:string|ISizeCallback<Data>;phoneLeft?:string|ISizeCallback<Data>;tabletLeft?:string|ISizeCallback<Data>;desktopLeft?:string|ISizeCallback<Data>;right?:string|ISizeCallback<Data>;phoneRight?:string|ISizeCallback<Data>;tabletRight?:string|ISizeCallback<Data>;desktopRight?:string|ISizeCallback<Data>;bottom?:string|ISizeCallback<Data>;phoneBottom?:string|ISizeCallback<Data>;tabletBottom?:string|ISizeCallback<Data>;desktopBottom?:string|ISizeCallback<Data>;height?:string|ISizeCallback<Data>;phoneHeight?:string|ISizeCallback<Data>;tabletHeight?:string|ISizeCallback<Data>;desktopHeight?:string|ISizeCallback<Data>;minHeight?:string|ISizeCallback<Data>;phoneMinHeight?:string|ISizeCallback<Data>;tabletMinHeight?:string|ISizeCallback<Data>;desktopMinHeight?:string|ISizeCallback<Data>;maxHeight?:string|ISizeCallback<Data>;phoneMaxHeight?:string|ISizeCallback<Data>;tabletMaxHeight?:string|ISizeCallback<Data>;desktopMaxHeight?:string|ISizeCallback<Data>;width?:string|ISizeCallback<Data>;phoneWidth?:string|ISizeCallback<Data>;tabletWidth?:string|ISizeCallback<Data>;desktopWidth?:string|ISizeCallback<Data>;minWidth?:string|ISizeCallback<Data>;phoneMinWidth?:string|ISizeCallback<Data>;tabletMinWidth?:string|ISizeCallback<Data>;desktopMinWidth?:string|ISizeCallback<Data>;maxWidth?:string|ISizeCallback<Data>;phoneMaxWidth?:string|ISizeCallback<Data>;tabletMaxWidth?:string|ISizeCallback<Data>;desktopMaxWidth?:string|ISizeCallback<Data>;heroOuterStyle?:React.CSSProperties;heroOuterPhoneStyle?:React.CSSProperties;heroOuterTabletStyle?:React.CSSProperties;heroOuterDesktopStyle?:React.CSSProperties;heroInnerStyle?:React.CSSProperties;heroInnerPhoneStyle?:React.CSSProperties;heroInnerTabletStyle?:React.CSSProperties;heroInnerDesktopStyle?:React.CSSProperties;}export default IField;}declare module'react-declarative/model/IEntity'{import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';type exclude='defaultValue';export interface IEntity<Data=IAnything>extends Omit<IField<Data>,exclude>{change?:(object:Data)=>void;invalidity:(msg:string)=>void;fallback:(e:Error)=>void;ready:()=>void;object:Data;}export default IEntity;}declare module'react-declarative/model/IManaged'{import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';export type PickProp<T extends{},P extends keyof T>=T[P];export type DeepPartial<T>={[P in keyof T]?:DeepPartial<T[P]>;};export interface IManagedLayout<Data=IAnything>{columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;columns?:PickProp<IField<Data>,'columns'>;roles?:PickProp<IField<Data>,'roles'>;phoneColumns?:PickProp<IField<Data>,'phoneColumns'>;tabletColumns?:PickProp<IField<Data>,'tabletColumns'>;desktopColumns?:PickProp<IField<Data>,'desktopColumns'>;fieldRightMargin?:PickProp<IField<Data>,'fieldRightMargin'>;fieldBottomMargin?:PickProp<IField<Data>,'fieldBottomMargin'>;}export interface IManagedShallow<Data=IAnything>extends IManagedLayout<Data>{isDisabled?:PickProp<IField<Data>,'isDisabled'>;isVisible?:PickProp<IField<Data>,'isVisible'>;isInvalid?:PickProp<IField<Data>,'isInvalid'>;invalidity?:PickProp<IField<Data>,'invalidity'>;compute?:PickProp<IField<Data>,'compute'>;focus?:PickProp<IField<Data>,'focus'>;blur?:PickProp<IField<Data>,'blur'>;defaultValue?:PickProp<IField<Data>,'defaultValue'>;}type Exclude<Data=IAnything>={object:never;type:never;focus:never;blur:never;ready:never;check:never;change:never;name:never;}&IManagedShallow<Data>;export interface IManaged<Data=IAnything,Value=any>extends Omit<IEntity<Data>,keyof Exclude<Data>>{name:string;value:Value;dirty:boolean;disabled:boolean;loading:boolean;readonly:boolean;fieldReadonly:boolean;invalid:string|null;object:Data;onChange:(v:Value,config?:{skipReadonly?:boolean;})=>void;}export default IManaged;}declare module'react-declarative/model/IColumn'{import ColumnType from"react-declarative/model/ColumnType";import IAnything from'react-declarative/model/IAnything';import IRowData from'react-declarative/model/IRowData';import IOption from'react-declarative/model/IOption';import{Value}from'react-declarative/model/IField';export interface IColumn<RowData extends IRowData=IAnything>{type:ColumnType;field?:string;primary?:boolean;secondary?:boolean;headerName:string;width:string|((width:number)=>string|number);minHeight?:string|number;phoneOrder?:number;phoneHidden?:boolean;tabletOrder?:number;tabletHidden?:boolean;desktopOrder?:number;desktopHidden?:boolean;columnMenu?:IOption[];showColumnMenu?:boolean;compute?:(row:RowData)=>Promise<Value>|Value;element?:React.ComponentType<RowData>;sortable?:boolean;}export default IColumn;}declare module'react-declarative/components/List/api/useApiPaginator'{import{ListHandler,ListHandlerChips,ListHandlerResult,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IApiPaginatorParams<FilterData=IAnything,RowData extends IRowData=IAnything>{origin?:string;fetch?:typeof window.fetch;requestMap?:(url:URL)=>URL;filterHandler?:(url:URL,filterData:FilterData)=>URL;chipsHandler?:(url:URL,chips:ListHandlerChips<RowData>)=>URL;sortHandler?:(url:URL,sort:ListHandlerSortModel<RowData>)=>URL;searchHandler?:(url:URL,search:string)=>URL;paginationHandler?:(url:URL,pagination:ListHandlerPagination)=>URL;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;withAbortSignal?:boolean;withPagination?:boolean;withFilters?:boolean;withChips?:boolean;withSearch?:boolean;withSort?:boolean;fetchParams?:()=>RequestInit;fallback?:(e:Error)=>void;abortSignal?:AbortSignal;responseMap?:(json:Record<string,any>)=>ListHandlerResult<RowData>;}export const useApiPaginator:<FilterData=any,RowData extends IRowData=any>(path:string,{fetch,origin,abortSignal:signal,fetchParams,fallback,onLoadBegin,onLoadEnd,requestMap,responseMap,filterHandler,chipsHandler,sortHandler,searchHandler,paginationHandler,withAbortSignal,withPagination,withFilters,withSearch,withChips,withSort,}?:IApiPaginatorParams<FilterData,RowData>)=>ListHandler<FilterData,RowData>;export default useApiPaginator;}declare module'react-declarative/components/List/api/useArrayPaginator'{import{ListHandler,ListHandlerChips,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IArrayPaginatorParams<FilterData=IAnything,RowData extends IRowData=IAnything>{filterHandler?:(rows:RowData[],filterData:FilterData)=>RowData[];chipsHandler?:(rows:RowData[],chips:ListHandlerChips<RowData>)=>RowData[];sortHandler?:(rows:RowData[],sort:ListHandlerSortModel<RowData>)=>RowData[];paginationHandler?:(rows:RowData[],pagination:ListHandlerPagination)=>RowData[];searchHandler?:(rows:RowData[],search:string)=>RowData[];compareFn?:(a:RowData[keyof RowData],b:RowData[keyof RowData])=>number;withPagination?:boolean;withFilters?:boolean;withChips?:boolean;withSort?:boolean;withTotal?:boolean;withSearch?:boolean;keepClean?:boolean;fallback?:(e:Error)=>void;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;}export const useArrayPaginator:<FilterData=any,RowData extends IRowData=any>(rowsHandler:ListHandler<FilterData,RowData>,{compareFn,filterHandler,chipsHandler,sortHandler,searchHandler,paginationHandler,withPagination,withFilters,withChips,withSort,withTotal,withSearch,keepClean,fallback,onLoadStart,onLoadEnd,}?:IArrayPaginatorParams<FilterData,RowData>)=>ListHandler<FilterData,RowData>;export default useArrayPaginator;}declare module'react-declarative/components/One/api/useApiHandler'{import{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IApiHandlerParams<Data extends IAnything=IAnything>{origin?:string;requestMap?:(url:URL)=>URL;responseMap?:(json:Record<string,any>)=>Data;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;withAbortSignal?:boolean;fetchParams?:()=>RequestInit;fallback?:(e:Error)=>void;abortSignal?:AbortSignal;fetch?:typeof window.fetch;}export const useApiHandler:<Data extends unknown=any>(path:string,{fetch,origin,abortSignal:signal,requestMap,responseMap,onLoadBegin,onLoadEnd,withAbortSignal,fetchParams,fallback,}?:IApiHandlerParams<Data>)=>OneHandler<Data>;export default useApiHandler;}declare module'react-declarative/model/FieldType'{export enum FieldType{Switch="switch-field",Line="line-field",Group="group-layout",Paper="paper-layout",Outline="outline-layout",Expansion="expansion-layout",Radio="radio-field",Checkbox="checkbox-field",Text="text-field",Progress="progress-field",Component="component-field",Slider="slider-field",Combo="combo-field",Items="items-field",Rating="rating-field",Typography="typography-field",Fragment="fragment-layout",Div="div-layout",Tabs="tabs-layout",Hero="hero-layout",Center="center-layout",Stretch="stretch-layout",Condition="condition-layout"}export default FieldType;}declare module'react-declarative/model/ColumnType'{export enum ColumnType{Text="text-cell",Action="action-cell",CheckBox="checkbox-cell",Compute="compute-cell",Component="component-cell"}export default ColumnType;}declare module'react-declarative/model/ActionType'{export enum ActionType{Add="add-action",Fab="fab-action",Menu="menu-action"}export default ActionType;}declare module'react-declarative/model/SelectionMode'{export enum SelectionMode{Single="single-selection",Multiple="multiple-selection",None="none-selection"}export default SelectionMode;}declare module'react-declarative/model/IListApi'{export interface IListApi{reload:()=>void;}export default IListApi;}declare module'react-declarative/model/IListOperation'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IOption from"react-declarative/model/IOption";export interface IListOperation<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;icon:never;}>{isAvailable?:((rowIds:RowData[],isAll:boolean)=>boolean|Promise<boolean>)|boolean;}export default IListOperation;}declare module'react-declarative/model/IListRowAction'{import IOption from"react-declarative/model/IOption";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IListRowAction<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(row:RowData)=>Promise<boolean>|boolean;isDisabled?:(row:RowData)=>Promise<boolean>|boolean;enabled?:boolean;}export default IListRowAction;}declare module'react-declarative/model/IListProps'{import{Ref}from'react';import ActionType from'react-declarative/model/ActionType';import SelectionMode from'react-declarative/model/SelectionMode';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';import IColumn from'react-declarative/model/IColumn';import IListOperation from'react-declarative/model/IListOperation';import IListRowAction from'react-declarative/model/IListRowAction';import IField from'react-declarative/model/IField';import IListApi from'react-declarative/model/IListApi';import IOption from'react-declarative/model/IOption';interface IUpdateOption<RowData extends IRowData=IAnything>extends Omit<IListActionOption<RowData>,keyof{label:never;icon:never;}>{action:'update-now';label?:IOption['label'];icon?:IOption['icon'];}interface IResortOption<RowData extends IRowData=IAnything>extends Omit<IListActionOption<RowData>,keyof{label:never;icon:never;}>{action:'resort-action';label?:IOption['label'];icon?:IOption['icon'];}export interface IListActionOption<RowData extends IRowData=IAnything>extends Omit<IOption,keyof{isVisible:never;isDisabled:never;}>{isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export interface IListAction<RowData extends IRowData=IAnything>{type:ActionType;action?:string;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;icon?:React.ComponentType<any>;options?:(IListActionOption<RowData>|IUpdateOption<RowData>|IResortOption<RowData>)[];}export interface IListChip<RowData extends IRowData=IAnything>{name:keyof RowData;label:string;color?:string;enabled?:boolean;}export type ListHandlerResult<RowData extends IRowData=IAnything>=RowData[]|{rows:RowData[];total:number|null;};export type ListAvatar={src?:string;alt?:string;};export type ListHandlerPagination={limit:number;offset:number;};export type ListHandlerChips<RowData extends IRowData=IAnything>=Record<keyof RowData,boolean>;export type ListHandlerSortModel<RowData extends IRowData=IAnything>=IListSortItem<RowData>[];export type ListHandler<FilterData=IAnything,RowData extends IRowData=IAnything>=RowData[]|((data:FilterData,pagination:ListHandlerPagination,sort:ListHandlerSortModel<RowData>,chips:ListHandlerChips<RowData>,search:string)=>Promise<ListHandlerResult<RowData>>|ListHandlerResult<RowData>);export interface IListState<FilterData=IAnything,RowData extends IRowData=IAnything>{initComplete:boolean;filterData:FilterData;isChooser:boolean;rows:RowData[];limit:number;offset:number;total:number|null;loading:boolean;search:string;filtersCollapsed:boolean;sort:ListHandlerSortModel<RowData>;chips:ListHandlerChips<RowData>;}export interface IListCallbacks<FilterData=IAnything,RowData extends IRowData=IAnything>{handleDefault:()=>Promise<void>;handleSortModel:(sort:ListHandlerSortModel<RowData>)=>void;handleFilter:(data:FilterData)=>void;handlePageChange:(page:number)=>void;handleLimitChange:(limit:number)=>void;handleFiltersCollapsed:(filtersCollapsed:boolean)=>void;handleChips:(chips:ListHandlerChips)=>void;handleReload:()=>Promise<void>;handleSearch:(search:string)=>void;ready:()=>void;}export interface IListSortItem<RowData extends IRowData=IAnything>{field:keyof RowData;sort:'asc'|'desc';}export interface IListProps<FilterData extends IAnything=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<FilterData>>{apiRef?:Ref<IListApi>;className?:string;style?:React.CSSProperties;title?:string;filterLabel?:string;actions?:IListAction<RowData>[];operations?:IListOperation<RowData>[];limit?:number;sizeByParent?:boolean;selectedRows?:RowId[];showLoader?:boolean;heightRequest?:(height:number)=>number;widthRequest?:(width:number)=>number;onSelectedRows?:(rowIds:RowId[],initialChange:boolean)=>void;onFilterChange?:(data:FilterData)=>void;onChipsChange?:(chips:ListHandlerChips<RowData>)=>void;onSearchChange?:(search:string)=>void;onSortModelChange?:(sort:ListHandlerSortModel<RowData>)=>void;onOperation?:(action:string,selectedRows:RowData[],isAll:boolean,reload:()=>Promise<void>)=>void;onRowAction?:(action:string,row:RowData,reload:()=>Promise<void>)=>void;onRowClick?:(row:RowData,reload:()=>Promise<void>)=>void;onLoadStart?:(source:string)=>void;onLoadEnd?:(isOk:boolean,source:string)=>void;onAction?:(action:string,selectedRows:RowData[],reload:()=>Promise<void>)=>void;columns:IColumn<RowData>[];filters?:Field[];handler:ListHandler;rowMark?:((row:RowData)=>string)|((row:RowData)=>Promise<string>)|string;fallback?:(e:Error)=>void;rowActions?:IListRowAction[];toggleFilters?:boolean;withSearch?:boolean;selectionMode?:SelectionMode;chips?:IListChip<RowData>[];sortModel?:ListHandlerSortModel<RowData>;isChooser?:boolean;}export default IListProps;}declare module'react-declarative/model/IOption'{export interface IOption{label:string;action:string;icon?:React.ComponentType<any>;isVisible?:()=>Promise<boolean>|boolean;isDisabled?:()=>Promise<boolean>|boolean;}export default IOption;}declare module'react-declarative/model/IMenuGroup'{import*as React from'react';export interface IMenuOption{name?:string;label:string;icon?:React.ComponentType;bold?:boolean;roles?:string[];disabled?:boolean;}export interface IMenuGroup extends IMenuOption{options?:IMenuGroup[];}export default IMenuGroup;}declare module'react-declarative/model/IOneProps'{import React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';type DataOrNull<Data=IAnything>=Data|null;export type OneHandler<Data=IAnything>=Data|(()=>DataOrNull<Data>)|(()=>Promise<DataOrNull<Data>>)|null;export interface IOneProps<Data=IAnything,Field=IField<Data>>{createField?:(entity:IEntity<Data>,currentPath:string)=>React.ReactElement;className?:string;roles?:string[];style?:React.CSSProperties;handler?:OneHandler<Data>;fallback?:(e:Error)=>void;invalidity?:(e:string)=>void;focus?:()=>void;blur?:()=>void;ready?:()=>void;change?:(Data:Data,initial:boolean)=>void;fields:Field[];prefix?:string;loadStart?:(source:string)=>void;loadEnd?:(isOk:boolean,source:string)=>void;readonly?:boolean;}export default IOneProps;}declare module'react-declarative/hooks/useList'{import IColumn from'react-declarative/model/IColumn';import IRowData from'react-declarative/model/IRowData';import IAnything from'react-declarative/model/IAnything';import IListProps from'react-declarative/model/IListProps';import SelectionMode from'react-declarative/model/SelectionMode';import{IListPickerProps}from'react-declarative/components/common/ListPicker';type Fn<Data=IAnything>=(d:Data[]|null)=>void;interface IParams<RowData extends IRowData=IAnything>extends Omit<IListPickerProps<RowData>,keyof{onChange:never;selectionMode:never;selectedRows:never;minHeight:never;minWidth:never;title:never;columns:never;open:never;}>{selectionMode?:SelectionMode.Single|SelectionMode.Multiple;selectedRows?:IListProps<RowData>['selectedRows'];columns:Omit<IColumn<RowData>,keyof{headerName:never;width:never;}>[];minHeight?:number;minWidth?:number;title?:string;}export const useList:<RowData extends IRowData=any>({handler,columns,rowActions,selectionMode,title:titleDefault,minWidth:minWidthDefault,minHeight:minHeightDefault,selectedRows:selectedRowsDefault,}:IParams<RowData>)=>({title,minWidth,minHeight,selectedRows,}?:Partial<IParams<RowData>>)=>{then(onData:Fn):void;};export default useList;}declare module'react-declarative/components/ModalProvider'{export*from'react-declarative/components/ModalProvider/ModalProvider';export{default}from'react-declarative/components/ModalProvider/ModalProvider';}declare module'react-declarative/hooks/useConfirm'{type Fn=(result:boolean)=>void;interface IParams{title?:string;msg?:string;canCancel?:boolean;}export const useConfirm:({title:defaultTitle,msg:defaultMsg,canCancel:defaultCanCancel,}?:IParams)=>({canCancel,title,msg,}?:Partial<IParams>)=>{then(onData:Fn):void;};export default useConfirm;}declare module'react-declarative/hooks/useDate'{import dayjs from'dayjs';type Fn=(d:dayjs.Dayjs|null)=>void;export const useDate:()=>()=>{then(onData:Fn):void;};export default useDate;}declare module'react-declarative/hooks/useTime'{import dayjs from'dayjs';type Fn=(d:dayjs.Dayjs|null)=>void;export const useTime:()=>()=>{then(onData:Fn):void;};export default useTime;}declare module'react-declarative/hooks/useOne'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import TypedField from'react-declarative/model/TypedField';import{OneHandler}from'react-declarative/model/IOneProps';type Fn<Data=IAnything>=(d:Data|null)=>void;interface IParams<Data extends IAnything=IAnything,Field=IField<Data>>{fields:Field[];title?:string;handler?:OneHandler<Data>;}export const useOne:<Data extends unknown=any,Field=IField<Data>>({fields,title:defaultTitle,handler:defaultHandler,}:IParams<Data,Field>)=>({handler,title,}?:Partial<IParams<Data,Field>>)=>{then(onData:Fn):void;};export const useOneTyped:<Data extends unknown=any>(params:IParams<Data,TypedField<Data>>)=>({handler,title,}?:Partial<IParams<Data,TypedField<Data>>>)=>{then(onData:Fn):void;};export default useOne;}declare module'react-declarative/model/IAnything'{export type IAnything=any;export default IAnything;}declare module'react-declarative/model/IRowData'{export interface IRowData{id:RowId;}export type RowId=string|number;export default IRowData;}declare module'react-declarative/components'{export*from'react-declarative/components/One';export*from'react-declarative/components/List';export*from'react-declarative/components/Switch';export*from'react-declarative/components/Scaffold';export*from'react-declarative/components/Translate';export*from'react-declarative/components/Breadcrumbs';export*from'react-declarative/components/ModalProvider';export*from'react-declarative/components/ActionMenu';export*from'react-declarative/components/ConstraintView';export*from'react-declarative/components/ScrollView';export*from'react-declarative/components/AutoSizer';export*from'react-declarative/components/FadeView';export*from'react-declarative/components/FetchView';export*from'react-declarative/components/Async';export*from'react-declarative/components/If';}declare module'react-declarative/components/Translate'{export*from'react-declarative/components/Translate/Translate';export{default}from'react-declarative/components/Translate/Translate';}declare module'react-declarative/model/IOnePublicProps'{import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";import IOneProps from"react-declarative/model/IOneProps";export interface IOnePublicProps<Data=IAnything,Field=IField<Data>>extends IOneProps<Data,Field>{onFocus?:IOneProps<Data,Field>['focus'];onBlur?:IOneProps<Data,Field>['blur'];onReady?:IOneProps<Data,Field>['ready'];onChange?:IOneProps<Data,Field>['change'];onInvalid?:IOneProps<Data,Field>['invalidity'];onLoadStart?:IOneProps<Data,Field>['loadStart'];onLoadEnd?:IOneProps<Data,Field>['loadEnd'];}export default IOnePublicProps;}declare module'react-declarative/utils/arrays'{export const arrays:(root:any,forceArray?:boolean)=>any;export default arrays;}declare module'react-declarative/utils/objects'{export const objects:(root:any)=>any;export default objects;}declare module'react-declarative/utils/createProvider'{import*as React from'react';export const createProvider:<T extends unknown,P extends unknown>(createPayload:(props:P)=>T)=>readonly[({children,...props}:React.PropsWithChildren<P>)=>JSX.Element,()=>T];export default createProvider;}declare module'react-declarative/utils/formatText'{interface IParams{symbol?:string;allowed?:RegExp;}export const formatText:(raw:string,template:string,{symbol,allowed,}?:IParams)=>string;export default formatText;}declare module'react-declarative/utils/roundTicks'{export const roundTicks:(price:number,tickSize?:number)=>string;export default roundTicks;}declare module'react-declarative/utils/wordForm'{interface IWordForm{one:string;two:string;many:string;}export const wordForm:(value:number,{one,two,many,}:IWordForm)=>string;export default wordForm;}declare module'react-declarative/utils/hof/singleshot'{export interface IClearable{clear:()=>void;}export const singleshot:<T extends(...args:any)=>any>(run:T)=>T&IClearable;export default singleshot;}declare module'react-declarative/utils/hof/cancelable'{export interface IWrappedFn<T extends any=any,P extends any[]=any>{(...args:P):Promise<T>;cancel():void;}export const cancelable:<T extends unknown=any,P extends any[]=any>(promise:(...args:P)=>Promise<T>)=>IWrappedFn<T,P>;export default cancelable;}declare module'react-declarative/utils/hof/debounce'{export interface IClearable{clear:()=>void;}export const debounce:<T extends(...args:any)=>any>(run:T,delay?:number)=>T&IClearable;export default debounce;}declare module'react-declarative/utils/hof/queued'{export interface IWrappedFn<T extends any=any,P extends any[]=any>{(...args:P):Promise<T>;clear():void;}export const queued:<T extends unknown=any,P extends any[]=any>(promise:(...args:P)=>Promise<T>)=>IWrappedFn<T,P>;export default queued;}declare module'react-declarative/utils/hof/cached'{import{IClearable}from'react-declarative/utils/hof/singleshot';export const cached:<T extends(args?:any[]|undefined)=>any>(run:T)=>T&IClearable;export default cached;}declare module'react-declarative/utils/rx/EventEmitter'{type EventKey=string|symbol;export class EventEmitter{subscribe:(eventName:EventKey,callback:Function)=>void;unsubscribe:(eventName:EventKey,callback:Function)=>void;once:(eventName:EventKey,callback:Function)=>void;emit:(eventName:EventKey,...args:any[])=>void;}export default EventEmitter;}declare module'react-declarative/utils/rx/Subject'{export class Subject<Data=any>{subscribe:(callback:Function)=>()=>void;once:(callback:Function)=>void;next:(data:Data)=>void;}export default Subject;}declare module'react-declarative/utils/formatAmount'{export const thinsp="\u2009";export const nbsp="\u00A0";export const formatAmount:(value:number|string,scale?:number,separator?:string)=>string;export default formatAmount;}declare module'react-declarative/utils/createCustomTag'{export const createCustomTag:(name?:string,style?:string)=>void;export default createCustomTag;}declare module'react-declarative/utils/mainColor'{export const mainColor:(color:string)=>void;export default mainColor;}declare module'react-declarative/utils/cacheSrc'{export const cacheSrc:(url:string)=>{ref:(element:HTMLImageElement|null)=>void;};export default cacheSrc;}declare module'react-declarative/utils/typo'{export const thinsp="\u2009";export const nbsp="\u00A0";export const emdash="\u2014";export const endash="\u2013";}declare module'react-declarative/components/One/layouts/FragmentLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IFragmentLayoutProps<Data=IAnything>{isVisible?:PickProp<IField<Data>,'isVisible'>;}interface IFragmentLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;ready:PickProp<IEntity<Data>,'ready'>;object:PickProp<IEntity<Data>,'object'>;}export const FragmentLayout:{<Data extends unknown=any>({children,isVisible,object,ready,}:IFragmentLayoutProps<Data>&IFragmentLayoutPrivate<Data>):JSX.Element|null;displayName:string;};export default FragmentLayout;}declare module'react-declarative/components/One/layouts/DivLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IDivLayoutProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IDivLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;}export const DivLayout:{<Data extends unknown=any>({children,className,style,}:IDivLayoutProps<Data>&IDivLayoutPrivate<Data>):JSX.Element;displayName:string;};export default DivLayout;}declare module'react-declarative/components/One/layouts/TabsLayout'{import*as React from'react';import{IGroupProps}from"react-declarative/components/common/Group";import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface ITabsLayoutProps<Data=IAnything>extends IGroupProps<Data>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;tabLine?:PickProp<IField<Data>,'tabLine'>;tabList?:PickProp<IField<Data>,'tabList'>;tabIndex?:PickProp<IField<Data>,'tabIndex'>;tabColor?:PickProp<IField<Data>,'tabColor'>;tabChange?:PickProp<IField<Data>,'tabChange'>;tabVariant?:PickProp<IField<Data>,'tabVariant'>;tabKeepFlow?:PickProp<IField<Data>,'tabKeepFlow'>;tabBackground?:PickProp<IField<Data>,'tabBackground'>;}interface ITabsLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;}export const TabsLayout:{<Data extends unknown=any>({children,className,style,tabChange,tabVariant,tabLine,tabColor,tabList,tabKeepFlow,tabBackground,tabIndex:tabIndexDefault,columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,}:ITabsLayoutProps<Data>&ITabsLayoutPrivate<Data>):JSX.Element;displayName:string;};export default TabsLayout;}declare module'react-declarative/components/One/layouts/CenterLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';import{IGroupProps}from"react-declarative/components/common/Group";export interface ICenterLayoutProps<Data=IAnything>extends IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface ICenterLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;}export const CenterLayout:{<Data extends unknown=any>({children,className,style,innerPadding:padding,columns,phoneColumns,tabletColumns,desktopColumns,columnsOverride,fieldRightMargin,fieldBottomMargin,}:ICenterLayoutProps<Data>&ICenterLayoutPrivate<Data>):JSX.Element;displayName:string;};export default CenterLayout;}declare module'react-declarative/components/One/layouts/StretchLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IStretchLayoutProps<Data=IAnything>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IStretchLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;}export const StretchLayout:{<Data extends unknown=any>({children,className,style,innerPadding:padding,}:IStretchLayoutProps<Data>&IStretchLayoutPrivate<Data>):JSX.Element;displayName:string;};export default StretchLayout;}declare module'react-declarative/components/One/layouts/GroupLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import IAnything from"react-declarative/model/IAnything";export interface IGroupLayoutProps<Data=IAnything>extends IGroupProps<Data>{}interface IGroupLayoutPrivate{children:React.ReactChild;}export const GroupLayout:{<Data extends unknown=any>({columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,style,className,children,}:IGroupLayoutProps<Data>&IGroupLayoutPrivate):JSX.Element;displayName:string;};export default GroupLayout;}declare module'react-declarative/components/One/layouts/OutlineLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import{IOutlineProps}from'react-declarative/components/common/Outline';import{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IOutlineLayoutProps<Data=IAnything>extends IOutlineProps<Data>,IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;}interface IOutlineLayoutPrivate{children:React.ReactChild;}export const OutlineLayout:{<Data extends unknown=any>({columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,style,className,children,fieldRightMargin,fieldBottomMargin,innerPadding:padding,}:IOutlineLayoutProps<Data>&IOutlineLayoutPrivate):JSX.Element;displayName:string;};export default OutlineLayout;}declare module'react-declarative/components/One/layouts/PaperLayout'{import*as React from"react";import{IGroupProps}from"react-declarative/components/common/Group";import{IPaperProps}from'react-declarative/components/common/Paper';import{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IPaperLayoutProps<Data=IAnything>extends IPaperProps<Data>,IGroupProps<Data>{innerPadding?:PickProp<IField<Data>,'innerPadding'>;}interface IPaperLayoutPrivate{children:React.ReactChild;}export const PaperLayout:{<Data extends unknown=any>({columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,style,className,children,fieldRightMargin,fieldBottomMargin,innerPadding:padding,}:IPaperLayoutProps<Data>&IPaperLayoutPrivate):JSX.Element;displayName:string;};export default PaperLayout;}declare module'react-declarative/components/One/layouts/ExpansionLayout'{import*as React from"react";import{IExpansionProps}from"react-declarative/components/common/Expansion";import{IGroupProps}from"react-declarative/components/common/Group";import IAnything from"react-declarative/model/IAnything";export interface IExpansionLayoutProps<Data=IAnything>extends IExpansionProps<Data>,IGroupProps<Data>{}interface IExpansionLayoutPrivate{children:React.ReactChild;}export const ExpansionLayout:{<Data extends unknown=any>({columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,fieldRightMargin,fieldBottomMargin,style,className,children,title,description,}:IExpansionLayoutProps<Data>&IExpansionLayoutPrivate):JSX.Element;displayName:string;};export default ExpansionLayout;}declare module'react-declarative/components/One/layouts/HeroLayout'{import*as React from'react';import{Theme}from'@mui/material';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';import Group,{IGroupProps}from'react-declarative/components/common/Group';import IEntity from'react-declarative/model/IEntity';interface IHeroTop<Data=IAnything>{top?:PickProp<IField<Data>,'top'>;phoneTop?:PickProp<IField<Data>,'phoneTop'>;tabletTop?:PickProp<IField<Data>,'tabletTop'>;desktopTop?:PickProp<IField<Data>,'desktopTop'>;}interface IHeroLeft<Data=IAnything>{left?:PickProp<IField<Data>,'left'>;phoneLeft?:PickProp<IField<Data>,'phoneLeft'>;tabletLeft?:PickProp<IField<Data>,'tabletLeft'>;desktopLeft?:PickProp<IField<Data>,'desktopLeft'>;}interface IHeroRight<Data=IAnything>{right?:PickProp<IField<Data>,'right'>;phoneRight?:PickProp<IField<Data>,'phoneRight'>;tabletRight?:PickProp<IField<Data>,'tabletRight'>;desktopRight?:PickProp<IField<Data>,'desktopRight'>;}interface IHeroBottom<Data=IAnything>{bottom?:PickProp<IField<Data>,'bottom'>;phoneBottom?:PickProp<IField<Data>,'phoneBottom'>;tabletBottom?:PickProp<IField<Data>,'tabletBottom'>;desktopBottom?:PickProp<IField<Data>,'desktopBottom'>;}interface IHeroHeight<Data=IAnything>{height?:PickProp<IField<Data>,'height'>;phoneHeight?:PickProp<IField<Data>,'phoneHeight'>;tabletHeight?:PickProp<IField<Data>,'tabletHeight'>;desktopHeight?:PickProp<IField<Data>,'desktopHeight'>;}interface IHeroMinHeight<Data=IAnything>{minHeight?:PickProp<IField<Data>,'minHeight'>;phoneMinHeight?:PickProp<IField<Data>,'phoneMinHeight'>;tabletMinHeight?:PickProp<IField<Data>,'tabletMinHeight'>;desktopMinHeight?:PickProp<IField<Data>,'desktopMinHeight'>;}interface IHeroMaxHeight<Data=IAnything>{maxHeight?:PickProp<IField<Data>,'maxHeight'>;phoneMaxHeight?:PickProp<IField<Data>,'phoneMaxHeight'>;tabletMaxHeight?:PickProp<IField<Data>,'tabletMaxHeight'>;desktopMaxHeight?:PickProp<IField<Data>,'desktopMaxHeight'>;}interface IHeroWidth<Data=IAnything>{width?:PickProp<IField<Data>,'width'>;phoneWidth?:PickProp<IField<Data>,'phoneWidth'>;tabletWidth?:PickProp<IField<Data>,'tabletWidth'>;desktopWidth?:PickProp<IField<Data>,'desktopWidth'>;}interface IHeroMinWidth<Data=IAnything>{minWidth?:PickProp<IField<Data>,'minWidth'>;phoneMinWidth?:PickProp<IField<Data>,'phoneMinWidth'>;tabletMinWidth?:PickProp<IField<Data>,'tabletMinWidth'>;desktopMinWidth?:PickProp<IField<Data>,'desktopMinWidth'>;}interface IHeroMaxWidth<Data=IAnything>{maxWidth?:PickProp<IField<Data>,'maxWidth'>;phoneMaxWidth?:PickProp<IField<Data>,'phoneMaxWidth'>;tabletMaxWidth?:PickProp<IField<Data>,'tabletMaxWidth'>;desktopMaxWidth?:PickProp<IField<Data>,'desktopMaxWidth'>;}interface IHeroStyle<Data=IAnything>{heroOuterStyle?:PickProp<IField<Data>,'heroOuterStyle'>;heroOuterPhoneStyle?:PickProp<IField<Data>,'heroOuterPhoneStyle'>;heroOuterTabletStyle?:PickProp<IField<Data>,'heroOuterTabletStyle'>;heroOuterDesktopStyle?:PickProp<IField<Data>,'heroOuterDesktopStyle'>;heroInnerStyle?:PickProp<IField<Data>,'heroInnerStyle'>;heroInnerPhoneStyle?:PickProp<IField<Data>,'heroInnerPhoneStyle'>;heroInnerTabletStyle?:PickProp<IField<Data>,'heroInnerTabletStyle'>;heroInnerDesktopStyle?:PickProp<IField<Data>,'heroInnerDesktopStyle'>;}type IHeroRegistry<D=IAnything>=IHeroTop<D>&IHeroLeft<D>&IHeroRight<D>&IHeroBottom<D>&IHeroWidth<D>&IHeroMinWidth<D>&IHeroMaxWidth<D>&IHeroHeight<D>&IHeroMinHeight<D>&IHeroMaxHeight<D>&IHeroStyle<D>;type Group<Data=IAnything>=Omit<IGroupProps<Data>,keyof{fieldRightMargin:never;fieldBottomMargin:never;}>;export interface IHeroLayoutProps<Data=IAnything>extends IHeroRegistry<Data>,Group<Data>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;object:PickProp<IEntity<Data>,'object'>;}interface IHeroLayoutPrivate{children:React.ReactChild;theme?:Theme;}export const HeroLayout:{<Data extends unknown=any>({children,theme,className,style,object,columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,...otherProps}:IHeroLayoutProps<Data>&IHeroLayoutPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({children,theme,className,style,object,columns,columnsOverride,phoneColumns,tabletColumns,desktopColumns,...otherProps}:IHeroLayoutProps<Data>&IHeroLayoutPrivate):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/layouts/ConditionLayout'{import*as React from'react';import IField from'react-declarative/model/IField';import IEntity from'react-declarative/model/IEntity';import IAnything from'react-declarative/model/IAnything';import{PickProp}from'react-declarative/model/IManaged';export interface IConditionLayoutProps<Data=IAnything>{condition?:PickProp<IField<Data>,'condition'>;}interface IConditionLayoutPrivate<Data=IAnything>extends IEntity<Data>{children:React.ReactChild;fallback:PickProp<IEntity<Data>,'fallback'>;ready:PickProp<IEntity<Data>,'ready'>;object:PickProp<IEntity<Data>,'object'>;}export const ConditionLayout:{<Data extends unknown=any>({children,condition,fallback,object,ready,}:IConditionLayoutProps<Data>&IConditionLayoutPrivate<Data>):JSX.Element;displayName:string;};export default ConditionLayout;}declare module'react-declarative/components/One/fields/CheckboxField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ICheckboxFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ICheckboxFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;disabled:PickProp<IManaged<Data>,'disabled'>;onChange:PickProp<IManaged<Data>,'onChange'>;}export const CheckboxField:{({disabled,value,onChange,title}:ICheckboxFieldProps&ICheckboxFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ComboField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IComboFieldProps<Data=IAnything>{description?:PickProp<IField<Data>,"description">;placeholder?:PickProp<IField<Data>,"placeholder">;outlined?:PickProp<IField<Data>,"outlined">;itemList?:PickProp<IField<Data>,"itemList">;keepSync?:PickProp<IField<Data>,"keepSync">;title?:PickProp<IField<Data>,"title">;tr?:PickProp<IField<Data>,"tr">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IComboFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,"value">;disabled:PickProp<IManaged<Data>,"disabled">;readonly:PickProp<IManaged<Data>,"readonly">;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;onChange:PickProp<IManaged<Data>,"onChange">;dirty:PickProp<IManaged<Data>,"dirty">;invalid:PickProp<IManaged<Data>,"invalid">;}export const ComboField:{({value,disabled,readonly,fieldReadonly,description,placeholder,outlined,itemList,keepSync,title,dirty,invalid,tr,onChange,}:IComboFieldProps&IComboFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ComponentField'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IManaged,{PickProp}from'react-declarative/model/IManaged';export interface IComponentFieldProps<Data=IAnything>{element?:PickProp<IField<Data>,'element'>;groupRef?:PickProp<IField<Data>,'groupRef'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IComponentFieldPrivate<Data=IAnything>{object:PickProp<IManaged<Data>,'object'>;}export const ComponentField:{({element:Element,object,}:IComponentFieldProps&IComponentFieldPrivate):JSX.Element|null;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ItemsField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IItemsFieldProps<Data=IAnything>{description?:PickProp<IField<Data>,"description">;placeholder?:PickProp<IField<Data>,"placeholder">;outlined?:PickProp<IField<Data>,"outlined">;itemList?:PickProp<IField<Data>,"itemList">;keepSync?:PickProp<IField<Data>,"keepSync">;title?:PickProp<IField<Data>,"title">;tr?:PickProp<IField<Data>,"tr">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IItemsFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,"onChange">;value:PickProp<IManaged<Data>,'value'>;disabled:PickProp<IManaged<Data>,"disabled">;readonly:PickProp<IManaged<Data>,"readonly">;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;dirty:PickProp<IManaged<Data>,"dirty">;invalid:PickProp<IManaged<Data>,"invalid">;}export const ItemsField:{({value,disabled,readonly,description,placeholder,outlined,itemList,keepSync,fieldReadonly,dirty,invalid,title,tr,onChange,}:IItemsFieldProps&IItemsFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/LineField'{import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ILineFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export const LineField:{({title,}:ILineFieldProps):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/ProgressField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IField from"react-declarative/model/IField";import IAnything from"react-declarative/model/IAnything";export interface IProgressFieldProps<Data=IAnything>{maxPercent?:PickProp<IField<Data>,"maxPercent">;showPercentLabel?:PickProp<IField<Data>,"showPercentLabel">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IProgressFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,"value">;}export const ProgressField:{({maxPercent,showPercentLabel,value,}:IProgressFieldProps&IProgressFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/RadioField'{import IField from"react-declarative/model/IField";import IAnything from"react-declarative/model/IAnything";import IManaged,{PickProp}from"react-declarative/model/IManaged";export interface IRadioFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,"title">;radioValue?:PickProp<IField<Data>,"radioValue">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IRadioFieldPrivate<Data=IAnything>{disabled:PickProp<IManaged<Data>,"disabled">;value:PickProp<IManaged<Data>,"value">;onChange:PickProp<IManaged<Data>,"onChange">;name?:PickProp<IManaged<Data>,'name'>;}export const RadioField:{({disabled,value,onChange,title,radioValue,name,}:IRadioFieldProps&IRadioFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/RatingField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IRatingFieldProps<Data=IAnything>{readonly?:PickProp<IField<Data>,"readonly">;title?:PickProp<IField<Data>,"title">;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface IRatingFieldPrivate<Data=IAnything>{name?:string;value:PickProp<IManaged<Data>,"value">;disabled:PickProp<IManaged<Data>,"disabled">;fieldReadonly:PickProp<IManaged<Data>,"fieldReadonly">;onChange:PickProp<IManaged<Data>,"onChange">;}export const RatingField:{({value,disabled,fieldReadonly,title,name,onChange,}:IRatingFieldProps&IRatingFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/SliderField'{import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IManaged,{PickProp}from'react-declarative/model/IManaged';export interface ISliderFieldProps<Data=IAnything>{stepSlider?:PickProp<IField<Data>,'stepSlider'>;maxSlider?:PickProp<IField<Data>,'maxSlider'>;minSlider?:PickProp<IField<Data>,'minSlider'>;labelFormatSlider?:PickProp<IField<Data>,'labelFormatSlider'>;leadingIcon?:PickProp<IField<Data>,'leadingIcon'>;trailingIcon?:PickProp<IField<Data>,'trailingIcon'>;leadingIconClick?:PickProp<IField<Data>,'leadingIconClick'>;trailingIconClick?:PickProp<IField<Data>,'trailingIconClick'>;sliderThumbColor?:PickProp<IField<Data>,'sliderThumbColor'>;sliderTrackColor?:PickProp<IField<Data>,'sliderTrackColor'>;sliderRailColor?:PickProp<IField<Data>,'sliderRailColor'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ISliderFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;onChange:PickProp<IManaged<Data>,'onChange'>;}export const SliderField:{({value,onChange,leadingIcon,trailingIcon,leadingIconClick,trailingIconClick,stepSlider,maxSlider,minSlider,labelFormatSlider,}:ISliderFieldProps&ISliderFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/SwitchField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ISwitchFieldProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ISwitchFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,'onChange'>;disabled:PickProp<IManaged<Data>,'disabled'>;value:PickProp<IManaged<Data>,'value'>;}export const SwitchField:{({disabled,value,onChange,title,}:ISwitchFieldProps&ISwitchFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/TextField'{import IManaged,{PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface ITextFieldProps<Data=IAnything>{inputType?:PickProp<IField<Data>,"inputType">;inputAutocomplete?:PickProp<IField<Data>,"inputAutocomplete">;inputFormatter?:PickProp<IField<Data>,"inputFormatter">;inputFormatterSymbol?:PickProp<IField<Data>,"inputFormatterSymbol">;inputFormatterAllowed?:PickProp<IField<Data>,"inputFormatterAllowed">;inputFormatterTemplate?:PickProp<IField<Data>,"inputFormatterTemplate">;description?:PickProp<IField<Data>,"description">;outlined?:PickProp<IField<Data>,"outlined">;title?:PickProp<IField<Data>,"title">;leadingIcon?:PickProp<IField<Data>,"leadingIcon">;trailingIcon?:PickProp<IField<Data>,"trailingIcon">;leadingIconClick?:PickProp<IField<Data>,"leadingIconClick">;trailingIconClick?:PickProp<IField<Data>,"trailingIconClick">;inputRows?:PickProp<IField<Data>,"inputRows">;placeholder?:PickProp<IField<Data>,"placeholder">;readonly?:PickProp<IField<Data>,"readonly">;autoFocus?:PickProp<IField<Data>,"autoFocus">;disabled?:PickProp<IField<Data>,"disabled">;groupRef?:PickProp<IField<Data>,'groupRef'>;inputRef?:PickProp<IField<Data>,'inputRef'>;}export interface ITextFieldPrivate<Data=IAnything>{onChange:PickProp<IManaged<Data>,"onChange">;invalid:PickProp<IManaged<Data>,"invalid">;value:PickProp<IManaged<Data>,"value">;loading:PickProp<IManaged<Data>,"loading">;disabled:PickProp<IManaged<Data>,"disabled">;dirty:PickProp<IManaged<Data>,"dirty">;name:PickProp<IManaged<Data>,"name">;}export const TextField:{({invalid,value,disabled,readonly,inputType,description,outlined,title,leadingIcon,trailingIcon,leadingIconClick,trailingIconClick,inputRows,placeholder,inputAutocomplete,inputFormatter,inputFormatterSymbol,inputFormatterAllowed,inputFormatterTemplate,dirty,loading,onChange,autoFocus,inputRef,name,}:ITextFieldProps&ITextFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/components/One/fields/TypographyField'{import IManaged,{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface ITypographyFieldProps<Data=IAnything>{placeholder?:PickProp<IField<Data>,'placeholder'>;typoVariant?:PickProp<IField<Data>,'typoVariant'>;className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;groupRef?:PickProp<IField<Data>,'groupRef'>;}export interface ITypographyFieldPrivate<Data=IAnything>{value:PickProp<IManaged<Data>,'value'>;}export const TypographyField:{({value,placeholder,typoVariant,style,}:ITypographyFieldProps&ITypographyFieldPrivate):JSX.Element;displayName:string;};const _default:{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:import("../../../model/IEntity").IEntity<Data>):JSX.Element;displayName:string;};export default _default;}declare module'react-declarative/model/ISize'{import IAnything from'react-declarative/model/IAnything';export interface ISize{height:number;width:number;}export type ISizeCallback<Data=IAnything>=(data:Data,size:ISize,ref:HTMLDivElement)=>string;export default ISize;}declare module'react-declarative/components/common/ListPicker'{export*from'react-declarative/components/common/ListPicker/ListPicker';export{default}from'react-declarative/components/common/ListPicker/ListPicker';}declare module'react-declarative/components/ModalProvider/ModalProvider'{import*as React from'react';import IAnything from'react-declarative/model/IAnything';interface IModalProviderProps{children:React.ReactNode;}type IRenderer=React.ComponentType<IAnything>;interface IHook{(render:IRenderer,deps?:any[]):{showModal:Function;hideModal:Function;};}export const ModalProvider:({children}:IModalProviderProps)=>JSX.Element;export const useModal:IHook;export default ModalProvider;}declare module'react-declarative/components/One'{export*from'react-declarative/components/One/One';export*from'react-declarative/components/One/slots';export{createField}from'react-declarative/components/One/config/createField';export{makeField}from'react-declarative/components/One/components/makeField';export{useOneProps}from'react-declarative/components/One/context/PropsProvider';export{useOneState}from'react-declarative/components/One/context/StateProvider';export{OtherComboSlot}from'react-declarative/components/One/other/OtherComboSlot';export{OtherItemsSlot}from'react-declarative/components/One/other/OtherItemsSlot';export{useApiHandler}from'react-declarative/components/One/api/useApiHandler';export{useLocalHandler}from'react-declarative/components/One/api/useLocalHandler';export{useStaticHandler}from'react-declarative/components/One/api/useStaticHandler';export{usePreventLeave}from'react-declarative/components/One/api/usePreventLeave';export{default as OneSlotFactory}from'react-declarative/components/One/components/SlotFactory';export{defaultSlots as OneDefaultSlots}from'react-declarative/components/One/components/SlotFactory';export{default}from'react-declarative/components/One/One';}declare module'react-declarative/components/List'{export*from"react-declarative/components/List/List";export*from"react-declarative/components/List/slots";export{useProps as useListProps}from'react-declarative/components/List/hooks/useProps';export{useCachedRows as useListCachedRows}from'react-declarative/components/List/hooks/useCachedRows';export{useApiPaginator}from'react-declarative/components/List/api/useApiPaginator';export{useLastPagination}from'react-declarative/components/List/api/useLastPagination';export{useCachedPaginator}from'react-declarative/components/List/api/useCachedPaginator';export{useArrayPaginator}from'react-declarative/components/List/api/useArrayPaginator';export{default as ListSlotFactory}from'react-declarative/components/List/components/SlotFactory';export{defaultSlots as ListDefaultSlots}from'react-declarative/components/List/components/SlotFactory';export{default}from"react-declarative/components/List/List";}declare module'react-declarative/components/Switch'{export*from'react-declarative/components/Switch/Switch';export{default}from'react-declarative/components/Switch/Switch';}declare module'react-declarative/components/Scaffold'{export*from"react-declarative/components/Scaffold/Scaffold";export{default}from"react-declarative/components/Scaffold/Scaffold";}declare module'react-declarative/components/Breadcrumbs'{export*from'react-declarative/components/Breadcrumbs/Breadcrumbs';export{default}from'react-declarative/components/Breadcrumbs/Breadcrumbs';}declare module'react-declarative/components/ActionMenu'{export*from'react-declarative/components/ActionMenu/ActionMenu';export{default}from'react-declarative/components/ActionMenu/ActionMenu';}declare module'react-declarative/components/ConstraintView'{export*from'react-declarative/components/ConstraintView/ConstraintView';export{default}from'react-declarative/components/ConstraintView/ConstraintView';}declare module'react-declarative/components/ScrollView'{export*from'react-declarative/components/ScrollView/ScrollView';export{default}from'react-declarative/components/ScrollView/ScrollView';}declare module'react-declarative/components/AutoSizer'{export*from"react-declarative/components/AutoSizer/AutoSizer";export{default}from"react-declarative/components/AutoSizer/AutoSizer";}declare module'react-declarative/components/FadeView'{export*from'react-declarative/components/FadeView/FadeView';export{default}from'react-declarative/components/FadeView/FadeView';}declare module'react-declarative/components/FetchView'{export*from'react-declarative/components/FetchView/FetchView';export{default}from'react-declarative/components/FetchView/FetchView';}declare module'react-declarative/components/Async'{export*from'react-declarative/components/Async/Async';export{default}from'react-declarative/components/Async/Async';}declare module'react-declarative/components/If'{export*from'react-declarative/components/If/If';export{default}from'react-declarative/components/If/If';}declare module'react-declarative/components/Translate/Translate'{import*as React from'react';interface IAttributeCollection{[name:string]:unknown;}type Locale=Record<string,string>;export class Translate{readonly transform?:((str:string)=>string)|undefined;get skipList():string[];constructor(locale?:Locale,transform?:((str:string)=>string)|undefined);createElement:(type:string,props:IAttributeCollection|null,...children:any[])=>React.DOMElement<IAttributeCollection,Element>;}global{interface Window{Translate:Translate;}}export const register:(locale?:Locale,transform?:((str:string)=>string)|undefined)=>void;export default Translate;}declare module'react-declarative/components/common/Group'{export*from'react-declarative/components/common/Group/Group';export{default}from'react-declarative/components/common/Group/Group';}declare module'react-declarative/components/common/Outline'{export*from'react-declarative/components/common/Outline/Outline';export{default}from'react-declarative/components/common/Outline/Outline';}declare module'react-declarative/components/common/Paper'{export*from'react-declarative/components/common/Paper/Paper';export{default}from'react-declarative/components/common/Paper/Paper';}declare module'react-declarative/components/common/Expansion'{export*from'react-declarative/components/common/Expansion/Expansion';export{default}from'react-declarative/components/common/Expansion/Expansion';}declare module'react-declarative/components/common/ListPicker/ListPicker'{import IRowData,{RowId}from'react-declarative/model/IRowData';import IListProps from'react-declarative/model/IListProps';import IAnything from'react-declarative/model/IAnything';import IColumn from'react-declarative/model/IColumn';import SelectionMode from'react-declarative/model/SelectionMode';import IListRowAction from'react-declarative/model/IListRowAction';export interface IListPickerProps<RowData extends IRowData=IAnything>{onChange:(data:RowId[]|null)=>void;handler:IListProps<RowData>['handler'];selectionMode:SelectionMode.Single|SelectionMode.Multiple;columns:Omit<IColumn<RowData>,keyof{headerName:never;width:never;}>[];selectedRows:NonNullable<IListProps<RowData>['selectedRows']>|null;minHeight:number;minWidth:number;title:string;open:boolean;rowActions?:IListRowAction[];}export const ListPicker:<RowData extends IRowData=any>({onChange,handler,title,columns,open,selectionMode,selectedRows:selectedRowsDefault,minHeight,minWidth,rowActions,}:IListPickerProps<RowData>)=>JSX.Element;export default ListPicker;}declare module'react-declarative/components/One/One'{import IField from'react-declarative/model/IField';import TypedField from"react-declarative/model/TypedField";import IOnePublicProps from"react-declarative/model/IOnePublicProps";export const One:{<Data extends unknown=any,Field=IField<Data>>(props:IOnePublicProps<Data,Field>):JSX.Element;displayName:string;typed:{<Data_1 extends unknown=any,Field_1=TypedField<Data_1>>(props:IOnePublicProps<Data_1,Field_1>):JSX.Element;displayName:string;};};export const OneTyped:{<Data extends unknown=any,Field=TypedField<Data>>(props:IOnePublicProps<Data,Field>):JSX.Element;displayName:string;};export default One;}declare module'react-declarative/components/One/slots'{export*from'react-declarative/components/One/slots/CheckBoxSlot';export*from'react-declarative/components/One/slots/ComboSlot';export*from'react-declarative/components/One/slots/ItemsSlot';export*from'react-declarative/components/One/slots/LineSlot';export*from'react-declarative/components/One/slots/ProgressSlot';export*from'react-declarative/components/One/slots/RadioSlot';export*from'react-declarative/components/One/slots/RatingSlot';export*from'react-declarative/components/One/slots/SliderSlot';export*from'react-declarative/components/One/slots/SwitchSlot';export*from'react-declarative/components/One/slots/TextSlot';export*from'react-declarative/components/One/slots/TypographySlot';}declare module'react-declarative/components/One/config/createField'{import IEntity from"react-declarative/model/IEntity";export const createField:<Data extends unknown=any>(entity:IEntity<Data>,currentPath?:string)=>JSX.Element;export default createField;}declare module'react-declarative/components/One/components/makeField'{export*from'react-declarative/components/One/components/makeField/makeField';export{default}from'react-declarative/components/One/components/makeField/makeField';}declare module'react-declarative/components/One/context/PropsProvider'{import*as React from'react';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IOneProps from'react-declarative/model/IOneProps';interface IPropsProviderProps<Data extends IAnything=IAnything,Field extends IField<Data>=IField<Data>>extends IOneProps<Data,Field>{children:React.ReactNode;}export const PropsProvider:<Data extends unknown=any,Field extends IField<Data>=IField<Data>>({children,...props}:IPropsProviderProps<Data,Field>)=>JSX.Element;export const useOneProps:<Data extends unknown=any>()=>IOneProps<Data,IField<Data>>;export default PropsProvider;}declare module'react-declarative/components/One/context/StateProvider'{import*as React from'react';import IField from'react-declarative/model/IField';import IAnything from'react-declarative/model/IAnything';import IOneProps from'react-declarative/model/IOneProps';interface IStateProviderProps<Data=IAnything,Field extends IField<Data>=IField<Data>>extends IOneProps<Data,Field>{children:React.ReactElement;}interface IState<Data=IAnything>{object:Data|null;setObject:(data:Data)=>void;}export const StateProvider:<Data extends unknown,Field extends IField<Data>=IField<Data>>({children,...otherProps}:IStateProviderProps<Data,Field>)=>JSX.Element;export const useOneState:<Data extends unknown>()=>IState<Data>;export default StateProvider;}declare module'react-declarative/components/One/other/OtherComboSlot'{import{IComboSlot}from'react-declarative/components/One/slots/ComboSlot';export const OtherComboSlot:({value,disabled,readonly,description,placeholder,outlined,itemList,title,dirty,invalid,tr,onChange,}:IComboSlot)=>JSX.Element;export default OtherComboSlot;}declare module'react-declarative/components/One/other/OtherItemsSlot'{import{IItemsSlot}from'react-declarative/components/One/slots/ItemsSlot';export const OtherItemsSlot:({value,disabled,readonly,description,placeholder,outlined,itemList,dirty,invalid,title,tr,onChange,}:IItemsSlot)=>JSX.Element;export default OtherItemsSlot;}declare module'react-declarative/components/One/api/useLocalHandler'{import IOneProps,{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface ILocalHandlerParams<Data extends IAnything=IAnything>{resultMap?:(json:Record<string,any>|null)=>Data|null;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;fallback?:(e:Error)=>void;}export interface ILocalHandlerResult<Data extends IAnything=IAnything>{data:Data|null;change:IOneProps<Data>['change'];}export const useLocalHandler:<Data extends unknown=any>(handler:OneHandler<Data>,{resultMap,onLoadBegin,onLoadEnd,fallback,}?:ILocalHandlerParams<Data>)=>ILocalHandlerResult<Data>;export default useLocalHandler;}declare module'react-declarative/components/One/api/useStaticHandler'{import{OneHandler}from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IStaticHandlerParams<Data extends IAnything=IAnything>{resultMap?:(json:Record<string,any>|null)=>Data|null;onLoadBegin?:()=>void;onLoadEnd?:(isOk:boolean)=>void;fallback?:(e:Error)=>void;}export const useStaticHandler:<Data extends unknown=any>(handler:OneHandler<Data>,{resultMap,onLoadBegin,onLoadEnd,fallback,}?:IStaticHandlerParams<Data>)=>OneHandler<Data>;export default useStaticHandler;}declare module'react-declarative/components/One/api/usePreventLeave'{import{BrowserHistory,MemoryHistory,HashHistory}from"history";import IOneProps from"react-declarative/model/IOneProps";import IAnything from"react-declarative/model/IAnything";export interface IPreventLeaveParams<Data=IAnything>{history?:BrowserHistory|MemoryHistory|HashHistory;onChange?:IOneProps<Data>['change'];onBlock?:()=>()=>void;onSave?:(data:Data)=>void|(Promise<void>);fallback?:(e:Error)=>void;}export interface IPreventLeaveReturn<Data=IAnything>{oneProps:{change:IOneProps<Data>['change'];invalidity:IOneProps<Data>['invalidity'];};data:Data|null;beginSave:()=>Promise<boolean>;afterSave:()=>void;}export const usePreventLeave:<Data=any>({history,onChange,onBlock,onSave,fallback,}?:IPreventLeaveParams<Data>)=>IPreventLeaveReturn<Data>;export default usePreventLeave;}declare module'react-declarative/components/One/components/SlotFactory'{export*from'react-declarative/components/One/components/SlotFactory/SlotFactory';export*from'react-declarative/components/One/components/SlotFactory/SlotContext';export*from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';export{default}from'react-declarative/components/One/components/SlotFactory/SlotFactory';}declare module'react-declarative/components/List/List'{import*as React from'react';import IListProps,{IListState}from'react-declarative/model/IListProps';import TypedField from'react-declarative/model/TypedField';import IAnything from'react-declarative/model/IAnything';import IRowData from'react-declarative/model/IRowData';import IField from'react-declarative/model/IField';export class List<FilterData extends IAnything=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<IAnything>>extends React.Component<IListProps<FilterData,RowData,Field>,IListState>{static defaultProps:Partial<IListProps>;constructor(props:IListProps<FilterData,RowData,Field>);componentDidUpdate:()=>void;componentDidMount:()=>void;componentWillUnmount:()=>void;renderInner:()=>JSX.Element;render:()=>JSX.Element;}export const ListTyped:<FilterData extends unknown=any,RowData extends IRowData=any>(props:IListProps<FilterData,RowData,TypedField<FilterData>>)=>JSX.Element;export default List;}declare module'react-declarative/components/List/slots'{export*from'react-declarative/components/List/slots/ActionAddSlot';export*from'react-declarative/components/List/slots/ActionFabSlot';export*from'react-declarative/components/List/slots/ActionMenuSlot';export*from'react-declarative/components/List/slots/BodyRowSlot';export*from'react-declarative/components/List/slots/CheckboxCellSlot';export*from'react-declarative/components/List/slots/CommonCellSlot';export*from'react-declarative/components/List/slots/HeadRowSlot';}declare module'react-declarative/components/List/hooks/useProps'{import*as React from'react';import IListProps,{IListCallbacks,IListState}from'react-declarative/model/IListProps';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';import IRowData from'react-declarative/model/IRowData';interface IPropContext<FilterData extends IAnything=IAnything,RowData extends IRowData=IAnything,Field extends IField=IField<FilterData>>extends Omit<IListProps<FilterData,RowData,Field>,keyof{limit:never;chips:never;isChooser:never;}>,IListState<FilterData,RowData>,IListCallbacks<FilterData,RowData>{children:React.ReactChild;}export const PropProvider:<FilterData extends unknown=any,RowData extends IRowData=any,Field extends IField<any>=IField<FilterData>>(props:IPropContext<FilterData,RowData,Field>)=>JSX.Element;export const useProps:<FilterData extends unknown=any,RowData extends IRowData=any,Field extends IField<any>=IField<FilterData>>()=>IPropContext<FilterData,RowData,Field>;export default useProps;}declare module'react-declarative/components/List/hooks/useCachedRows'{import React from'react';import IAnything from'react-declarative/model/IAnything';import IRowData,{RowId}from'react-declarative/model/IRowData';export const useCachedRows:<RowData extends IRowData=any>()=>IState<RowData>;interface ICachedRowsProviderProps{children:React.ReactNode;}interface IState<RowData extends IRowData=IAnything>{cachedRows:Map<RowId,RowData>;selectedRows:RowData[];}export const CachedRowsProvider:<RowData extends IRowData=any>({children,}:ICachedRowsProviderProps)=>JSX.Element;export default useCachedRows;}declare module'react-declarative/components/List/api/useLastPagination'{import{ListHandler,ListHandlerChips,ListHandlerSortModel,ListHandlerPagination}from"react-declarative/model/IListProps";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";interface IResult<FilterData=IAnything,RowData extends IRowData=IAnything>{data:IState<FilterData,RowData>;handler:ListHandler<FilterData,RowData>;}interface IState<FilterData=IAnything,RowData extends IRowData=IAnything>{filterData:FilterData;pagination:ListHandlerPagination;sort:ListHandlerSortModel<RowData>;chips:ListHandlerChips<RowData>;search:string;}export const useLastPagination:<FilterData=any,RowData extends IRowData=any>(upperHandler:ListHandler<FilterData,RowData>)=>IResult;export default useLastPagination;}declare module'react-declarative/components/List/api/useCachedPaginator'{import useArrayPaginator from"react-declarative/components/List/api/useArrayPaginator";export const useCachedPaginator:typeof useArrayPaginator;export default useCachedPaginator;}declare module'react-declarative/components/List/components/SlotFactory'{export*from'react-declarative/components/List/components/SlotFactory/SlotFactory';export*from'react-declarative/components/List/components/SlotFactory/SlotContext';export*from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';export{default}from'react-declarative/components/List/components/SlotFactory/SlotFactory';}declare module'react-declarative/components/Switch/Switch'{import*as React from'react';import{BrowserHistory}from'history';import{IFetchViewProps}from'react-declarative/components/FetchView';export interface ISwitchItem{path:string;element?:React.ComponentType<any>;guard?:()=>boolean|Promise<boolean>;prefetch?:(params:Record<string,any>)=>Record<string,any>|Promise<Record<string,any>>;unload?:(params:Record<string,any>)=>(Promise<void>|void);redirect?:string|((params:Record<string,any>)=>string|null);}export interface ISwitchProps{className?:string;style?:React.CSSProperties;items:ISwitchItem[];fallback?:(e:Error)=>void;history?:BrowserHistory;Forbidden?:React.ComponentType<any>;NotFound?:React.ComponentType<any>;Loader?:React.ComponentType<any>;Error?:React.ComponentType<any>;animation?:IFetchViewProps['animation'];onLoadStart?:()=>void;onLoadEnd?:(isOk?:boolean)=>void;throwError?:boolean;}export const Switch:({className,style,Loader,Forbidden,NotFound,Error,animation,history,fallback,items,onLoadStart,onLoadEnd,throwError,}:ISwitchProps)=>JSX.Element;export default Switch;}declare module'react-declarative/components/Scaffold/Scaffold'{import*as React from"react";import IMenuGroup from"react-declarative/model/IMenuGroup";interface IScaffoldProps{children:React.ReactChild;className?:string;style?:React.CSSProperties;title?:string;loader?:boolean;colored?:boolean;selected?:string;options?:IMenuGroup[];roles?:string[];onOptionClick?:(name:string)=>void;}export const Scaffold:{({children,className,style,selected,title,options,colored,loader,roles:currentRoles,onOptionClick,}:IScaffoldProps):JSX.Element;displayName:string;};export default Scaffold;}declare module'react-declarative/components/Breadcrumbs/Breadcrumbs'{import IOption from'react-declarative/model/IOption';interface IBreadcrumbsProps{onSave?:()=>void;onBack?:()=>void;onAction?:(action:string)=>void;actions?:IOption[];disabled?:boolean;title?:string;subtitle?:string;}export const Breadcrumbs:({onSave,onBack,onAction,actions,disabled,title,subtitle,}:IBreadcrumbsProps)=>JSX.Element;export default Breadcrumbs;}declare module'react-declarative/components/ActionMenu/ActionMenu'{import*as React from'react';import{IAsyncProps}from'react-declarative/components/Async';import IOption from'react-declarative/model/IOption';export interface IActionMenuProps<T extends any=object>{options?:Partial<IOption>[];transparent?:boolean;disabled?:boolean;onAction?:(action:string)=>void;onToggle?:(opened:boolean)=>void;fallback?:(e:Error)=>void;throwError?:boolean;className?:string;style?:React.CSSProperties;payload?:IAsyncProps<T>['payload'];onLoadStart?:IAsyncProps<T>['onLoadStart'];onLoadEnd?:IAsyncProps<T>['onLoadEnd'];}export const ActionMenu:<T extends unknown=object>({options,transparent,disabled,throwError,fallback,onToggle,onAction,payload,className,style,onLoadStart,onLoadEnd,}:IActionMenuProps<T>)=>JSX.Element;export default ActionMenu;}declare module'react-declarative/components/ConstraintView/ConstraintView'{import*as React from'react';import{IAutoSizerProps,IChildParams}from'react-declarative/components/AutoSizer';import IAnything from'react-declarative/model/IAnything';interface IConstraintViewProps<T extends IAnything=IAnything>extends Omit<IAutoSizerProps<T>,keyof{children:never;}>{phoneView?:React.ComponentType<any>;tabletView?:React.ComponentType<any>;desktopView?:React.ComponentType<any>;onViewChanged?:(name:string)=>void;params?:IChildParams<T>;}export const ConstraintView:<T extends unknown=any>({desktopView:Desktop,tabletView:Tablet,phoneView:Phone,onViewChanged,params,...otherProps}:IConstraintViewProps<T>)=>JSX.Element;export default ConstraintView;}declare module'react-declarative/components/ScrollView/ScrollView'{import*as React from'react';import{IAutoSizerProps}from'react-declarative/components/AutoSizer';import IAnything from'react-declarative/model/IAnything';export const SCROLL_VIEW_TARGER="react-declarative__scrollViewTarget";interface IScrollViewProps<T extends IAnything=IAnything>{children:React.ReactNode;className?:string;style?:React.CSSProperties;center?:boolean;payload?:IAutoSizerProps<T>["payload"];heightRequest?:IAutoSizerProps<T>["heightRequest"];widthRequest?:IAutoSizerProps<T>["widthRequest"];}export const ScrollView:<T extends unknown=any>({children,className,style,payload,heightRequest,widthRequest,center,}:IScrollViewProps<T>)=>JSX.Element;export default ScrollView;}declare module'react-declarative/components/AutoSizer/AutoSizer'{import*as React from"react";import ResizeEmitter from"react-declarative/components/AutoSizer/ResizeEmitter";import ISize from"react-declarative/model/ISize";export interface IChildParams<T extends unknown=object>extends ISize{payload:T;}export interface IAutoSizerProps<T extends unknown=object>{children:(s:IChildParams<T>)=>any;className?:string;defaultHeight?:number;defaultWidth?:number;disableHeight?:boolean;disableWidth?:boolean;onResize?:(s:ISize)=>void;heightRequest?:(height:number)=>number;widthRequest?:(width:number)=>number;style?:React.CSSProperties;keepFlow?:boolean;target?:HTMLElement;delay?:number;closest?:string;selector?:string;payload?:T;}export const AutoSizer:{<T extends unknown=object>({defaultHeight,defaultWidth,onResize,disableHeight,disableWidth,heightRequest,widthRequest,style,className,children,target,payload,keepFlow,delay,closest,selector,}:IAutoSizerProps<T>):JSX.Element;_emitters:WeakMap<HTMLElement,ResizeEmitter>;};export default AutoSizer;}declare module'react-declarative/components/FadeView/FadeView'{import*as React from'react';import{IFadeContainerProps}from'react-declarative/components/FadeView/components/FadeContainer';import{IAutoSizerProps}from'react-declarative/components/AutoSizer';import IAnything from'react-declarative/model/IAnything';type FadeContainerT=Pick<IFadeContainerProps,keyof{Fade:never;color:never;zIndex:never;disableBottom:never;disableRight:never;}>;interface IFadeView<T extends IAnything=IAnything>extends FadeContainerT{className?:string;style?:React.CSSProperties;children:React.ReactChild;payload?:IAutoSizerProps<T>["payload"];heightRequest?:IAutoSizerProps<T>["heightRequest"];widthRequest?:IAutoSizerProps<T>["widthRequest"];}export const FadeView:<T extends unknown=any>({className,style,children,Fade,color,zIndex,disableBottom,disableRight,payload,heightRequest,widthRequest,}:IFadeView<T>)=>JSX.Element;export default FadeView;}declare module'react-declarative/components/FetchView/FetchView'{import*as React from'react';import{IAsyncProps}from'react-declarative/components/Async';import{IRevealProps}from'react-declarative/components/FetchView/components/Reveal';import IAnything from'react-declarative/model/IAnything';type FetchState<T extends any=object>=((payload:T)=>Promise<IAnything>)|((payload:T)=>IAnything);export interface IFetchViewProps<P extends any=object>extends Omit<IAsyncProps<P>,keyof{children:never;}>{animation?:IRevealProps['animation'];className?:string;style?:React.CSSProperties;state:FetchState<P>|(FetchState<P>[]);children:(...data:IAnything[])=>React.ReactNode;}export const FetchView:<P extends unknown=object>({animation,className,style,Loader,Error,onLoadEnd,onLoadStart,children,state,payload,...otherProps}:IFetchViewProps<P>)=>JSX.Element;export default FetchView;}declare module'react-declarative/components/Async/Async'{import*as React from'react';export interface IAsyncProps<T extends any=object>{children:(p:T)=>(Result|Promise<Result>);fallback?:(e:Error)=>void;Loader?:React.ComponentType;Error?:React.ComponentType;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;payload?:T;throwError?:boolean;}type Result=React.ReactNode;export const Async:<T extends unknown=object>({children,fallback,Loader,Error,onLoadStart,onLoadEnd,payload,throwError,}:IAsyncProps<T>)=>JSX.Element;export default Async;}declare module'react-declarative/components/If/If'{import*as React from'react';export interface IIfProps<T extends any=object>{condition:boolean|((payload:T)=>boolean|Promise<boolean>);children:React.ReactNode;fallback?:(e:Error)=>void;onLoadStart?:()=>void;onLoadEnd?:(isOk:boolean)=>void;payload?:T;throwError?:boolean;}export const If:<T extends unknown=object>({children,condition,fallback,onLoadStart,onLoadEnd,payload,throwError,}:IIfProps<T>)=>JSX.Element|null;export default If;}declare module'react-declarative/components/common/Group/Group'{import*as React from"react";import{IManagedLayout,PickProp}from"react-declarative/model/IManaged";import IAnything from"react-declarative/model/IAnything";import IField from"react-declarative/model/IField";export interface IGroupProps<Data=IAnything>extends IManagedLayout{style?:PickProp<IField<Data>,'style'>;className?:PickProp<IField<Data>,'className'>;}interface IGroupPrivate{children:React.ReactChild;isItem?:boolean;onFocus?:()=>void;}export const Group:{({className,columns,phoneColumns,tabletColumns,desktopColumns,children,isItem,style,columnsOverride,fieldRightMargin,fieldBottomMargin,onFocus,}:IGroupProps&IGroupPrivate,ref:React.Ref<HTMLDivElement>):JSX.Element;displayName:string;};const _default:React.ForwardRefExoticComponent<IGroupProps<any>&IGroupPrivate&React.RefAttributes<HTMLDivElement>>;export default _default;}declare module'react-declarative/components/common/Outline/Outline'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IOutlineProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IOutlinePrivate<Data=IAnything>{children:React.ReactChild;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;}export const Outline:{({className,columnsOverride,style,children,}:IOutlineProps&IOutlinePrivate):JSX.Element;displayName:string;};export default Outline;}declare module'react-declarative/components/common/Paper/Paper'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IPaperProps<Data=IAnything>{className?:PickProp<IField<Data>,'className'>;style?:PickProp<IField<Data>,'style'>;}interface IPaperPrivate<Data=IAnything>{children:React.ReactChild;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;}export const Paper:{({className,style,children,columnsOverride,}:IPaperProps&IPaperPrivate):JSX.Element;displayName:string;};export default Paper;}declare module'react-declarative/components/common/Expansion/Expansion'{import*as React from'react';import{PickProp}from'react-declarative/model/IManaged';import IAnything from'react-declarative/model/IAnything';import IField from'react-declarative/model/IField';export interface IExpansionProps<Data=IAnything>{title?:PickProp<IField<Data>,'title'>;style?:PickProp<IField<Data>,'style'>;description?:PickProp<IField<Data>,'description'>;className?:PickProp<IField<Data>,'className'>;}interface IExpansionPrivate<Data=IAnything>{children:React.ReactChild;columnsOverride?:PickProp<IField<Data>,'columnsOverride'>;}export const Expansion:{({title,description,className,columnsOverride,style,children,}:IExpansionProps&IExpansionPrivate):JSX.Element;displayName:string;};export default Expansion;}declare module'react-declarative/components/One/slots/CheckBoxSlot'{export*from'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot';export*from'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot';export{default}from'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot';}declare module'react-declarative/components/One/slots/ComboSlot'{export*from'react-declarative/components/One/slots/ComboSlot/IComboSlot';export*from'react-declarative/components/One/slots/ComboSlot/ComboSlot';export{default}from'react-declarative/components/One/slots/ComboSlot/ComboSlot';}declare module'react-declarative/components/One/slots/ItemsSlot'{export*from'react-declarative/components/One/slots/ItemsSlot/IItemsSlot';export*from'react-declarative/components/One/slots/ItemsSlot/ItemsSlot';export{default}from'react-declarative/components/One/slots/ItemsSlot/ItemsSlot';}declare module'react-declarative/components/One/slots/LineSlot'{export*from'react-declarative/components/One/slots/LineSlot/ILineSlot';export*from'react-declarative/components/One/slots/LineSlot/LineSlot';export{default}from'react-declarative/components/One/slots/LineSlot/LineSlot';}declare module'react-declarative/components/One/slots/ProgressSlot'{export*from'react-declarative/components/One/slots/ProgressSlot/IProgressSlot';export*from'react-declarative/components/One/slots/ProgressSlot/ProgressSlot';export{default}from'react-declarative/components/One/slots/ProgressSlot/ProgressSlot';}declare module'react-declarative/components/One/slots/RadioSlot'{export*from'react-declarative/components/One/slots/RadioSlot/IRadioSlot';export*from'react-declarative/components/One/slots/RadioSlot/RadioSlot';export{default}from'react-declarative/components/One/slots/RadioSlot/RadioSlot';}declare module'react-declarative/components/One/slots/RatingSlot'{export*from'react-declarative/components/One/slots/RatingSlot/IRatingSlot';export*from'react-declarative/components/One/slots/RatingSlot/RatingSlot';export{default}from'react-declarative/components/One/slots/RatingSlot/RatingSlot';}declare module'react-declarative/components/One/slots/SliderSlot'{export*from'react-declarative/components/One/slots/SliderSlot/ISliderSlot';export*from'react-declarative/components/One/slots/SliderSlot/SliderSlot';export{default}from'react-declarative/components/One/slots/SliderSlot/SliderSlot';}declare module'react-declarative/components/One/slots/SwitchSlot'{export*from'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot';export*from'react-declarative/components/One/slots/SwitchSlot/SwitchSlot';export{default}from'react-declarative/components/One/slots/SwitchSlot/SwitchSlot';}declare module'react-declarative/components/One/slots/TextSlot'{export*from'react-declarative/components/One/slots/TextSlot/ITextSlot';export*from'react-declarative/components/One/slots/TextSlot/TextSlot';export{default}from'react-declarative/components/One/slots/TextSlot/TextSlot';}declare module'react-declarative/components/One/slots/TypographySlot'{export*from'react-declarative/components/One/slots/TypographySlot/ITypographySlot';export*from'react-declarative/components/One/slots/TypographySlot/TypographySlot';export{default}from'react-declarative/components/One/slots/TypographySlot/TypographySlot';}declare module'react-declarative/components/One/components/makeField/makeField'{import*as React from'react';import IAnything from'react-declarative/model/IAnything';import IManaged from'react-declarative/model/IManaged';import IEntity from'react-declarative/model/IEntity';import IField from'react-declarative/model/IField';interface IConfig<Data=IAnything>{skipDebounce?:boolean;defaultProps?:Partial<Omit<IField<Data>,keyof{fields:never;child:never;}>>;}export function makeField(Component:React.FC<IManaged>,config?:IConfig):{<Data extends unknown=any>({className,columns,phoneColumns,tabletColumns,desktopColumns,isDisabled,isVisible,isInvalid,change,fallback,ready,compute,object,name,focus,blur,invalidity,disabled:fieldDisabled,readonly:fieldReadonly,autoFocus,style,groupRef:ref,fieldRightMargin,fieldBottomMargin,...otherProps}:IEntity<Data>):JSX.Element;displayName:string;};export default makeField;}declare module'react-declarative/components/One/components/SlotFactory/SlotFactory'{import*as React from'react';import ISlotFactoryContext from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';interface ISlotFactoryProps extends ISlotFactoryContext{children:React.ReactNode;}export const SlotFactory:({children,...currentSlots}:Partial<ISlotFactoryProps>)=>JSX.Element;export default SlotFactory;}declare module'react-declarative/components/One/components/SlotFactory/SlotContext'{import ISlotFactoryContext from'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext';export const defaultSlots:{CheckBox:({disabled,onChange,title,value,}:import("../..").ICheckBoxSlot)=>JSX.Element;Combo:({value,disabled,fieldReadonly,description,placeholder,outlined,itemList,keepSync,title,dirty,invalid,tr,onChange,}:import("../..").IComboSlot)=>JSX.Element;Items:({value,disabled,fieldReadonly,description,placeholder,outlined,itemList,keepSync,dirty,invalid,title,tr,onChange,}:import("../..").IItemsSlot)=>JSX.Element;Line:({title,}:import("../..").ILineSlot)=>JSX.Element;Radio:({disabled,value,onChange,title,radioValue,name,}:import("../..").IRadioSlot)=>JSX.Element;Rating:({value,disabled,fieldReadonly,title,name,onChange,}:import("../..").IRatingSlot)=>JSX.Element;Progress:({maxPercent,showPercentLabel,value,}:import("../..").IProgressSlot)=>JSX.Element;Typography:({value,placeholder,typoVariant,style,}:import("../..").ITypographySlot)=>JSX.Element;Text:({invalid,value,disabled,readonly,inputType,description,outlined,title,leadingIcon:li,trailingIcon:ti,leadingIconClick:lic,trailingIconClick:tic,inputRows:rows,placeholder,inputAutocomplete:autoComplete,inputFormatterSymbol:symbol,inputFormatterAllowed:allowed,inputFormatterTemplate:template,inputFormatter,dirty,loading,autoFocus,inputRef,onChange,name,}:import("../..").ITextSlot)=>JSX.Element;Switch:({disabled,value,onChange,title,}:import("../..").ISwitchSlot)=>JSX.Element;Slider:({value,onChange,leadingIcon:li,trailingIcon:ti,leadingIconClick:lic,trailingIconClick:tic,labelFormatSlider,stepSlider,maxSlider,minSlider,}:import("../..").ISliderSlot)=>JSX.Element;};export const SlotContext:import("react").Context<ISlotFactoryContext>;export default SlotContext;}declare module'react-declarative/components/One/components/SlotFactory/ISlotFactoryContext'{import{ComponentType}from'react';import{IProgressSlot}from'react-declarative/components/One/slots/ProgressSlot';import{ICheckBoxSlot}from'react-declarative/components/One/slots/CheckBoxSlot';import{IItemsSlot}from'react-declarative/components/One/slots/ItemsSlot';import{IComboSlot}from'react-declarative/components/One/slots/ComboSlot';import{ILineSlot}from'react-declarative/components/One/slots/LineSlot';import{IRadioSlot}from'react-declarative/components/One/slots/RadioSlot';import{IRatingSlot}from'react-declarative/components/One/slots/RatingSlot';import{ITypographySlot}from'react-declarative/components/One/slots/TypographySlot';import{ITextSlot}from'react-declarative/components/One/slots/TextSlot';import{ISwitchSlot}from'react-declarative/components/One/slots/SwitchSlot';import{ISliderSlot}from'react-declarative/components/One/slots/SliderSlot';export interface ISlotFactoryContext{CheckBox:ComponentType<ICheckBoxSlot>;Combo:ComponentType<IComboSlot>;Items:ComponentType<IItemsSlot>;Line:ComponentType<ILineSlot>;Progress:ComponentType<IProgressSlot>;Radio:ComponentType<IRadioSlot>;Rating:ComponentType<IRatingSlot>;Typography:ComponentType<ITypographySlot>;Text:ComponentType<ITextSlot>;Switch:ComponentType<ISwitchSlot>;Slider:ComponentType<ISliderSlot>;}export default ISlotFactoryContext;}declare module'react-declarative/components/List/slots/ActionAddSlot'{export*from'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot';export*from'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot';export{default}from'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot';}declare module'react-declarative/components/List/slots/ActionFabSlot'{export*from'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot';export*from'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot';export{default}from'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot';}declare module'react-declarative/components/List/slots/ActionMenuSlot'{export*from'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot';export*from'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot';export{default}from'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot';}declare module'react-declarative/components/List/slots/BodyRowSlot'{export*from'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot';export*from'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot';export{default}from'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot';}declare module'react-declarative/components/List/slots/CheckboxCellSlot'{export*from'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot';export*from'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot';export{default}from'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot';}declare module'react-declarative/components/List/slots/CommonCellSlot'{export*from'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot';export*from'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot';export{default}from'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot';}declare module'react-declarative/components/List/slots/HeadRowSlot'{export*from'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot';export*from'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot';export{default}from'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot';}declare module'react-declarative/components/List/components/SlotFactory/SlotFactory'{import*as React from'react';import ISlotFactoryContext from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';interface ISlotFactoryProps extends ISlotFactoryContext{children:React.ReactNode;}export const SlotFactory:({children,...currentSlots}:Partial<ISlotFactoryProps>)=>JSX.Element;export default SlotFactory;}declare module'react-declarative/components/List/components/SlotFactory/SlotContext'{import ISlotFactoryContext from'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext';export const defaultSlots:{BodyRow:<RowData extends import("../../../..").IRowData=any>(props:import("../..").IBodyRowSlot<RowData>)=>JSX.Element;CheckboxCell:<RowData_1 extends import("../../../..").IRowData=any>({row,}:import("./components/CheckboxCell").ICheckboxCellProps<RowData_1>)=>JSX.Element;CommonCell:<RowData_2 extends import("../../../..").IRowData=any>({column,row,onMenuToggle,onAction,}:import("../..").ICommonCellSlot<RowData_2>)=>any;HeadRow:(props:import("../..").IHeadRowSlot<any>)=>JSX.Element;ActionAdd:({action,isVisible,isDisabled,}:import("../..").IActionAddSlot<any>)=>JSX.Element;ActionMenu:({options,}:import("../..").IActionMenuSlot)=>JSX.Element;ActionFab:({action,icon:Icon,isVisible,isDisabled,}:import("../..").IActionFabSlot<any>)=>JSX.Element;};export const SlotContext:import("react").Context<ISlotFactoryContext>;export default SlotContext;}declare module'react-declarative/components/List/components/SlotFactory/ISlotFactoryContext'{import{ComponentType}from'react';import{IBodyRowSlot}from'react-declarative/components/List/slots/BodyRowSlot';import{ICheckboxCellSlot}from'react-declarative/components/List/slots/CheckboxCellSlot';import{ICommonCellSlot}from'react-declarative/components/List/slots/CommonCellSlot';import{IHeadRowSlot}from'react-declarative/components/List/slots/HeadRowSlot';import{IActionAddSlot}from'react-declarative/components/List/slots/ActionAddSlot';import{IActionMenuSlot}from'react-declarative/components/List/slots/ActionMenuSlot';import{IActionFabSlot}from'react-declarative/components/List/slots/ActionFabSlot';export interface ISlotFactoryContext{BodyRow:ComponentType<IBodyRowSlot>;CheckboxCell:ComponentType<ICheckboxCellSlot>;CommonCell:ComponentType<ICommonCellSlot>;HeadRow:ComponentType<IHeadRowSlot>;ActionAdd:ComponentType<IActionAddSlot>;ActionFab:ComponentType<IActionFabSlot>;ActionMenu:ComponentType<IActionMenuSlot>;}export default ISlotFactoryContext;}declare module'react-declarative/components/AutoSizer/ResizeEmitter'{type Callback=()=>void;export class ResizeEmitter{constructor(target:HTMLElement,onDispose:Callback);subscribe:(fn:Callback)=>void;unsubscribe:(fn:Callback)=>void;broadcast:()=>void;clearTimeout:()=>void;tryDispose:()=>void;}export default ResizeEmitter;}declare module'react-declarative/components/FadeView/components/FadeContainer'{import*as React from'react';import DefaultFade from'react-declarative/components/FadeView/components/DefaultFade';export interface IFadeContainerProps{className?:string;Fade?:typeof DefaultFade;style?:React.CSSProperties;children:React.ReactChild;color?:string;selector?:string;zIndex?:number;disableBottom?:boolean;disableRight?:boolean;}export const FadeContainer:({className,style,color,children,disableBottom,disableRight,zIndex,Fade,selector,}:IFadeContainerProps)=>JSX.Element;export default FadeContainer;}declare module'react-declarative/components/FetchView/components/Reveal'{import*as React from'react';export interface IRevealProps extends React.HTMLProps<HTMLDivElement>{animation?:'slideDown'|'fadeIn'|'scale'|'none';appear?:boolean;}export const Reveal:({children,className,animation,appear,...otherProps}:IRevealProps)=>JSX.Element;export default Reveal;}declare module'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot'{import{ICheckboxFieldPrivate,ICheckboxFieldProps}from"react-declarative/components/One/fields/CheckboxField";export interface ICheckBoxSlot extends ICheckboxFieldProps,ICheckboxFieldPrivate{}export default ICheckBoxSlot;}declare module'react-declarative/components/One/slots/CheckBoxSlot/CheckBoxSlot'{import ICheckBoxSlot from'react-declarative/components/One/slots/CheckBoxSlot/ICheckBoxSlot';export const CheckBoxSlot:(props:ICheckBoxSlot)=>JSX.Element;export default CheckBoxSlot;}declare module'react-declarative/components/One/slots/ComboSlot/IComboSlot'{import{IComboFieldPrivate,IComboFieldProps}from"react-declarative/components/One/fields/ComboField";export interface IComboSlot extends IComboFieldProps,IComboFieldPrivate{}export default IComboSlot;}declare module'react-declarative/components/One/slots/ComboSlot/ComboSlot'{import IComboSlot from'react-declarative/components/One/slots/ComboSlot/IComboSlot';export const ComboSlot:(props:IComboSlot)=>JSX.Element;export default ComboSlot;}declare module'react-declarative/components/One/slots/ItemsSlot/IItemsSlot'{import{IItemsFieldPrivate,IItemsFieldProps}from"react-declarative/components/One/fields/ItemsField";export interface IItemsSlot extends IItemsFieldProps,IItemsFieldPrivate{}export default IItemsSlot;}declare module'react-declarative/components/One/slots/ItemsSlot/ItemsSlot'{import IItemsSlot from'react-declarative/components/One/slots/ItemsSlot/IItemsSlot';export const ItemsSlot:(props:IItemsSlot)=>JSX.Element;export default ItemsSlot;}declare module'react-declarative/components/One/slots/LineSlot/ILineSlot'{import{ILineFieldProps}from"react-declarative/components/One/fields/LineField";export interface ILineSlot extends ILineFieldProps{}export default ILineSlot;}declare module'react-declarative/components/One/slots/LineSlot/LineSlot'{import ILineSlot from'react-declarative/components/One/slots/LineSlot/ILineSlot';export const LineSlot:(props:ILineSlot)=>JSX.Element;export default LineSlot;}declare module'react-declarative/components/One/slots/ProgressSlot/IProgressSlot'{import{IProgressFieldProps,IProgressFieldPrivate}from"react-declarative/components/One/fields/ProgressField";export interface IProgressSlot extends IProgressFieldProps,IProgressFieldPrivate{}export default IProgressSlot;}declare module'react-declarative/components/One/slots/ProgressSlot/ProgressSlot'{import IProgressSlot from'react-declarative/components/One/slots/ProgressSlot/IProgressSlot';export const ProgressSlot:(props:IProgressSlot)=>JSX.Element;export default ProgressSlot;}declare module'react-declarative/components/One/slots/RadioSlot/IRadioSlot'{import{IRadioFieldPrivate,IRadioFieldProps}from"react-declarative/components/One/fields/RadioField";export interface IRadioSlot extends IRadioFieldProps,IRadioFieldPrivate{}export default IRadioSlot;}declare module'react-declarative/components/One/slots/RadioSlot/RadioSlot'{import IRadioSlot from'react-declarative/components/One/slots/RadioSlot/IRadioSlot';export const RadioSlot:(props:IRadioSlot)=>JSX.Element;export default RadioSlot;}declare module'react-declarative/components/One/slots/RatingSlot/IRatingSlot'{import{IRatingFieldProps,IRatingFieldPrivate}from"react-declarative/components/One/fields/RatingField";export interface IRatingSlot extends IRatingFieldProps,IRatingFieldPrivate{}export default IRatingSlot;}declare module'react-declarative/components/One/slots/RatingSlot/RatingSlot'{import IRatingSlot from'react-declarative/components/One/slots/RatingSlot/IRatingSlot';export const RatingSlot:(props:IRatingSlot)=>JSX.Element;export default RatingSlot;}declare module'react-declarative/components/One/slots/SliderSlot/ISliderSlot'{import{ISliderFieldPrivate,ISliderFieldProps}from"react-declarative/components/One/fields/SliderField";export interface ISliderSlot extends ISliderFieldProps,ISliderFieldPrivate{}export default ISliderSlot;}declare module'react-declarative/components/One/slots/SliderSlot/SliderSlot'{import ISliderSlot from'react-declarative/components/One/slots/SliderSlot/ISliderSlot';export const SliderSlot:(props:ISliderSlot)=>JSX.Element;export default SliderSlot;}declare module'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot'{import{ISwitchFieldPrivate,ISwitchFieldProps}from"react-declarative/components/One/fields/SwitchField";export interface ISwitchSlot extends ISwitchFieldProps,ISwitchFieldPrivate{}export default ISwitchSlot;}declare module'react-declarative/components/One/slots/SwitchSlot/SwitchSlot'{import ISwitchSlot from'react-declarative/components/One/slots/SwitchSlot/ISwitchSlot';export const SwitchSlot:(props:ISwitchSlot)=>JSX.Element;export default SwitchSlot;}declare module'react-declarative/components/One/slots/TextSlot/ITextSlot'{import{ITextFieldProps,ITextFieldPrivate}from"react-declarative/components/One/fields/TextField";type ITextBase=ITextFieldProps&ITextFieldPrivate;export interface ITextSlot extends ITextBase{}export default ITextSlot;}declare module'react-declarative/components/One/slots/TextSlot/TextSlot'{import ITextSlot from'react-declarative/components/One/slots/TextSlot/ITextSlot';export const TextSlot:(props:ITextSlot)=>JSX.Element;export default TextSlot;}declare module'react-declarative/components/One/slots/TypographySlot/ITypographySlot'{import{ITypographyFieldPrivate,ITypographyFieldProps}from"react-declarative/components/One/fields/TypographyField";export interface ITypographySlot extends ITypographyFieldProps,ITypographyFieldPrivate{}export default ITypographySlot;}declare module'react-declarative/components/One/slots/TypographySlot/TypographySlot'{import ITypographySlot from'react-declarative/components/One/slots/TypographySlot/ITypographySlot';export const TypographySlot:(props:ITypographySlot)=>JSX.Element;export default TypographySlot;}declare module'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IActionAddSlot<RowData extends IRowData=IAnything>{action?:string;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export default IActionAddSlot;}declare module'react-declarative/components/List/slots/ActionAddSlot/ActionAddSlot'{import IActionAddSlot from'react-declarative/components/List/slots/ActionAddSlot/IActionAddSlot';export const ActionAddSlot:(props:IActionAddSlot)=>JSX.Element;export default ActionAddSlot;}declare module'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot'{import React from"react";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";export interface IActionFabSlot<RowData extends IRowData=IAnything>{action?:string;icon?:React.ComponentType<any>;isVisible?:(selectedRows:RowData[])=>Promise<boolean>|boolean;isDisabled?:(selectedRows:RowData[])=>Promise<boolean>|boolean;}export default IActionFabSlot;}declare module'react-declarative/components/List/slots/ActionFabSlot/ActionFabSlot'{import IActionFabSlot from'react-declarative/components/List/slots/ActionFabSlot/IActionFabSlot';export const ActionFabSlot:(props:IActionFabSlot)=>JSX.Element;export default ActionFabSlot;}declare module'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot'{import{IListActionOption}from"react-declarative/model/IListProps";export interface IActionMenuSlot{options?:Partial<IListActionOption>[];}export default IActionMenuSlot;}declare module'react-declarative/components/List/slots/ActionMenuSlot/ActionMenuSlot'{import IActionMenuSlot from'react-declarative/components/List/slots/ActionMenuSlot/IActionMenuSlot';export const ActionMenuSlot:(props:IActionMenuSlot)=>JSX.Element;export default ActionMenuSlot;}declare module'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type BodyColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface IBodyRowSlot<RowData extends IRowData=IAnything>{fullWidth:number;row:RowData;columns:BodyColumn<RowData>[];mode:DisplayMode;}export default IBodyRowSlot;}declare module'react-declarative/components/List/slots/BodyRowSlot/BodyRowSlot'{import IBodyRowSlot from'react-declarative/components/List/slots/BodyRowSlot/IBodyRowSlot';export const BodyRowSlot:(props:IBodyRowSlot)=>JSX.Element;export default BodyRowSlot;}declare module'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import{ICheckboxCellProps}from"react-declarative/components/List/components/SlotFactory/components/CheckboxCell/CheckboxCell";export interface ICheckboxCellSlot<RowData extends IRowData=IAnything>extends ICheckboxCellProps<RowData>{}export default ICheckboxCellSlot;}declare module'react-declarative/components/List/slots/CheckboxCellSlot/CheckboxCellSlot'{import ICheckboxCellSlot from'react-declarative/components/List/slots/CheckboxCellSlot/ICheckboxCellSlot';export const CheckboxCellSlot:(props:ICheckboxCellSlot)=>JSX.Element;export default CheckboxCellSlot;}declare module'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot'{import{IActionMenuProps}from"react-declarative/components/ActionMenu";import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type CommonCellColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface ICommonCellSlot<RowData extends IRowData=IAnything>{column:CommonCellColumn<RowData>;row:RowData;idx:number;fullWidth:number;mode:DisplayMode;onMenuToggle:IActionMenuProps['onToggle'];onAction:IActionMenuProps['onAction'];}export default ICommonCellSlot;}declare module'react-declarative/components/List/slots/CommonCellSlot/CommonCellSlot'{import ICommonCellSlot from'react-declarative/components/List/slots/CommonCellSlot/ICommonCellSlot';export const CommonCellSlot:(props:ICommonCellSlot)=>JSX.Element;export default CommonCellSlot;}declare module'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot'{import IAnything from"react-declarative/model/IAnything";import IRowData from"react-declarative/model/IRowData";import IColumn from"react-declarative/model/IColumn";import DisplayMode from"react-declarative/model/DisplayMode";export type HeadColumn<RowData extends IRowData=IAnything>=Omit<IColumn<RowData>,keyof{width:never;}>&{width:string;};export interface IHeadRowSlot<RowData extends IRowData=IAnything>{columns:HeadColumn<RowData>[];fullWidth:number;mode:DisplayMode;}export default IHeadRowSlot;}declare module'react-declarative/components/List/slots/HeadRowSlot/HeadRowSlot'{import IHeadRowSlot from'react-declarative/components/List/slots/HeadRowSlot/IHeadRowSlot';export const HeadRowSlot:(props:IHeadRowSlot)=>JSX.Element;export default HeadRowSlot;}declare module'react-declarative/components/FadeView/components/DefaultFade'{interface IDefaultFadeProps{className:string;visible:boolean;zIndex:number;position:'bottom'|'right';color?:string;none:boolean;}export const DefaultFade:({className,visible,color,none,position,zIndex,}:IDefaultFadeProps)=>JSX.Element;export default DefaultFade;}declare module'react-declarative/model/DisplayMode'{export enum DisplayMode{Phone="phone",Tablet="tablet",Desktop="desktop"}export default DisplayMode;}declare module'react-declarative/components/List/components/SlotFactory/components/CheckboxCell/CheckboxCell'{import IRowData from'react-declarative/model/IRowData';import IAnything from'react-declarative/model/IAnything';export interface ICheckboxCellProps<RowData extends IRowData=IAnything>{row:RowData;}export const CheckboxCell:<RowData extends IRowData=any>({row,}:ICheckboxCellProps<RowData>)=>JSX.Element;export default CheckboxCell;}